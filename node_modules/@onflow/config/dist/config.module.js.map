{"version":3,"file":"config.module.js","sources":["../../util-invariant/src/index.js","../../util-logger/src/util-logger.js","../utils/utils.js","../src/config.js"],"sourcesContent":["/**\n * Asserts fact is true, otherwise throw an error with invariant message\n * @param {boolean} fact\n * @param {string} msg\n * @param {Array} rest\n * @returns {void}\n */\nexport function invariant(fact, msg, ...rest) {\n  if (!fact) {\n    const error = new Error(`INVARIANT ${msg}`)\n    error.stack = error.stack\n      .split(\"\\n\")\n      .filter(d => !/at invariant/.test(d))\n      .join(\"\\n\")\n    console.error(\"\\n\\n---\\n\\n\", error, \"\\n\\n\", ...rest, \"\\n\\n---\\n\\n\")\n    throw error\n  }\n}\n","import {config} from \"@onflow/config\"\n\n/**\n * The levels of the logger\n * \n * @typedef {Object} LEVELS\n * @property {number} debug - The debug level\n * @property {number} info - The info level\n * @property {number} log - The log level\n * @property {number} warn - The warn level\n * @property {number} error - The error level\n * \n */\nexport const LEVELS = Object.freeze({\n  debug: 5,\n  info: 4,\n  log: 3,\n  warn: 2,\n  error: 1,\n})\n\n/**\n * Builds a message formatted for the logger\n * \n * @param {Object} options - The options for the log\n * @param {string} options.title - The title of the log\n * @param {string} options.message - The message of the log\n * @returns {Array<string>} - The message formatted for the logger\n * \n * @example\n * buildLoggerMessageArgs({ title: \"My Title\", message: \"My Message\" })\n */\nconst buildLoggerMessageArgs = ({title, message}) => {\n  return [\n    `\n    %c${title}\n    ============================\n\n    ${message}\n\n    ============================\n    `\n      .replace(/\\n[^\\S\\r\\n]+/g, \"\\n\")\n      .trim(),\n    ,\n    \"font-weight:bold;font-family:monospace;\",\n  ]\n}\n\n/**\n * Logs messages based on the level of the message and the level set in the config\n * \n * @param {Object} options - The options for the log\n * @param {string} options.title - The title of the log\n * @param {string} options.message - The message of the log\n * @param {number} options.level - The level of the log\n * @param {boolean} options.always - Whether to always show the log\n * @returns {Promise<void>}\n * \n * @example\n * log({ title: \"My Title\", message: \"My Message\", level: LEVELS.warn, always: false })\n * \n */\nexport const log = async ({title, message, level, always = false}) => {\n  const configLoggerLevel = await config.get(\"logger.level\", LEVELS.warn)\n\n  // If config level is below message level then don't show it\n  if (!always && configLoggerLevel < level) return\n\n  const loggerMessageArgs = buildLoggerMessageArgs({title, message})\n\n  switch (level) {\n    case LEVELS.debug:\n      console.debug(...loggerMessageArgs)\n      break\n    case LEVELS.info:\n      console.info(...loggerMessageArgs)\n      break\n    case LEVELS.warn:\n      console.warn(...loggerMessageArgs)\n      break\n    case LEVELS.error:\n      console.error(...loggerMessageArgs)\n      break\n    default:\n      console.log(...loggerMessageArgs)\n  }\n}\n\n/**\n * Logs a deprecation notice\n * \n * @param {Object} options - The options for the log\n * @param {string} options.pkg - The package that is being deprecated\n * @param {string} options.subject - The subject of the deprecation\n * @param {string} options.transition - The transition path for the deprecation\n * @param {number} options.level - The level of the log\n * @param {string} options.message - The message of the log\n * @param {Function} options.callback - A callback to run after the log\n * @returns {Promise<void>}\n * \n * @example\n * log.deprecate({ pkg: \"@onflow/fcl\", subject: \"Some item\", transition: \"https://github.com/onflow/flow-js-sdk\", message: \"Descriptive message\", level: LEVELS.warn, callback: () => {} })\n * \n */\nlog.deprecate = ({\n  pkg,\n  subject,\n  transition,\n  level = LEVELS.warn,\n  message = \"\",\n  callback = null,\n}) => {\n  const capitalizeFirstLetter = string => {\n    return string.charAt(0).toUpperCase() + string.slice(1)\n  }\n\n  const logMessage = () =>\n    log({\n      title: `${pkg ? pkg + \" \" : \"\"}Deprecation Notice`,\n      message: `\n      ${\n        subject\n          ? `${capitalizeFirstLetter(\n              subject\n            )} is deprecated and will cease to work in future releases${\n              pkg ? \" of \" + pkg : \"\"\n            }.`\n          : \"\"\n      }${message ? \"\\n\" + message : \"\"}${\n        transition\n          ? `\\nYou can learn more (including a guide on common transition paths) here: ${transition}`\n          : \"\"\n      }\n    `.trim(),\n      level,\n    })\n\n  if (typeof callback === \"function\") {\n    return async (...args) => {\n      await logMessage()\n      return await callback(...args)\n    }\n  }\n  return logMessage()\n}\n","const pipe =\n  (...funcs) =>\n  v => {\n    return funcs.reduce((res, func) => {\n      return func(res)\n    }, v)\n  }\n\n/***\n * Merge multiple functions returning objects into one object.\n * @param {...function(*): object} funcs - Functions to merge\n * @return {object} - Merged object\n */\nconst mergePipe =\n  (...funcs) =>\n  v => {\n    return funcs.reduce((res, func) => {\n      return {...res, ...func(v)}\n    }, {})\n  }\n\n/**\n * @description Object check\n * @param {*} value - Value to check\n * @returns {boolean} - Is object status\n */\nconst isObject = value =>\n  value && typeof value === \"object\" && !Array.isArray(value)\n\n/**\n * @description Deep merge multiple objects.\n * @param {object} target - Target object\n * @param {...object[]} sources - Source objects\n * @returns {object} - Merged object\n */\nconst mergeDeep = (target, ...sources) => {\n  if (!sources.length) return target\n  const source = sources.shift()\n\n  if (isObject(target) && isObject(source)) {\n    for (const key in source) {\n      if (isObject(source[key])) {\n        if (!target[key]) Object.assign(target, {[key]: {}})\n        mergeDeep(target[key], source[key])\n      } else {\n        Object.assign(target, {[key]: source[key]})\n      }\n    }\n  }\n\n  return mergeDeep(target, ...sources)\n}\n\n/**\n * @description Support if/then/else behavior in a function way.\n * @param {function(object): boolean} testFn - Function to test\n * @param {function(object): *} posCond - Function to run if testFn is true\n * @param {function(object): *} negCond - Function to run it testFn is false\n * @returns {function(*): *} - Function that returns the result of posCond or negCond\n */\nexport const ifElse = (testFn, posCond, negCond) => obj =>\n  testFn(obj) ? posCond(obj) : negCond(obj)\n\n/**\n * @description Deep merge multiple Flow JSON.\n * @param {object|object[]} value - Flow JSON or array of Flow JSONs\n * @returns {object} - Merged Flow JSON\n */\nconst mergeFlowJSONs = value =>\n  Array.isArray(value) ? mergeDeep({}, ...value) : value\n\n/**\n * @description Filter out contracts section of flow.json.\n * @param {object|object[]} obj - Flow JSON or array of Flow JSONs\n * @returns {object} - Contracts section of Flow JSON\n */\nconst filterContracts = obj => (obj.contracts ? obj.contracts : {})\n\n/**\n * @description Gathers contract addresses by network\n * @param {string} network - Network to gather addresses for\n * @returns {object} - Contract names by addresses mapping e.g { \"HelloWorld\": \"0x123\" }\n */\nconst mapContractAliasesToNetworkAddress = network => contracts => {\n  return Object.entries(contracts).reduce((c, [key, value]) => {\n    const networkContractAlias = value?.aliases?.[network]\n    if (networkContractAlias) {\n      c[key] = networkContractAlias\n    }\n\n    return c\n  }, {})\n}\n\nconst mapDeploymentsToNetworkAddress =\n  network =>\n  ({deployments = {}, accounts = {}}) => {\n    const networkDeployment = deployments?.[network]\n    if (!networkDeployment) return {}\n\n    return Object.entries(networkDeployment).reduce((c, [key, value]) => {\n      // Resolve account address\n      const accountAddress = accounts[key]?.address\n      if (!accountAddress) return c\n\n      // Create an object assigning the address to the contract name.\n      return value.reduce((c, contract) => {\n        return {...c, [contract]: accountAddress}\n      }, {})\n    }, {})\n  }\n\n/**\n * @description Take in flow.json files and return contract to address mapping by network\n * @param {object|object[]} jsons - Flow JSON or array of Flow JSONs\n * @param {string} network - Network to gather addresses for\n * @returns {object} - Contract names by addresses mapping e.g { \"HelloWorld\": \"0x123\" }\n */\nexport const getContracts = (jsons, network) => {\n  return pipe(\n    mergeFlowJSONs,\n    mergePipe(\n      mapDeploymentsToNetworkAddress(network),\n      pipe(filterContracts, mapContractAliasesToNetworkAddress(network))\n    )\n  )(jsons)\n}\n\n/**\n * @description Checks if string is hexidecimal\n * @param {string} str - String to check\n * @returns {boolean} - Is hexidecimal status\n */\nconst isHexidecimal = str => {\n  // Check that it is a string\n  if (typeof str !== \"string\") return false\n  return /^[0-9A-Fa-f]+$/.test(str)\n}\n\n/**\n * @description Checks flow.json file for private keys\n * @param {object} flowJSON - Flow JSON\n * @returns {boolean} - Has private keys status\n */\nconst hasPrivateKeys = flowJSON => {\n  return Object.entries(flowJSON?.accounts).reduce(\n    (hasPrivateKey, [key, value]) => {\n      if (hasPrivateKey) return true\n      return value?.hasOwnProperty(\"key\") && isHexidecimal(value?.key)\n    },\n    false\n  )\n}\n\n/**\n * @description Take in flow.json or array of flow.json files and checks for private keys\n * @param {object|object[]} value - Flow JSON or array of Flow JSONs\n * @returns {boolean} - Has private keys status\n */\nexport const anyHasPrivateKeys = value => {\n  if (isObject(value)) return hasPrivateKeys(value)\n  return value.some(hasPrivateKeys)\n}\n\n/**\n * @description Format network to always be 'emulator', 'testnet', or 'mainnet'\n * @param {string} network - Network to format\n * @returns {string} - Formatted network name (either 'emulator', 'testnet', or 'mainnet')\n */\nexport const cleanNetwork = network =>\n  network?.toLowerCase() === \"local\" ? \"emulator\" : network?.toLowerCase()\n","import {\n  spawn,\n  send,\n  subscriber,\n  SUBSCRIBE,\n  UNSUBSCRIBE,\n} from \"@onflow/util-actor\"\nimport * as logger from \"@onflow/util-logger\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport {getContracts, cleanNetwork, anyHasPrivateKeys} from \"../utils/utils\"\n\nconst NAME = \"config\"\nconst PUT = \"PUT_CONFIG\"\nconst GET = \"GET_CONFIG\"\nconst GET_ALL = \"GET_ALL_CONFIG\"\nconst UPDATE = \"UPDATE_CONFIG\"\nconst DELETE = \"DELETE_CONFIG\"\nconst CLEAR = \"CLEAR_CONFIG\"\nconst WHERE = \"WHERE_CONFIG\"\nconst UPDATED = \"CONFIG/UPDATED\"\n\nconst identity = v => v\n\nconst HANDLERS = {\n  [PUT]: (ctx, _letter, {key, value}) => {\n    if (key == null) throw new Error(\"Missing 'key' for config/put.\")\n    ctx.put(key, value)\n    ctx.broadcast(UPDATED, {...ctx.all()})\n  },\n  [GET]: (ctx, letter, {key, fallback}) => {\n    if (key == null) throw new Error(\"Missing 'key' for config/get\")\n    letter.reply(ctx.get(key, fallback))\n  },\n  [GET_ALL]: (ctx, letter) => {\n    letter.reply({...ctx.all()})\n  },\n  [UPDATE]: (ctx, letter, {key, fn}) => {\n    if (key == null) throw new Error(\"Missing 'key' for config/update\")\n    ctx.update(key, fn || identity)\n    ctx.broadcast(UPDATED, {...ctx.all()})\n  },\n  [DELETE]: (ctx, letter, {key}) => {\n    if (key == null) throw new Error(\"Missing 'key' for config/delete\")\n    ctx.delete(key)\n    ctx.broadcast(UPDATED, {...ctx.all()})\n  },\n  [CLEAR]: (ctx, letter) => {\n    let keys = Object.keys(ctx.all())\n    for (let key of keys) ctx.delete(key)\n    ctx.broadcast(UPDATED, {...ctx.all()})\n  },\n  [WHERE]: (ctx, letter, {pattern}) => {\n    if (pattern == null) throw new Error(\"Missing 'pattern' for config/where\")\n    letter.reply(ctx.where(pattern))\n  },\n  [SUBSCRIBE]: (ctx, letter) => {\n    ctx.subscribe(letter.from)\n    ctx.send(letter.from, UPDATED, {...ctx.all()})\n  },\n  [UNSUBSCRIBE]: (ctx, letter) => {\n    ctx.unsubscribe(letter.from)\n  },\n}\n\nspawn(HANDLERS, NAME)\n\n/**\n * @description Adds a key-value pair to the config\n * @param {string} key - The key to add\n * @param {*} value - The value to add\n * @returns {Promise<object>} - The current config\n */\nfunction put(key, value) {\n  send(NAME, PUT, {key, value})\n  return config()\n}\n\n/**\n * @description Gets a key-value pair with a fallback from the config\n * @param {string} key - The key to add\n * @param {*} [fallback] - The fallback value to return if key is not found\n * @returns {Promise<*>} - The value found at key or fallback\n */\nfunction get(key, fallback) {\n  return send(NAME, GET, {key, fallback}, {expectReply: true, timeout: 10})\n}\n\n/**\n * @description Returns the first non null config value or the fallback\n * @param {string[]} wants - The keys to search for\n * @param {*} fallback - The fallback value to return if key is not found\n * @returns {Promise<*>} - The value found at key or fallback\n */\nasync function first(wants = [], fallback) {\n  if (!wants.length) return fallback\n  const [head, ...rest] = wants\n  const ret = await get(head)\n  if (ret == null) return first(rest, fallback)\n  return ret\n}\n\n/**\n * @description Returns the current config\n * @returns {Promise<object>} - The current config\n */\nfunction all() {\n  return send(NAME, GET_ALL, null, {expectReply: true, timeout: 10})\n}\n\n/**\n * @description Updates a key-value pair in the config\n * @param {string} key - The key to update\n * @param {Function} fn - The function to update the value with\n * @returns {Promise<object>} - The current config\n */\nfunction update(key, fn = identity) {\n  send(NAME, UPDATE, {key, fn})\n  return config()\n}\n\n/**\n * @description Deletes a key-value pair from the config\n * @param {string} key - The key to delete\n * @returns {Promise<object>} - The current config\n */\nfunction _delete(key) {\n  send(NAME, DELETE, {key})\n  return config()\n}\n\n/**\n * @description Returns a subset of the config based on a pattern\n * @param {string} pattern - The pattern to match keys against\n * @returns {Promise<object>} - The subset of the config\n */\nfunction where(pattern) {\n  return send(NAME, WHERE, {pattern}, {expectReply: true, timeout: 10})\n}\n\n/**\n * @description Subscribes to config updates\n * @param {Function} callback - The callback to call when config is updated\n * @returns {Function} - The unsubscribe function\n */\nfunction subscribe(callback) {\n  return subscriber(NAME, () => spawn(HANDLERS, NAME), callback)\n}\n\n/**\n * @description Clears the config\n * @returns {void}\n */\nexport function clearConfig() {\n  return send(NAME, CLEAR)\n}\n\n/**\n * @description Resets the config to a previous state\n * @param {object} oldConfig - The previous config state\n * @returns {Promise<object>} - The current config\n */\nfunction resetConfig(oldConfig) {\n  return clearConfig().then(config(oldConfig))\n}\n\n/**\n * @description Takes in flow.json or array of flow.json files and creates contract placeholders\n * @param {object|object[]} data - The flow.json or array of flow.json files\n * @returns {void}\n */\nasync function load(data) {\n  const network = await get(\"flow.network\")\n  const cleanedNetwork = cleanNetwork(network)\n  const {flowJSON} = data\n\n  invariant(Boolean(flowJSON), \"config.load -- 'flowJSON' must be defined\")\n\n  invariant(\n    cleanedNetwork,\n    `Flow Network Required -- In order for FCL to load your contracts please define \"flow.network\" to \"emulator\", \"local\", \"testnet\", or \"mainnet\" in your config. See more here: https://developers.flow.com/tools/fcl-js/reference/configure-fcl`\n  )\n\n  if (anyHasPrivateKeys(flowJSON)) {\n    const isEmulator = cleanedNetwork === \"emulator\"\n\n    logger.log({\n      title: \"Private Keys Detected\",\n      message: `Private keys should be stored in a separate flow.json file for security. See more here: https://developers.flow.com/tools/flow-cli/security`,\n      level: isEmulator ? logger.LEVELS.warn : logger.LEVELS.error,\n    })\n\n    if (!isEmulator) return\n  }\n\n  for (const [key, value] of Object.entries(\n    getContracts(flowJSON, cleanedNetwork)\n  )) {\n    const contractConfigKey = `0x${key}`\n    const existingContractConfigKey = await get(contractConfigKey)\n    if (existingContractConfigKey && existingContractConfigKey !== value) {\n      logger.log({\n        title: \"Contract Placeholder Conflict Detected\",\n        message: `A generated contract placeholder from config.load conflicts with a placeholder you've set manually in config have the same name.`,\n        level: logger.LEVELS.warn,\n      })\n    } else {\n      put(contractConfigKey, value)\n    }\n\n    const systemContractConfigKey = `system.contracts.${key}`\n    const systemExistingContractConfigKeyValue = await get(\n      systemContractConfigKey\n    )\n    if (\n      systemExistingContractConfigKeyValue &&\n      systemExistingContractConfigKeyValue !== value\n    ) {\n      logger.log({\n        title: \"Contract Placeholder Conflict Detected\",\n        message: `A generated contract placeholder from config.load conflicts with a placeholder you've set manually in config have the same name.`,\n        level: logger.LEVELS.warn,\n      })\n    } else {\n      put(systemContractConfigKey, value)\n    }\n  }\n}\n\n// eslint-disable-next-line jsdoc/require-returns\n/**\n * @description Sets the config\n * @param {object} [values] - The values to set\n */\nfunction config(values) {\n  if (values != null && typeof values === \"object\") {\n    Object.keys(values).map(d => put(d, values[d]))\n  }\n\n  return {\n    put,\n    get,\n    all,\n    first,\n    update,\n    delete: _delete,\n    where,\n    subscribe,\n    overload,\n    load,\n  }\n}\n\nconfig.put = put\nconfig.get = get\nconfig.all = all\nconfig.first = first\nconfig.update = update\nconfig.delete = _delete\nconfig.where = where\nconfig.subscribe = subscribe\nconfig.overload = overload\nconfig.load = load\n\nexport {config}\n\nconst noop = v => v\nfunction overload(opts = {}, callback = noop) {\n  return new Promise(async (resolve, reject) => {\n    const oldConfig = await all()\n    try {\n      config(opts)\n      var result = await callback(await all())\n      await resetConfig(oldConfig)\n      resolve(result)\n    } catch (error) {\n      await resetConfig(oldConfig)\n      reject(error)\n    }\n  })\n}\n"],"names":["invariant","fact","msg","error","Error","split","filter","d","test","join","_len","arguments","length","rest","Array","_key","console","Object","freeze","debug","info","log","warn","buildLoggerMessageArgs","_ref","message","replace","trim","_ref2","title","level","always","configLoggerLevel","config","get","LEVELS","loggerMessageArgs","deprecate","_ref3","pkg","subject","transition","callback","capitalizeFirstLetter","string","charAt","toUpperCase","slice","logMessage","stack","pipe","funcs","v","reduce","res","func","mergePipe","_len2","_key2","isObject","value","isArray","mergeDeep","target","_len3","sources","_key3","source","shift","key","assign","mergeFlowJSONs","filterContracts","obj","contracts","mapContractAliasesToNetworkAddress","network","entries","c","networkContractAlias","aliases","mapDeploymentsToNetworkAddress","deployments","accounts","networkDeployment","accountAddress","address","contract","getContracts","jsons","isHexidecimal","str","hasPrivateKeys","flowJSON","hasPrivateKey","_ref4","hasOwnProperty","anyHasPrivateKeys","some","cleanNetwork","toLowerCase","NAME","PUT","GET","GET_ALL","UPDATE","DELETE","CLEAR","WHERE","UPDATED","identity","HANDLERS","ctx","_letter","put","broadcast","all","letter","fallback","reply","fn","update","delete","keys","_ref5","pattern","where","SUBSCRIBE","subscribe","from","send","UNSUBSCRIBE","unsubscribe","spawn","expectReply","timeout","first","wants","undefined","head","ret","_delete","subscriber","clearConfig","resetConfig","oldConfig","then","load","data","cleanedNetwork","Boolean","isEmulator","logger","contractConfigKey","existingContractConfigKey","systemContractConfigKey","systemExistingContractConfigKeyValue","values","map","overload","noop","opts","Promise","resolve","reject","result"],"mappings":"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"}