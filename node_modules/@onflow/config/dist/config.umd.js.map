{"version":3,"file":"config.umd.js","sources":["../../../node_modules/queue-microtask/index.js","../../util-actor/src/mailbox/index.js","../../util-invariant/src/index.js","../../util-logger/src/util-logger.js","../utils/utils.js","../src/config.js"],"sourcesContent":["/*! queue-microtask. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\nlet promise\n\nmodule.exports = typeof queueMicrotask === 'function'\n  ? queueMicrotask.bind(typeof window !== 'undefined' ? window : global)\n  // reuse resolved promise, and allocate it lazily\n  : cb => (promise || (promise = Promise.resolve()))\n    .then(cb)\n    .catch(err => setTimeout(() => { throw err }, 0))\n","export const mailbox = () => {\n  const queue = []\n  var next\n\n  return {\n    async deliver(msg) {\n      queue.push(msg)\n      if (next) {\n        next(queue.shift())\n        next = undefined\n      }\n    },\n\n    receive() {\n      return new Promise(function innerReceive(resolve) {\n        const msg = queue.shift()\n        if (msg) return resolve(msg)\n        next = resolve\n      })\n    },\n  }\n}\n","/**\n * Asserts fact is true, otherwise throw an error with invariant message\n * @param {boolean} fact\n * @param {string} msg\n * @param {Array} rest\n * @returns {void}\n */\nexport function invariant(fact, msg, ...rest) {\n  if (!fact) {\n    const error = new Error(`INVARIANT ${msg}`)\n    error.stack = error.stack\n      .split(\"\\n\")\n      .filter(d => !/at invariant/.test(d))\n      .join(\"\\n\")\n    console.error(\"\\n\\n---\\n\\n\", error, \"\\n\\n\", ...rest, \"\\n\\n---\\n\\n\")\n    throw error\n  }\n}\n","import {config} from \"@onflow/config\"\n\n/**\n * The levels of the logger\n * \n * @typedef {Object} LEVELS\n * @property {number} debug - The debug level\n * @property {number} info - The info level\n * @property {number} log - The log level\n * @property {number} warn - The warn level\n * @property {number} error - The error level\n * \n */\nexport const LEVELS = Object.freeze({\n  debug: 5,\n  info: 4,\n  log: 3,\n  warn: 2,\n  error: 1,\n})\n\n/**\n * Builds a message formatted for the logger\n * \n * @param {Object} options - The options for the log\n * @param {string} options.title - The title of the log\n * @param {string} options.message - The message of the log\n * @returns {Array<string>} - The message formatted for the logger\n * \n * @example\n * buildLoggerMessageArgs({ title: \"My Title\", message: \"My Message\" })\n */\nconst buildLoggerMessageArgs = ({title, message}) => {\n  return [\n    `\n    %c${title}\n    ============================\n\n    ${message}\n\n    ============================\n    `\n      .replace(/\\n[^\\S\\r\\n]+/g, \"\\n\")\n      .trim(),\n    ,\n    \"font-weight:bold;font-family:monospace;\",\n  ]\n}\n\n/**\n * Logs messages based on the level of the message and the level set in the config\n * \n * @param {Object} options - The options for the log\n * @param {string} options.title - The title of the log\n * @param {string} options.message - The message of the log\n * @param {number} options.level - The level of the log\n * @param {boolean} options.always - Whether to always show the log\n * @returns {Promise<void>}\n * \n * @example\n * log({ title: \"My Title\", message: \"My Message\", level: LEVELS.warn, always: false })\n * \n */\nexport const log = async ({title, message, level, always = false}) => {\n  const configLoggerLevel = await config.get(\"logger.level\", LEVELS.warn)\n\n  // If config level is below message level then don't show it\n  if (!always && configLoggerLevel < level) return\n\n  const loggerMessageArgs = buildLoggerMessageArgs({title, message})\n\n  switch (level) {\n    case LEVELS.debug:\n      console.debug(...loggerMessageArgs)\n      break\n    case LEVELS.info:\n      console.info(...loggerMessageArgs)\n      break\n    case LEVELS.warn:\n      console.warn(...loggerMessageArgs)\n      break\n    case LEVELS.error:\n      console.error(...loggerMessageArgs)\n      break\n    default:\n      console.log(...loggerMessageArgs)\n  }\n}\n\n/**\n * Logs a deprecation notice\n * \n * @param {Object} options - The options for the log\n * @param {string} options.pkg - The package that is being deprecated\n * @param {string} options.subject - The subject of the deprecation\n * @param {string} options.transition - The transition path for the deprecation\n * @param {number} options.level - The level of the log\n * @param {string} options.message - The message of the log\n * @param {Function} options.callback - A callback to run after the log\n * @returns {Promise<void>}\n * \n * @example\n * log.deprecate({ pkg: \"@onflow/fcl\", subject: \"Some item\", transition: \"https://github.com/onflow/flow-js-sdk\", message: \"Descriptive message\", level: LEVELS.warn, callback: () => {} })\n * \n */\nlog.deprecate = ({\n  pkg,\n  subject,\n  transition,\n  level = LEVELS.warn,\n  message = \"\",\n  callback = null,\n}) => {\n  const capitalizeFirstLetter = string => {\n    return string.charAt(0).toUpperCase() + string.slice(1)\n  }\n\n  const logMessage = () =>\n    log({\n      title: `${pkg ? pkg + \" \" : \"\"}Deprecation Notice`,\n      message: `\n      ${\n        subject\n          ? `${capitalizeFirstLetter(\n              subject\n            )} is deprecated and will cease to work in future releases${\n              pkg ? \" of \" + pkg : \"\"\n            }.`\n          : \"\"\n      }${message ? \"\\n\" + message : \"\"}${\n        transition\n          ? `\\nYou can learn more (including a guide on common transition paths) here: ${transition}`\n          : \"\"\n      }\n    `.trim(),\n      level,\n    })\n\n  if (typeof callback === \"function\") {\n    return async (...args) => {\n      await logMessage()\n      return await callback(...args)\n    }\n  }\n  return logMessage()\n}\n","const pipe =\n  (...funcs) =>\n  v => {\n    return funcs.reduce((res, func) => {\n      return func(res)\n    }, v)\n  }\n\n/***\n * Merge multiple functions returning objects into one object.\n * @param {...function(*): object} funcs - Functions to merge\n * @return {object} - Merged object\n */\nconst mergePipe =\n  (...funcs) =>\n  v => {\n    return funcs.reduce((res, func) => {\n      return {...res, ...func(v)}\n    }, {})\n  }\n\n/**\n * @description Object check\n * @param {*} value - Value to check\n * @returns {boolean} - Is object status\n */\nconst isObject = value =>\n  value && typeof value === \"object\" && !Array.isArray(value)\n\n/**\n * @description Deep merge multiple objects.\n * @param {object} target - Target object\n * @param {...object[]} sources - Source objects\n * @returns {object} - Merged object\n */\nconst mergeDeep = (target, ...sources) => {\n  if (!sources.length) return target\n  const source = sources.shift()\n\n  if (isObject(target) && isObject(source)) {\n    for (const key in source) {\n      if (isObject(source[key])) {\n        if (!target[key]) Object.assign(target, {[key]: {}})\n        mergeDeep(target[key], source[key])\n      } else {\n        Object.assign(target, {[key]: source[key]})\n      }\n    }\n  }\n\n  return mergeDeep(target, ...sources)\n}\n\n/**\n * @description Support if/then/else behavior in a function way.\n * @param {function(object): boolean} testFn - Function to test\n * @param {function(object): *} posCond - Function to run if testFn is true\n * @param {function(object): *} negCond - Function to run it testFn is false\n * @returns {function(*): *} - Function that returns the result of posCond or negCond\n */\nexport const ifElse = (testFn, posCond, negCond) => obj =>\n  testFn(obj) ? posCond(obj) : negCond(obj)\n\n/**\n * @description Deep merge multiple Flow JSON.\n * @param {object|object[]} value - Flow JSON or array of Flow JSONs\n * @returns {object} - Merged Flow JSON\n */\nconst mergeFlowJSONs = value =>\n  Array.isArray(value) ? mergeDeep({}, ...value) : value\n\n/**\n * @description Filter out contracts section of flow.json.\n * @param {object|object[]} obj - Flow JSON or array of Flow JSONs\n * @returns {object} - Contracts section of Flow JSON\n */\nconst filterContracts = obj => (obj.contracts ? obj.contracts : {})\n\n/**\n * @description Gathers contract addresses by network\n * @param {string} network - Network to gather addresses for\n * @returns {object} - Contract names by addresses mapping e.g { \"HelloWorld\": \"0x123\" }\n */\nconst mapContractAliasesToNetworkAddress = network => contracts => {\n  return Object.entries(contracts).reduce((c, [key, value]) => {\n    const networkContractAlias = value?.aliases?.[network]\n    if (networkContractAlias) {\n      c[key] = networkContractAlias\n    }\n\n    return c\n  }, {})\n}\n\nconst mapDeploymentsToNetworkAddress =\n  network =>\n  ({deployments = {}, accounts = {}}) => {\n    const networkDeployment = deployments?.[network]\n    if (!networkDeployment) return {}\n\n    return Object.entries(networkDeployment).reduce((c, [key, value]) => {\n      // Resolve account address\n      const accountAddress = accounts[key]?.address\n      if (!accountAddress) return c\n\n      // Create an object assigning the address to the contract name.\n      return value.reduce((c, contract) => {\n        return {...c, [contract]: accountAddress}\n      }, {})\n    }, {})\n  }\n\n/**\n * @description Take in flow.json files and return contract to address mapping by network\n * @param {object|object[]} jsons - Flow JSON or array of Flow JSONs\n * @param {string} network - Network to gather addresses for\n * @returns {object} - Contract names by addresses mapping e.g { \"HelloWorld\": \"0x123\" }\n */\nexport const getContracts = (jsons, network) => {\n  return pipe(\n    mergeFlowJSONs,\n    mergePipe(\n      mapDeploymentsToNetworkAddress(network),\n      pipe(filterContracts, mapContractAliasesToNetworkAddress(network))\n    )\n  )(jsons)\n}\n\n/**\n * @description Checks if string is hexidecimal\n * @param {string} str - String to check\n * @returns {boolean} - Is hexidecimal status\n */\nconst isHexidecimal = str => {\n  // Check that it is a string\n  if (typeof str !== \"string\") return false\n  return /^[0-9A-Fa-f]+$/.test(str)\n}\n\n/**\n * @description Checks flow.json file for private keys\n * @param {object} flowJSON - Flow JSON\n * @returns {boolean} - Has private keys status\n */\nconst hasPrivateKeys = flowJSON => {\n  return Object.entries(flowJSON?.accounts).reduce(\n    (hasPrivateKey, [key, value]) => {\n      if (hasPrivateKey) return true\n      return value?.hasOwnProperty(\"key\") && isHexidecimal(value?.key)\n    },\n    false\n  )\n}\n\n/**\n * @description Take in flow.json or array of flow.json files and checks for private keys\n * @param {object|object[]} value - Flow JSON or array of Flow JSONs\n * @returns {boolean} - Has private keys status\n */\nexport const anyHasPrivateKeys = value => {\n  if (isObject(value)) return hasPrivateKeys(value)\n  return value.some(hasPrivateKeys)\n}\n\n/**\n * @description Format network to always be 'emulator', 'testnet', or 'mainnet'\n * @param {string} network - Network to format\n * @returns {string} - Formatted network name (either 'emulator', 'testnet', or 'mainnet')\n */\nexport const cleanNetwork = network =>\n  network?.toLowerCase() === \"local\" ? \"emulator\" : network?.toLowerCase()\n","import {\n  spawn,\n  send,\n  subscriber,\n  SUBSCRIBE,\n  UNSUBSCRIBE,\n} from \"@onflow/util-actor\"\nimport * as logger from \"@onflow/util-logger\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport {getContracts, cleanNetwork, anyHasPrivateKeys} from \"../utils/utils\"\n\nconst NAME = \"config\"\nconst PUT = \"PUT_CONFIG\"\nconst GET = \"GET_CONFIG\"\nconst GET_ALL = \"GET_ALL_CONFIG\"\nconst UPDATE = \"UPDATE_CONFIG\"\nconst DELETE = \"DELETE_CONFIG\"\nconst CLEAR = \"CLEAR_CONFIG\"\nconst WHERE = \"WHERE_CONFIG\"\nconst UPDATED = \"CONFIG/UPDATED\"\n\nconst identity = v => v\n\nconst HANDLERS = {\n  [PUT]: (ctx, _letter, {key, value}) => {\n    if (key == null) throw new Error(\"Missing 'key' for config/put.\")\n    ctx.put(key, value)\n    ctx.broadcast(UPDATED, {...ctx.all()})\n  },\n  [GET]: (ctx, letter, {key, fallback}) => {\n    if (key == null) throw new Error(\"Missing 'key' for config/get\")\n    letter.reply(ctx.get(key, fallback))\n  },\n  [GET_ALL]: (ctx, letter) => {\n    letter.reply({...ctx.all()})\n  },\n  [UPDATE]: (ctx, letter, {key, fn}) => {\n    if (key == null) throw new Error(\"Missing 'key' for config/update\")\n    ctx.update(key, fn || identity)\n    ctx.broadcast(UPDATED, {...ctx.all()})\n  },\n  [DELETE]: (ctx, letter, {key}) => {\n    if (key == null) throw new Error(\"Missing 'key' for config/delete\")\n    ctx.delete(key)\n    ctx.broadcast(UPDATED, {...ctx.all()})\n  },\n  [CLEAR]: (ctx, letter) => {\n    let keys = Object.keys(ctx.all())\n    for (let key of keys) ctx.delete(key)\n    ctx.broadcast(UPDATED, {...ctx.all()})\n  },\n  [WHERE]: (ctx, letter, {pattern}) => {\n    if (pattern == null) throw new Error(\"Missing 'pattern' for config/where\")\n    letter.reply(ctx.where(pattern))\n  },\n  [SUBSCRIBE]: (ctx, letter) => {\n    ctx.subscribe(letter.from)\n    ctx.send(letter.from, UPDATED, {...ctx.all()})\n  },\n  [UNSUBSCRIBE]: (ctx, letter) => {\n    ctx.unsubscribe(letter.from)\n  },\n}\n\nspawn(HANDLERS, NAME)\n\n/**\n * @description Adds a key-value pair to the config\n * @param {string} key - The key to add\n * @param {*} value - The value to add\n * @returns {Promise<object>} - The current config\n */\nfunction put(key, value) {\n  send(NAME, PUT, {key, value})\n  return config()\n}\n\n/**\n * @description Gets a key-value pair with a fallback from the config\n * @param {string} key - The key to add\n * @param {*} [fallback] - The fallback value to return if key is not found\n * @returns {Promise<*>} - The value found at key or fallback\n */\nfunction get(key, fallback) {\n  return send(NAME, GET, {key, fallback}, {expectReply: true, timeout: 10})\n}\n\n/**\n * @description Returns the first non null config value or the fallback\n * @param {string[]} wants - The keys to search for\n * @param {*} fallback - The fallback value to return if key is not found\n * @returns {Promise<*>} - The value found at key or fallback\n */\nasync function first(wants = [], fallback) {\n  if (!wants.length) return fallback\n  const [head, ...rest] = wants\n  const ret = await get(head)\n  if (ret == null) return first(rest, fallback)\n  return ret\n}\n\n/**\n * @description Returns the current config\n * @returns {Promise<object>} - The current config\n */\nfunction all() {\n  return send(NAME, GET_ALL, null, {expectReply: true, timeout: 10})\n}\n\n/**\n * @description Updates a key-value pair in the config\n * @param {string} key - The key to update\n * @param {Function} fn - The function to update the value with\n * @returns {Promise<object>} - The current config\n */\nfunction update(key, fn = identity) {\n  send(NAME, UPDATE, {key, fn})\n  return config()\n}\n\n/**\n * @description Deletes a key-value pair from the config\n * @param {string} key - The key to delete\n * @returns {Promise<object>} - The current config\n */\nfunction _delete(key) {\n  send(NAME, DELETE, {key})\n  return config()\n}\n\n/**\n * @description Returns a subset of the config based on a pattern\n * @param {string} pattern - The pattern to match keys against\n * @returns {Promise<object>} - The subset of the config\n */\nfunction where(pattern) {\n  return send(NAME, WHERE, {pattern}, {expectReply: true, timeout: 10})\n}\n\n/**\n * @description Subscribes to config updates\n * @param {Function} callback - The callback to call when config is updated\n * @returns {Function} - The unsubscribe function\n */\nfunction subscribe(callback) {\n  return subscriber(NAME, () => spawn(HANDLERS, NAME), callback)\n}\n\n/**\n * @description Clears the config\n * @returns {void}\n */\nexport function clearConfig() {\n  return send(NAME, CLEAR)\n}\n\n/**\n * @description Resets the config to a previous state\n * @param {object} oldConfig - The previous config state\n * @returns {Promise<object>} - The current config\n */\nfunction resetConfig(oldConfig) {\n  return clearConfig().then(config(oldConfig))\n}\n\n/**\n * @description Takes in flow.json or array of flow.json files and creates contract placeholders\n * @param {object|object[]} data - The flow.json or array of flow.json files\n * @returns {void}\n */\nasync function load(data) {\n  const network = await get(\"flow.network\")\n  const cleanedNetwork = cleanNetwork(network)\n  const {flowJSON} = data\n\n  invariant(Boolean(flowJSON), \"config.load -- 'flowJSON' must be defined\")\n\n  invariant(\n    cleanedNetwork,\n    `Flow Network Required -- In order for FCL to load your contracts please define \"flow.network\" to \"emulator\", \"local\", \"testnet\", or \"mainnet\" in your config. See more here: https://developers.flow.com/tools/fcl-js/reference/configure-fcl`\n  )\n\n  if (anyHasPrivateKeys(flowJSON)) {\n    const isEmulator = cleanedNetwork === \"emulator\"\n\n    logger.log({\n      title: \"Private Keys Detected\",\n      message: `Private keys should be stored in a separate flow.json file for security. See more here: https://developers.flow.com/tools/flow-cli/security`,\n      level: isEmulator ? logger.LEVELS.warn : logger.LEVELS.error,\n    })\n\n    if (!isEmulator) return\n  }\n\n  for (const [key, value] of Object.entries(\n    getContracts(flowJSON, cleanedNetwork)\n  )) {\n    const contractConfigKey = `0x${key}`\n    const existingContractConfigKey = await get(contractConfigKey)\n    if (existingContractConfigKey && existingContractConfigKey !== value) {\n      logger.log({\n        title: \"Contract Placeholder Conflict Detected\",\n        message: `A generated contract placeholder from config.load conflicts with a placeholder you've set manually in config have the same name.`,\n        level: logger.LEVELS.warn,\n      })\n    } else {\n      put(contractConfigKey, value)\n    }\n\n    const systemContractConfigKey = `system.contracts.${key}`\n    const systemExistingContractConfigKeyValue = await get(\n      systemContractConfigKey\n    )\n    if (\n      systemExistingContractConfigKeyValue &&\n      systemExistingContractConfigKeyValue !== value\n    ) {\n      logger.log({\n        title: \"Contract Placeholder Conflict Detected\",\n        message: `A generated contract placeholder from config.load conflicts with a placeholder you've set manually in config have the same name.`,\n        level: logger.LEVELS.warn,\n      })\n    } else {\n      put(systemContractConfigKey, value)\n    }\n  }\n}\n\n// eslint-disable-next-line jsdoc/require-returns\n/**\n * @description Sets the config\n * @param {object} [values] - The values to set\n */\nfunction config(values) {\n  if (values != null && typeof values === \"object\") {\n    Object.keys(values).map(d => put(d, values[d]))\n  }\n\n  return {\n    put,\n    get,\n    all,\n    first,\n    update,\n    delete: _delete,\n    where,\n    subscribe,\n    overload,\n    load,\n  }\n}\n\nconfig.put = put\nconfig.get = get\nconfig.all = all\nconfig.first = first\nconfig.update = update\nconfig.delete = _delete\nconfig.where = where\nconfig.subscribe = subscribe\nconfig.overload = overload\nconfig.load = load\n\nexport {config}\n\nconst noop = v => v\nfunction overload(opts = {}, callback = noop) {\n  return new Promise(async (resolve, reject) => {\n    const oldConfig = await all()\n    try {\n      config(opts)\n      var result = await callback(await all())\n      await resetConfig(oldConfig)\n      resolve(result)\n    } catch (error) {\n      await resetConfig(oldConfig)\n      reject(error)\n    }\n  })\n}\n"],"names":["promise","queueMicrotask_1","queueMicrotask","bind","window","global","cb","Promise","resolve","then","catch","err","setTimeout","mailbox","deliver","msg","queue","push","next","shift","receive","innerReceive","invariant","fact","error","Error","split","filter","d","test","join","_len","arguments","length","rest","Array","_key","console","Object","freeze","debug","info","log","warn","buildLoggerMessageArgs","_ref","message","replace","trim","_ref2","title","level","always","configLoggerLevel","config","get","LEVELS","loggerMessageArgs","deprecate","_ref3","pkg","subject","transition","callback","capitalizeFirstLetter","string","charAt","toUpperCase","slice","logMessage","stack","pipe","funcs","v","reduce","res","func","mergePipe","_len2","_key2","isObject","value","isArray","mergeDeep","target","_len3","sources","_key3","source","key","assign","mergeFlowJSONs","filterContracts","obj","contracts","mapContractAliasesToNetworkAddress","network","entries","c","networkContractAlias","aliases","mapDeploymentsToNetworkAddress","deployments","accounts","networkDeployment","accountAddress","address","contract","getContracts","jsons","isHexidecimal","str","hasPrivateKeys","flowJSON","hasPrivateKey","_ref4","hasOwnProperty","anyHasPrivateKeys","some","cleanNetwork","toLowerCase","NAME","PUT","GET","GET_ALL","UPDATE","DELETE","CLEAR","WHERE","UPDATED","identity","HANDLERS","ctx","_letter","put","broadcast","all","letter","fallback","reply","fn","update","delete","keys","_ref5","pattern","where","SUBSCRIBE","subscribe","from","send","UNSUBSCRIBE","unsubscribe","spawn","expectReply","timeout","first","wants","undefined","head","ret","_delete","subscriber","clearConfig","resetConfig","oldConfig","load","data","cleanedNetwork","Boolean","isEmulator","logger","contractConfigKey","existingContractConfigKey","systemContractConfigKey","systemExistingContractConfigKeyValue","values","map","overload","noop","opts","reject","result"],"mappings":"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"}