{"version":3,"file":"sdk.js","sources":["../src/interaction/interaction.js","../src/build/build.js","../src/response/response.js","../src/build/build-get-block.js","../src/build/build-get-account.js","../src/decode/decode.js","../src/resolve/resolve-cadence.js","../src/resolve/resolve-arguments.js","../src/encode/encode.js","../src/resolve/voucher.js","../src/resolve/resolve-accounts.js","../src/resolve/resolve-signatures.js","../src/resolve/resolve-validators.js","../src/resolve/resolve-final-normalization.js","../src/resolve/resolve-voucher-intercept.js","../src/resolve/resolve-compute-limit.js","../src/resolve/resolve.js","../src/build/build-invariant.js","../src/send/send.js","../src/decode/sdk-decode.js","../src/wallet-utils/encode-signable.js","../src/build/build-validator.js","../src/build/build-at-block-height.js","../src/build/build-at-block-id.js","../src/account/account.js","../src/block/block.js","../src/build/build-authorizations.js","../src/build/build-get-events.js","../src/build/build-get-events-at-block-height-range.js","../src/build/build-get-events-at-block-ids.js","../src/build/build-get-block-header.js","../src/build/build-get-collection.js","../src/build/build-get-transaction-status.js","../src/build/build-get-transaction.js","../src/build/build-get-network-parameters.js","../src/build/build-limit.js","../src/build/build-arguments.js","../src/build/build-proposer.js","../src/build/build-payer.js","../src/build/build-ping.js","../src/build/build-ref.js","../src/build/build-script.js","../src/build/build-transaction.js","../src/build/build-voucher-intercept.js","../src/resolve/resolve-proposer-sequence-number.js","../src/resolve/resolve-ref-block-id.js","../src/test-utils/mock-send.js","../src/test-utils/authz-fn.js","../src/test-utils/run.js","../src/VERSION.js","../src/sdk.js"],"sourcesContent":["import {invariant} from \"@onflow/util-invariant\"\n\nexport const UNKNOWN /*                       */ = \"UNKNOWN\"\nexport const SCRIPT /*                        */ = \"SCRIPT\"\nexport const TRANSACTION /*                   */ = \"TRANSACTION\"\nexport const GET_TRANSACTION_STATUS /*        */ = \"GET_TRANSACTION_STATUS\"\nexport const GET_ACCOUNT /*                   */ = \"GET_ACCOUNT\"\nexport const GET_EVENTS /*                    */ = \"GET_EVENTS\"\nexport const PING /*                          */ = \"PING\"\nexport const GET_TRANSACTION /*               */ = \"GET_TRANSACTION\"\nexport const GET_BLOCK /*                     */ = \"GET_BLOCK\"\nexport const GET_BLOCK_HEADER /*              */ = \"GET_BLOCK_HEADER\"\nexport const GET_COLLECTION /*                */ = \"GET_COLLECTION\"\nexport const GET_NETWORK_PARAMETERS /*        */ = \"GET_NETWORK_PARAMETERS\"\n\nexport const BAD /* */ = \"BAD\"\nexport const OK /*  */ = \"OK\"\n\nexport const ACCOUNT /*  */ = \"ACCOUNT\"\nexport const PARAM /*    */ = \"PARAM\"\nexport const ARGUMENT /* */ = \"ARGUMENT\"\n\nexport const AUTHORIZER /* */ = \"authorizer\"\nexport const PAYER /*      */ = \"payer\"\nexport const PROPOSER /*   */ = \"proposer\"\n\nconst ACCT = `{\n  \"kind\":\"${ACCOUNT}\",\n  \"tempId\":null,\n  \"addr\":null,\n  \"keyId\":null,\n  \"sequenceNum\":null,\n  \"signature\":null,\n  \"signingFunction\":null,\n  \"resolve\":null,\n  \"role\": {\n    \"proposer\":false,\n    \"authorizer\":false,\n    \"payer\":false,\n    \"param\":false\n  }\n}`\n\nconst PRM = `{\n  \"kind\":\"${PARAM}\",\n  \"tempId\":null,\n  \"key\":null,\n  \"value\":null,\n  \"asParam\":null,\n  \"xform\":null,\n  \"resolve\": null\n}`\n\nconst ARG = `{\n  \"kind\":\"${ARGUMENT}\",\n  \"tempId\":null,\n  \"value\":null,\n  \"asArgument\":null,\n  \"xform\":null,\n  \"resolve\": null,\n  \"resolveArgument\": null\n}`\n\nconst IX = `{\n  \"tag\":\"${UNKNOWN}\",\n  \"assigns\":{},\n  \"status\":\"${OK}\",\n  \"reason\":null,\n  \"accounts\":{},\n  \"params\":{},\n  \"arguments\":{},\n  \"message\": {\n    \"cadence\":null,\n    \"refBlock\":null,\n    \"computeLimit\":null,\n    \"proposer\":null,\n    \"payer\":null,\n    \"authorizations\":[],\n    \"params\":[],\n    \"arguments\":[]\n  },\n  \"proposer\":null,\n  \"authorizations\":[],\n  \"payer\":[],\n  \"events\": {\n    \"eventType\":null,\n    \"start\":null,\n    \"end\":null,\n    \"blockIds\":[]\n  },\n  \"transaction\": {\n    \"id\":null\n  },\n  \"block\": {\n    \"id\":null,\n    \"height\":null,\n    \"isSealed\":null\n  },\n  \"account\": {\n    \"addr\":null\n  },\n  \"collection\": {\n    \"id\":null\n  }\n}`\n\nconst KEYS = new Set(Object.keys(JSON.parse(IX)))\n\nexport const interaction = () => JSON.parse(IX)\n\nconst CHARS = \"abcdefghijklmnopqrstuvwxyz0123456789\".split(\"\")\nconst randChar = () => CHARS[~~(Math.random() * CHARS.length)]\nexport const uuid = () => Array.from({length: 10}, randChar).join(\"\")\nexport const isNumber = d => typeof d === \"number\"\nexport const isArray = d => Array.isArray(d)\nexport const isObj = d => d !== null && typeof d === \"object\"\nexport const isNull = d => d == null\nexport const isFn = d => typeof d === \"function\"\n\nexport const isInteraction = ix => {\n  if (!isObj(ix) || isNull(ix) || isNumber(ix)) return false\n  for (let key of KEYS) if (!ix.hasOwnProperty(key)) return false\n  return true\n}\n\nexport const Ok = ix => {\n  ix.status = OK\n  return ix\n}\n\nexport const Bad = (ix, reason) => {\n  ix.status = BAD\n  ix.reason = reason\n  return ix\n}\n\nconst makeIx = wat => ix => {\n  ix.tag = wat\n  return Ok(ix)\n}\n\nconst prepAccountKeyId = acct => {\n  if (acct.keyId == null) return acct\n\n  invariant(!isNaN(parseInt(acct.keyId)), \"account.keyId must be an integer\")\n  return {\n    ...acct,\n    keyId: parseInt(acct.keyId),\n  }\n}\n\nexport const prepAccount = (acct, opts = {}) => ix => {\n  invariant(\n    typeof acct === \"function\" || typeof acct === \"object\",\n    \"prepAccount must be passed an authorization function or an account object\"\n  )\n  invariant(opts.role != null, \"Account must have a role\")\n\n  const ACCOUNT = JSON.parse(ACCT)\n  const role = opts.role\n  const tempId = uuid()\n\n  if (acct.authorization && isFn(acct.authorization))\n    acct = {resolve: acct.authorization}\n  if (!acct.authorization && isFn(acct)) acct = {resolve: acct}\n\n  const resolve = acct.resolve\n  if (resolve)\n    acct.resolve = (acct, ...rest) =>\n      [resolve, prepAccountKeyId].reduce(\n        async (d, fn) => fn(await d, ...rest),\n        acct\n      )\n  acct = prepAccountKeyId(acct)\n\n  ix.accounts[tempId] = {\n    ...ACCOUNT,\n    tempId,\n    ...acct,\n    role: {\n      ...ACCOUNT.role,\n      ...(typeof acct.role === \"object\" ? acct.role : {}),\n      [role]: true,\n    },\n  }\n\n  if (role === AUTHORIZER) {\n    ix.authorizations.push(tempId)\n  } else if (role === PAYER) {\n    ix.payer.push(tempId)\n  } else {\n    ix[role] = tempId\n  }\n\n  return ix\n}\n\nexport const makeArgument = arg => ix => {\n  let tempId = uuid()\n  ix.message.arguments.push(tempId)\n\n  ix.arguments[tempId] = JSON.parse(ARG)\n  ix.arguments[tempId].tempId = tempId\n  ix.arguments[tempId].value = arg.value\n  ix.arguments[tempId].asArgument = arg.asArgument\n  ix.arguments[tempId].xform = arg.xform\n  ix.arguments[tempId].resolve = arg.resolve\n  ix.arguments[tempId].resolveArgument = isFn(arg.resolveArgument)\n    ? arg.resolveArgument.bind(arg)\n    : arg.resolveArgument\n\n  return Ok(ix)\n}\n\nexport const makeUnknown /*                 */ = makeIx(UNKNOWN)\nexport const makeScript /*                  */ = makeIx(SCRIPT)\nexport const makeTransaction /*             */ = makeIx(TRANSACTION)\nexport const makeGetTransactionStatus /*    */ = makeIx(GET_TRANSACTION_STATUS)\nexport const makeGetTransaction /*          */ = makeIx(GET_TRANSACTION)\nexport const makeGetAccount /*              */ = makeIx(GET_ACCOUNT)\nexport const makeGetEvents /*               */ = makeIx(GET_EVENTS)\nexport const makePing /*                    */ = makeIx(PING)\nexport const makeGetBlock /*                */ = makeIx(GET_BLOCK)\nexport const makeGetBlockHeader /*          */ = makeIx(GET_BLOCK_HEADER)\nexport const makeGetCollection /*           */ = makeIx(GET_COLLECTION)\nexport const makeGetNetworkParameters /*    */ = makeIx(GET_NETWORK_PARAMETERS)\n\nconst is = wat => ix => ix.tag === wat\n\nexport const isUnknown /*                 */ = is(UNKNOWN)\nexport const isScript /*                  */ = is(SCRIPT)\nexport const isTransaction /*             */ = is(TRANSACTION)\nexport const isGetTransactionStatus /*    */ = is(GET_TRANSACTION_STATUS)\nexport const isGetTransaction /*          */ = is(GET_TRANSACTION)\nexport const isGetAccount /*              */ = is(GET_ACCOUNT)\nexport const isGetEvents /*               */ = is(GET_EVENTS)\nexport const isPing /*                    */ = is(PING)\nexport const isGetBlock /*                */ = is(GET_BLOCK)\nexport const isGetBlockHeader /*          */ = is(GET_BLOCK_HEADER)\nexport const isGetCollection /*           */ = is(GET_COLLECTION)\nexport const isGetNetworkParameters /*    */ = is(GET_NETWORK_PARAMETERS)\n\nexport const isOk /*  */ = ix => ix.status === OK\nexport const isBad /* */ = ix => ix.status === BAD\nexport const why /*   */ = ix => ix.reason\n\nexport const isAccount /*  */ = account => account.kind === ACCOUNT\nexport const isParam /*    */ = param => param.kind === PARAM\nexport const isArgument /* */ = argument => argument.kind === ARGUMENT\n\nconst hardMode = ix => {\n  for (let key of Object.keys(ix)) {\n    if (!KEYS.has(key))\n      throw new Error(`\"${key}\" is an invalid root level Interaction property.`)\n  }\n  return ix\n}\n\nconst recPipe = async (ix, fns = []) => {\n  try {\n    ix = hardMode(await ix)\n    if (isBad(ix)) throw new Error(`Interaction Error: ${ix.reason}`)\n    if (!fns.length) return ix\n    const [hd, ...rest] = fns\n    const cur = await hd\n    if (isFn(cur)) return recPipe(cur(ix), rest)\n    if (isNull(cur) || !cur) return recPipe(ix, rest)\n    if (isInteraction(cur)) return recPipe(cur, rest)\n    throw new Error(\"Invalid Interaction Composition\")\n  } catch (e) {\n    throw e\n  }\n}\n\nexport const pipe = (...args) => {\n  const [arg1, arg2] = args\n  if (isArray(arg1) && arg2 == null) return d => pipe(d, arg1)\n  return recPipe(arg1, arg2)\n}\n\nconst identity = v => v\n\nexport const get = (ix, key, fallback) => {\n  return ix.assigns[key] == null ? fallback : ix.assigns[key]\n}\n\nexport const put = (key, value) => ix => {\n  ix.assigns[key] = value\n  return Ok(ix)\n}\n\nexport const update = (key, fn = identity) => ix => {\n  ix.assigns[key] = fn(ix.assigns[key], ix)\n  return Ok(ix)\n}\n\nexport const destroy = key => ix => {\n  delete ix.assigns[key]\n  return Ok(ix)\n}\n","import {pipe, interaction} from \"../interaction/interaction.js\"\n\nexport function build(fns = []) {\n  return pipe(interaction(), fns)\n}\n","const DEFAULT_RESPONSE = `{\n    \"tag\":null,\n    \"transaction\":null,\n    \"transactionStatus\":null,\n    \"transactionId\":null,\n    \"encodedData\":null,\n    \"events\":null,\n    \"account\":null,\n    \"block\":null,\n    \"blockHeader\":null,\n    \"latestBlock\":null,\n    \"collection\":null,\n    \"networkParameters\":null\n}`\n\nexport const response = () => JSON.parse(DEFAULT_RESPONSE)\n","import {pipe, Ok, makeGetBlock} from \"../interaction/interaction.js\"\n\n/**\n * @description - A builder function that returns the interaction to get the latest block\n * @param {boolean} [isSealed] - Whether or not the block should be sealed\n * @returns {object} - An interaction object\n */\nexport function getBlock(isSealed = null) {\n  return pipe([\n    makeGetBlock,\n    ix => {\n      ix.block.isSealed = isSealed\n      return Ok(ix)\n    },\n  ])\n}\n","import {pipe, makeGetAccount, Ok} from \"../interaction/interaction.js\"\nimport {sansPrefix} from \"@onflow/util-address\"\n\n/**\n * @description - A builder function that returns the interaction to get an account by address\n * @param {string} addr - The address of the account to getq\n * @returns {object} - An interaction object\n */\nexport function getAccount(addr) {\n  return pipe([\n    makeGetAccount,\n    ix => {\n      ix.account.addr = sansPrefix(addr)\n      return Ok(ix)\n    },\n  ])\n}\n","import {log, LEVELS} from \"@onflow/util-logger\"\n\nconst latestBlockDeprecationNotice = () => {\n  log.deprecate({\n    pkg: \"@onflow/decode\",\n    subject:\n      \"Operating upon data of the latestBlock field of the response object\",\n    transition:\n      \"https://github.com/onflow/flow-js-sdk/blob/master/packages/decode/WARNINGS.md#0001-Deprecating-latestBlock-field\",\n  })\n}\n\nconst decodeNumber = async (num, _, stack) => {\n  try {\n    return Number(num)\n  } catch (e) {\n    throw new Error(`Decode Number Error : ${stack.join(\".\")}`)\n  }\n}\n\nconst decodeImplicit = async i => i\n\nconst decodeVoid = async () => null\n\nconst decodeType = async type => {\n  return type.staticType\n}\n\nconst decodePath = async path => {\n  return {\n    domain: path.domain,\n    identifier: path.identifier,\n  }\n}\n\nconst decodeCapability = async cap => {\n  return {\n    path: cap.path,\n    address: cap.address,\n    borrowType: cap.borrowType,\n  }\n}\n\nconst decodeOptional = async (optional, decoders, stack) =>\n  optional ? await recurseDecode(optional, decoders, stack) : null\n\nconst decodeReference = async v => ({address: v.address, type: v.type})\n\nconst decodeArray = async (array, decoders, stack) =>\n  await Promise.all(\n    array.map(\n      v =>\n        new Promise(async res =>\n          res(await recurseDecode(v, decoders, [...stack, v.type]))\n        )\n    )\n  )\n\nconst decodeDictionary = async (dictionary, decoders, stack) =>\n  await dictionary.reduce(async (acc, v) => {\n    acc = await acc\n    acc[await recurseDecode(v.key, decoders, [...stack, v.key])] =\n      await recurseDecode(v.value, decoders, [...stack, v.key])\n    return acc\n  }, Promise.resolve({}))\n\nconst decodeComposite = async (composite, decoders, stack) => {\n  const decoded = await composite.fields.reduce(async (acc, v) => {\n    acc = await acc\n    acc[v.name] = await recurseDecode(v.value, decoders, [...stack, v.name])\n    return acc\n  }, Promise.resolve({}))\n  const decoder = composite.id && decoderLookup(decoders, composite.id)\n  return decoder ? await decoder(decoded) : decoded\n}\n\nconst defaultDecoders = {\n  UInt: decodeImplicit,\n  Int: decodeImplicit,\n  UInt8: decodeImplicit,\n  Int8: decodeImplicit,\n  UInt16: decodeImplicit,\n  Int16: decodeImplicit,\n  UInt32: decodeImplicit,\n  Int32: decodeImplicit,\n  UInt64: decodeImplicit,\n  Int64: decodeImplicit,\n  UInt128: decodeImplicit,\n  Int128: decodeImplicit,\n  UInt256: decodeImplicit,\n  Int256: decodeImplicit,\n  Word8: decodeImplicit,\n  Word16: decodeImplicit,\n  Word32: decodeImplicit,\n  Word64: decodeImplicit,\n  UFix64: decodeImplicit,\n  Fix64: decodeImplicit,\n  String: decodeImplicit,\n  Character: decodeImplicit,\n  Bool: decodeImplicit,\n  Address: decodeImplicit,\n  Void: decodeVoid,\n  Optional: decodeOptional,\n  Reference: decodeReference,\n  Array: decodeArray,\n  Dictionary: decodeDictionary,\n  Event: decodeComposite,\n  Resource: decodeComposite,\n  Struct: decodeComposite,\n  Enum: decodeComposite,\n  Type: decodeType,\n  Path: decodePath,\n  Capability: decodeCapability,\n}\n\nconst decoderLookup = (decoders, lookup) => {\n  const found = Object.keys(decoders).find(decoder => {\n    if (/^\\/.*\\/$/.test(decoder)) {\n      const reg = new RegExp(decoder.substring(1, decoder.length - 1))\n      return reg.test(lookup)\n    }\n    return decoder === lookup\n  })\n  return lookup && found && decoders[found]\n}\n\nconst recurseDecode = async (decodeInstructions, decoders, stack) => {\n  let decoder = decoderLookup(decoders, decodeInstructions.type)\n  if (!decoder)\n    throw new Error(\n      `Undefined Decoder Error: ${decodeInstructions.type}@${stack.join(\".\")}`\n    )\n  return await decoder(decodeInstructions.value, decoders, stack)\n}\n\n/**\n * @description - Decodes a response from Flow into JSON\n * @param {*} decodeInstructions - The response object from Flow\n * @param {object} customDecoders - An object of custom decoders\n * @param {Array<*>} stack - The stack of the current decoding\n * @returns {Promise<*>} - The decoded response\n */\nexport const decode = async (\n  decodeInstructions,\n  customDecoders = {},\n  stack = []\n) => {\n  // Filter out all default decoders which are overridden by a custom decoder regex\n  const filteredDecoders = Object.keys(defaultDecoders)\n    .filter(\n      decoder =>\n        !Object.keys(customDecoders).find(customDecoder =>\n          new RegExp(customDecoder).test(decoder)\n        )\n    )\n    .reduce((decoders, decoderKey) => {\n      decoders[decoderKey] = defaultDecoders[decoderKey]\n      return decoders\n    }, customDecoders)\n\n  const decoders = {\n    ...filteredDecoders,\n    ...customDecoders,\n  }\n  return recurseDecode(decodeInstructions, decoders, stack)\n}\n\nexport const decodeResponse = async (response, customDecoders = {}) => {\n  if (response.encodedData) {\n    return decode(response.encodedData, customDecoders)\n  } else if (response.transactionStatus) {\n    return {\n      ...response.transactionStatus,\n      events: await Promise.all(\n        response.transactionStatus.events.map(async function decodeEvents(e) {\n          return {\n            type: e.type,\n            transactionId: e.transactionId,\n            transactionIndex: e.transactionIndex,\n            eventIndex: e.eventIndex,\n            data: await decode(e.payload, customDecoders),\n          }\n        })\n      ),\n    }\n  } else if (response.transaction) {\n    return response.transaction\n  } else if (response.events) {\n    return await Promise.all(\n      response.events.map(async function decodeEvents(e) {\n        return {\n          blockId: e.blockId,\n          blockHeight: e.blockHeight,\n          blockTimestamp: e.blockTimestamp,\n          type: e.type,\n          transactionId: e.transactionId,\n          transactionIndex: e.transactionIndex,\n          eventIndex: e.eventIndex,\n          data: await decode(e.payload, customDecoders),\n        }\n      })\n    )\n  } else if (response.account) {\n    return response.account\n  } else if (response.block) {\n    return response.block\n  } else if (response.blockHeader) {\n    return response.blockHeader\n  } else if (response.latestBlock) {\n    latestBlockDeprecationNotice()\n    return response.latestBlock\n  } else if (response.transactionId) {\n    return response.transactionId\n  } else if (response.collection) {\n    return response.collection\n  } else if (response.networkParameters) {\n    const chainIdMap = {\n      \"flow-testnet\": \"testnet\",\n      \"flow-mainnet\": \"mainnet\",\n      \"flow-emulator\": \"local\",\n    }\n\n    return {\n      chainId: chainIdMap[response.networkParameters.chainId],\n    }\n  }\n\n  return null\n}\n","import {isTransaction, isScript, get} from \"../interaction/interaction.js\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport {config} from \"@onflow/config\"\nimport * as logger from \"@onflow/util-logger\"\nimport {withPrefix} from \"@onflow/util-address\"\n\nconst isFn = v => typeof v === \"function\"\nconst isString = v => typeof v === \"string\"\n\nconst oldIdentifierPatternFn = () => /\\b(0x\\w+)\\b/g\nfunction isOldIdentifierSyntax(cadence) {\n  return oldIdentifierPatternFn().test(cadence)\n}\n\nconst newIdentifierPatternFn = () => /import\\s+\"(\\w+)\"/g\nfunction isNewIdentifierSyntax(cadence) {\n  return newIdentifierPatternFn().test(cadence)\n}\n\nfunction getContractIdentifierSyntaxMatches(cadence) {\n  return cadence.matchAll(newIdentifierPatternFn())\n}\n\nexport async function resolveCadence(ix) {\n  if (!isTransaction(ix) && !isScript(ix)) return ix\n\n  var cadence = get(ix, \"ix.cadence\")\n\n  invariant(\n    isFn(cadence) || isString(cadence),\n    \"Cadence needs to be a function or a string.\"\n  )\n  if (isFn(cadence)) cadence = await cadence({})\n  invariant(isString(cadence), \"Cadence needs to be a string at this point.\")\n  invariant(\n    !isOldIdentifierSyntax(cadence) || !isNewIdentifierSyntax(cadence),\n    \"Both account identifier and contract identifier syntax not simultaneously supported.\"\n  )\n  if (isOldIdentifierSyntax(cadence)) {\n    cadence = await config()\n      .where(/^0x/)\n      .then(d =>\n        Object.entries(d).reduce((cadence, [key, value]) => {\n          const regex = new RegExp(\"(\\\\b\" + key + \"\\\\b)\", \"g\")\n          return cadence.replace(regex, value)\n        }, cadence)\n      )\n  }\n\n  if (isNewIdentifierSyntax(cadence)) {\n    for (const [fullMatch, contractName] of getContractIdentifierSyntaxMatches(\n      cadence\n    )) {\n      const address = await config().get(`system.contracts.${contractName}`)\n      if (address) {\n        cadence = cadence.replace(\n          fullMatch,\n          `import ${contractName} from ${withPrefix(address)}`\n        )\n      } else {\n        logger.log({\n          title: \"Contract Placeholder not found\",\n          message: `Cannot find a value for contract placeholder ${contractName}. Please add to your flow.json or explicitly add it to the config 'contracts.*' namespace.`,\n          level: logger.LEVELS.warn,\n        })\n      }\n    }\n  }\n\n  // We need to move this over in any case.\n  ix.message.cadence = cadence\n\n  return ix\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {isTransaction, isScript} from \"../interaction/interaction.js\"\n\nconst isFn = v => typeof v === \"function\"\n\nfunction cast(arg) {\n  // prettier-ignore\n  invariant(typeof arg.xform != null, `No type specified for argument: ${arg.value}`)\n\n  if (isFn(arg.xform)) return arg.xform(arg.value)\n  if (isFn(arg.xform.asArgument)) return arg.xform.asArgument(arg.value)\n\n  // prettier-ignore\n  invariant(false, `Invalid Argument`, arg)\n}\n\nasync function handleArgResolution(arg, depth = 3) {\n  invariant(\n    depth > 0,\n    `Argument Resolve Recursion Limit Exceeded for Arg: ${arg.tempId}`\n  )\n\n  if (isFn(arg.resolveArgument)) {\n    const resolvedArg = await arg.resolveArgument()\n    return handleArgResolution(resolvedArg, depth - 1)\n  } else {\n    return arg\n  }\n}\n\nexport async function resolveArguments(ix) {\n  if (isTransaction(ix) || isScript(ix)) {\n    for (let [id, arg] of Object.entries(ix.arguments)) {\n      const res = await handleArgResolution(arg)\n      ix.arguments[id].asArgument = cast(res)\n    }\n  }\n\n  return ix\n}\n","import {SHA3} from \"sha3\"\nimport {encode, Buffer} from \"@onflow/rlp\"\nimport {sansPrefix} from \"@onflow/util-address\"\n\nexport const encodeTransactionPayload = tx =>\n  prependTransactionDomainTag(rlpEncode(preparePayload(tx)))\nexport const encodeTransactionEnvelope = tx =>\n  prependTransactionDomainTag(rlpEncode(prepareEnvelope(tx)))\nexport const encodeTxIdFromVoucher = voucher =>\n  sha3_256(rlpEncode(prepareVoucher(voucher)))\n\nconst rightPaddedHexBuffer = (value, pad) =>\n  Buffer.from(value.padEnd(pad * 2, 0), \"hex\")\n\nconst leftPaddedHexBuffer = (value, pad) =>\n  Buffer.from(value.padStart(pad * 2, 0), \"hex\")\n\nconst TRANSACTION_DOMAIN_TAG = rightPaddedHexBuffer(\n  Buffer.from(\"FLOW-V0.0-transaction\").toString(\"hex\"),\n  32\n).toString(\"hex\")\nconst prependTransactionDomainTag = tx => TRANSACTION_DOMAIN_TAG + tx\n\nconst addressBuffer = addr => leftPaddedHexBuffer(addr, 8)\n\nconst blockBuffer = block => leftPaddedHexBuffer(block, 32)\n\nconst argumentToString = arg => Buffer.from(JSON.stringify(arg), \"utf8\")\n\nconst scriptBuffer = script => Buffer.from(script, \"utf8\")\nconst signatureBuffer = signature => Buffer.from(signature, \"hex\")\n\nconst rlpEncode = v => {\n  return encode(v).toString(\"hex\")\n}\n\nconst sha3_256 = msg => {\n  const sha = new SHA3(256)\n  sha.update(Buffer.from(msg, \"hex\"))\n  return sha.digest().toString(\"hex\")\n}\n\nconst preparePayload = tx => {\n  validatePayload(tx)\n\n  return [\n    scriptBuffer(tx.cadence),\n    tx.arguments.map(argumentToString),\n    blockBuffer(tx.refBlock),\n    tx.computeLimit,\n    addressBuffer(sansPrefix(tx.proposalKey.address)),\n    tx.proposalKey.keyId,\n    tx.proposalKey.sequenceNum,\n    addressBuffer(sansPrefix(tx.payer)),\n    tx.authorizers.map(authorizer => addressBuffer(sansPrefix(authorizer))),\n  ]\n}\n\nconst prepareEnvelope = tx => {\n  validateEnvelope(tx)\n\n  return [preparePayload(tx), preparePayloadSignatures(tx)]\n}\n\nconst preparePayloadSignatures = tx => {\n  const signers = collectSigners(tx)\n\n  return tx.payloadSigs\n    .map(sig => {\n      return {\n        signerIndex: signers.get(sig.address),\n        keyId: sig.keyId,\n        sig: sig.sig,\n      }\n    })\n    .sort((a, b) => {\n      if (a.signerIndex > b.signerIndex) return 1\n      if (a.signerIndex < b.signerIndex) return -1\n\n      if (a.keyId > b.keyId) return 1\n      if (a.keyId < b.keyId) return -1\n    })\n    .map(sig => {\n      return [sig.signerIndex, sig.keyId, signatureBuffer(sig.sig)]\n    })\n}\n\nconst collectSigners = tx => {\n  const signers = new Map()\n  let i = 0\n\n  const addSigner = addr => {\n    if (!signers.has(addr)) {\n      signers.set(addr, i)\n      i++\n    }\n  }\n\n  addSigner(tx.proposalKey.address)\n  addSigner(tx.payer)\n  tx.authorizers.forEach(addSigner)\n\n  return signers\n}\n\nconst prepareVoucher = voucher => {\n  validateVoucher(voucher)\n\n  const signers = collectSigners(voucher)\n\n  const prepareSigs = sigs => {\n    return sigs\n      .map(({address, keyId, sig}) => {\n        return {signerIndex: signers.get(address), keyId, sig}\n      })\n      .sort((a, b) => {\n        if (a.signerIndex > b.signerIndex) return 1\n        if (a.signerIndex < b.signerIndex) return -1\n        if (a.keyId > b.keyId) return 1\n        if (a.keyId < b.keyId) return -1\n      })\n      .map(sig => {\n        return [sig.signerIndex, sig.keyId, signatureBuffer(sig.sig)]\n      })\n  }\n\n  return [\n    [\n      scriptBuffer(voucher.cadence),\n      voucher.arguments.map(argumentToString),\n      blockBuffer(voucher.refBlock),\n      voucher.computeLimit,\n      addressBuffer(sansPrefix(voucher.proposalKey.address)),\n      voucher.proposalKey.keyId,\n      voucher.proposalKey.sequenceNum,\n      addressBuffer(sansPrefix(voucher.payer)),\n      voucher.authorizers.map(authorizer =>\n        addressBuffer(sansPrefix(authorizer))\n      ),\n    ],\n    prepareSigs(voucher.payloadSigs),\n    prepareSigs(voucher.envelopeSigs),\n  ]\n}\n\nconst validatePayload = tx => {\n  payloadFields.forEach(field => checkField(tx, field))\n  proposalKeyFields.forEach(field =>\n    checkField(tx.proposalKey, field, \"proposalKey\")\n  )\n}\n\nconst validateEnvelope = tx => {\n  payloadSigsFields.forEach(field => checkField(tx, field))\n  tx.payloadSigs.forEach((sig, index) => {\n    payloadSigFields.forEach(field =>\n      checkField(sig, field, \"payloadSigs\", index)\n    )\n  })\n}\n\nconst validateVoucher = voucher => {\n  payloadFields.forEach(field => checkField(voucher, field))\n  proposalKeyFields.forEach(field =>\n    checkField(voucher.proposalKey, field, \"proposalKey\")\n  )\n  payloadSigsFields.forEach(field => checkField(voucher, field))\n  voucher.payloadSigs.forEach((sig, index) => {\n    payloadSigFields.forEach(field =>\n      checkField(sig, field, \"payloadSigs\", index)\n    )\n  })\n  envelopeSigsFields.forEach(field => checkField(voucher, field))\n  voucher.envelopeSigs.forEach((sig, index) => {\n    envelopeSigFields.forEach(field =>\n      checkField(sig, field, \"envelopeSigs\", index)\n    )\n  })\n}\n\nconst isNumber = v => typeof v === \"number\"\nconst isString = v => typeof v === \"string\"\nconst isObject = v => v !== null && typeof v === \"object\"\nconst isArray = v => isObject(v) && v instanceof Array\n\nconst payloadFields = [\n  {name: \"cadence\", check: isString},\n  {name: \"arguments\", check: isArray},\n  {name: \"refBlock\", check: isString, defaultVal: \"0\"},\n  {name: \"computeLimit\", check: isNumber},\n  {name: \"proposalKey\", check: isObject},\n  {name: \"payer\", check: isString},\n  {name: \"authorizers\", check: isArray},\n]\n\nconst proposalKeyFields = [\n  {name: \"address\", check: isString},\n  {name: \"keyId\", check: isNumber},\n  {name: \"sequenceNum\", check: isNumber},\n]\n\nconst payloadSigsFields = [{name: \"payloadSigs\", check: isArray}]\n\nconst payloadSigFields = [\n  {name: \"address\", check: isString},\n  {name: \"keyId\", check: isNumber},\n  {name: \"sig\", check: isString},\n]\n\nconst envelopeSigsFields = [{name: \"envelopeSigs\", check: isArray}]\n\nconst envelopeSigFields = [\n  {name: \"address\", check: isString},\n  {name: \"keyId\", check: isNumber},\n  {name: \"sig\", check: isString},\n]\n\nconst checkField = (obj, field, base, index) => {\n  const {name, check, defaultVal} = field\n  if (obj[name] == null && defaultVal != null) obj[name] = defaultVal\n  if (obj[name] == null) throw missingFieldError(name, base, index)\n  if (!check(obj[name])) throw invalidFieldError(name, base, index)\n}\n\nconst printFieldName = (field, base, index) => {\n  if (!!base)\n    return index == null ? `${base}.${field}` : `${base}.${index}.${field}`\n  return field\n}\n\nconst missingFieldError = (field, base, index) =>\n  new Error(`Missing field ${printFieldName(field, base, index)}`)\nconst invalidFieldError = (field, base, index) =>\n  new Error(`Invalid field ${printFieldName(field, base, index)}`)\n","import {withPrefix} from \"@onflow/util-address\"\nimport {encodeTxIdFromVoucher} from \"../encode/encode.js\"\n\nexport function findInsideSigners(ix) {\n  // Inside Signers Are: (authorizers + proposer) - payer\n  let inside = new Set(ix.authorizations)\n  inside.add(ix.proposer)\n  if (Array.isArray(ix.payer)) {\n    ix.payer.forEach(p => inside.delete(p))\n  } else {\n    inside.delete(ix.payer)\n  }\n  return Array.from(inside)\n}\n\nexport function findOutsideSigners(ix) {\n  // Outside Signers Are: (payer)\n  let outside = new Set(Array.isArray(ix.payer) ? ix.payer : [ix.payer])\n  return Array.from(outside)\n}\n\nexport const createSignableVoucher = ix => {\n  const buildAuthorizers = () => {\n    const authorizations = ix.authorizations\n      .map(cid => withPrefix(ix.accounts[cid].addr))\n      .reduce((prev, current) => {\n        return prev.find(item => item === current) ? prev : [...prev, current]\n      }, [])\n    return authorizations[0] ? authorizations : []\n  }\n\n  const buildInsideSigners = () =>\n    findInsideSigners(ix).map(id => ({\n      address: withPrefix(ix.accounts[id].addr),\n      keyId: ix.accounts[id].keyId,\n      sig: ix.accounts[id].signature,\n    }))\n\n  const buildOutsideSigners = () =>\n    findOutsideSigners(ix).map(id => ({\n      address: withPrefix(ix.accounts[id].addr),\n      keyId: ix.accounts[id].keyId,\n      sig: ix.accounts[id].signature,\n    }))\n\n  return {\n    cadence: ix.message.cadence,\n    refBlock: ix.message.refBlock || null,\n    computeLimit: ix.message.computeLimit,\n    arguments: ix.message.arguments.map(id => ix.arguments[id].asArgument),\n    proposalKey: {\n      address: withPrefix(ix.accounts[ix.proposer].addr),\n      keyId: ix.accounts[ix.proposer].keyId,\n      sequenceNum: ix.accounts[ix.proposer].sequenceNum,\n    },\n    payer: withPrefix(\n      ix.accounts[Array.isArray(ix.payer) ? ix.payer[0] : ix.payer].addr\n    ),\n    authorizers: buildAuthorizers(),\n    payloadSigs: buildInsideSigners(),\n    envelopeSigs: buildOutsideSigners(),\n  }\n}\n\nexport const voucherToTxId = voucher => {\n  return encodeTxIdFromVoucher(voucher)\n}\n","import {sansPrefix, withPrefix} from \"@onflow/util-address\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport {log} from \"@onflow/util-logger\"\nimport {isTransaction} from \"../interaction/interaction.js\"\nimport {createSignableVoucher} from \"./voucher.js\"\n\nconst idof = acct => `${withPrefix(acct.addr)}-${acct.keyId}`\nconst isFn = v => typeof v === \"function\"\n\nexport function buildPreSignable(acct, ix) {\n  try {\n    return {\n      f_type: \"PreSignable\",\n      f_vsn: \"1.0.1\",\n      roles: acct.role,\n      cadence: ix.message.cadence,\n      args: ix.message.arguments.map(d => ix.arguments[d].asArgument),\n      data: {},\n      interaction: ix,\n      voucher: createSignableVoucher(ix),\n    }\n  } catch (error) {\n    console.error(\"buildPreSignable\", error)\n    throw error\n  }\n}\n\nasync function collectAccounts(ix, accounts, last, depth = 3) {\n  invariant(depth, \"Account Resolve Recursion Limit Exceeded\", {ix, accounts})\n\n  let authorizations = []\n  for (let ax of accounts) {\n    let resolve = ax.resolve\n    ax.resolve = null\n    var old = last || ax\n    if (isFn(resolve)) ax = await resolve(ax, buildPreSignable(ax, ix))\n\n    if (Array.isArray(ax)) {\n      await collectAccounts(ix, ax, old, depth - 1)\n    } else {\n      if (ax.addr) {\n        ax.addr = sansPrefix(ax.addr)\n      }\n      if (ax.addr != null && ax.keyId != null) {\n        ax.tempId = idof(ax)\n      }\n      ix.accounts[ax.tempId] = ix.accounts[ax.tempId] || ax\n      ix.accounts[ax.tempId].role.proposer =\n        ix.accounts[ax.tempId].role.proposer || ax.role.proposer\n      ix.accounts[ax.tempId].role.payer =\n        ix.accounts[ax.tempId].role.payer || ax.role.payer\n      ix.accounts[ax.tempId].role.authorizer =\n        ix.accounts[ax.tempId].role.authorizer || ax.role.authorizer\n\n      if (ix.accounts[ax.tempId].role.proposer && ix.proposer === old.tempId) {\n        ix.proposer = ax.tempId\n      }\n\n      if (ix.accounts[ax.tempId].role.payer) {\n        if (Array.isArray(ix.payer)) {\n          ix.payer = Array.from(\n            new Set(\n              [...ix.payer, ax.tempId].map(d =>\n                d === old.tempId ? ax.tempId : d\n              )\n            )\n          )\n        } else {\n          ix.payer = Array.from(\n            new Set(\n              [ix.payer, ax.tempId].map(d => (d === old.tempId ? ax.tempId : d))\n            )\n          )\n        }\n        if (ix.payer.length > 1) {\n          // remove payer dups based on addr and keyId\n          const dupList = []\n          const payerAccts = []\n          ix.payer = ix.payer.reduce((g, tempId) => {\n            const {addr} = ix.accounts[tempId]\n            const key = idof(ix.accounts[tempId])\n            payerAccts.push(addr)\n            if (dupList.includes(key)) return g\n            dupList.push(key)\n            return [...g, tempId]\n          }, [])\n          const multiAccts = Array.from(new Set(payerAccts))\n          if (multiAccts.length > 1) {\n            throw new Error(\"Payer can not be different accounts\")\n          }\n        }\n      }\n\n      if (ix.accounts[ax.tempId].role.authorizer) {\n        if (last) {\n          // do group replacement\n          authorizations = Array.from(new Set([...authorizations, ax.tempId]))\n        } else {\n          // do 1-1 replacement\n          ix.authorizations = ix.authorizations.map(d =>\n            d === old.tempId ? ax.tempId : d\n          )\n        }\n      }\n    }\n    if (old.tempId != ax.tempId) delete ix.accounts[old.tempId]\n  }\n\n  if (last) {\n    // complete (flatmap) group replacement\n    ix.authorizations = ix.authorizations\n      .map(d => (d === last.tempId ? authorizations : d))\n      .reduce(\n        (prev, curr) =>\n          Array.isArray(curr) ? [...prev, ...curr] : [...prev, curr],\n        []\n      )\n  }\n}\n\nexport async function resolveAccounts(ix) {\n  if (isTransaction(ix)) {\n    if (!Array.isArray(ix.payer)) {\n      log.deprecate({\n        pkg: \"FCL\",\n        subject:\n          '\"ix.payer\" must be an array. Support for ix.payer as a singular',\n        message: \"See changelog for more info.\",\n      })\n    }\n    try {\n      await collectAccounts(ix, Object.values(ix.accounts))\n      await collectAccounts(ix, Object.values(ix.accounts))\n    } catch (error) {\n      console.error(\"=== SAD PANDA ===\\n\\n\", error, \"\\n\\n=== SAD PANDA ===\")\n      throw error\n    }\n  }\n  return ix\n}\n","import {isTransaction} from \"../interaction/interaction.js\"\nimport {sansPrefix} from \"@onflow/util-address\"\nimport {\n  encodeTransactionPayload as encodeInsideMessage,\n  encodeTransactionEnvelope as encodeOutsideMessage,\n} from \"../encode/encode.js\"\nimport {\n  createSignableVoucher,\n  findInsideSigners,\n  findOutsideSigners,\n} from \"./voucher.js\"\n\nexport async function resolveSignatures(ix) {\n  if (isTransaction(ix)) {\n    try {\n      let insideSigners = findInsideSigners(ix)\n      const insidePayload = encodeInsideMessage(prepForEncoding(ix))\n      await Promise.all(insideSigners.map(fetchSignature(ix, insidePayload)))\n\n      let outsideSigners = findOutsideSigners(ix)\n      const outsidePayload = encodeOutsideMessage({\n        ...prepForEncoding(ix),\n        payloadSigs: insideSigners.map(id => ({\n          address: ix.accounts[id].addr,\n          keyId: ix.accounts[id].keyId,\n          sig: ix.accounts[id].signature,\n        })),\n      })\n      await Promise.all(outsideSigners.map(fetchSignature(ix, outsidePayload)))\n    } catch (error) {\n      console.error(\"Signatures\", error, {ix})\n      throw error\n    }\n  }\n  return ix\n}\n\nfunction fetchSignature(ix, payload) {\n  return async function innerFetchSignature(id) {\n    const acct = ix.accounts[id]\n    if (acct.signature != null) return\n    const {signature} = await acct.signingFunction(\n      buildSignable(acct, payload, ix)\n    )\n    ix.accounts[id].signature = signature\n  }\n}\n\nexport function buildSignable(acct, message, ix) {\n  try {\n    return {\n      f_type: \"Signable\",\n      f_vsn: \"1.0.1\",\n      message,\n      addr: sansPrefix(acct.addr),\n      keyId: acct.keyId,\n      roles: acct.role,\n      cadence: ix.message.cadence,\n      args: ix.message.arguments.map(d => ix.arguments[d].asArgument),\n      data: {},\n      interaction: ix,\n      voucher: createSignableVoucher(ix),\n    }\n  } catch (error) {\n    console.error(\"buildSignable\", error)\n    throw error\n  }\n}\n\nfunction prepForEncoding(ix) {\n  const payerAddress = sansPrefix(\n    (Array.isArray(ix.payer) ? ix.accounts[ix.payer[0]] : ix.accounts[ix.payer])\n      .addr\n  )\n  return {\n    cadence: ix.message.cadence,\n    refBlock: ix.message.refBlock || null,\n    computeLimit: ix.message.computeLimit,\n    arguments: ix.message.arguments.map(id => ix.arguments[id].asArgument),\n    proposalKey: {\n      address: sansPrefix(ix.accounts[ix.proposer].addr),\n      keyId: ix.accounts[ix.proposer].keyId,\n      sequenceNum: ix.accounts[ix.proposer].sequenceNum,\n    },\n    payer: payerAddress,\n    authorizers: ix.authorizations\n      .map(cid => sansPrefix(ix.accounts[cid].addr))\n      .reduce((prev, current) => {\n        return prev.find(item => item === current) ? prev : [...prev, current]\n      }, []),\n  }\n}\n","import {get, pipe, Ok, Bad} from \"../interaction/interaction.js\"\n\nexport async function resolveValidators(ix) {\n  const validators = get(ix, \"ix.validators\", [])\n  return pipe(\n    ix,\n    validators.map(cb => ix => cb(ix, {Ok, Bad}))\n  )\n}\n","import {sansPrefix} from \"@onflow/util-address\"\n\nexport async function resolveFinalNormalization(ix) {\n  for (let key of Object.keys(ix.accounts)) {\n    ix.accounts[key].addr = sansPrefix(ix.accounts[key].addr)\n  }\n  return ix\n}\n","import {get, isFn} from \"../interaction/interaction.js\"\nimport {createSignableVoucher} from \"./voucher.js\"\n\nexport async function resolveVoucherIntercept(ix) {\n  const fn = get(ix, \"ix.voucher-intercept\")\n  if (isFn(fn)) {\n    await fn(createSignableVoucher(ix))\n  }\n  return ix\n}\n","import {isTransaction} from \"../interaction/interaction.js\"\nimport {config} from \"@onflow/config\"\nimport * as logger from \"@onflow/util-logger\"\n\nconst DEFAULT_COMPUTE_LIMIT = 100\n\nexport async function resolveComputeLimit(ix) {\n  if (isTransaction(ix)) {\n    ix.message.computeLimit =\n      ix.message.computeLimit || (await config.get(\"fcl.limit\"))\n\n    if (!ix.message.computeLimit) {\n      logger.log.deprecate({\n        pkg: \"FCL/SDK\",\n        subject:\n          \"The built-in default compute limit (DEFAULT_COMPUTE_LIMIT=10)\",\n        transition:\n          \"https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0009-deprecate-default-compute-limit\",\n      })\n      ix.message.computeLimit = DEFAULT_COMPUTE_LIMIT\n    }\n  }\n  return ix\n}\n","import {pipe, isTransaction} from \"../interaction/interaction.js\"\nimport {config} from \"@onflow/config\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport {Buffer} from \"@onflow/rlp\"\nimport {send as defaultSend} from \"@onflow/transport-http\"\nimport * as ixModule from \"../interaction/interaction.js\"\nimport {response} from \"../response/response.js\"\nimport {build} from \"../build/build.js\"\nimport {getBlock} from \"../build/build-get-block.js\"\nimport {getAccount} from \"../build/build-get-account.js\"\nimport {decodeResponse as decode} from \"../decode/decode.js\"\n\nimport {resolveCadence} from \"./resolve-cadence.js\"\nimport {resolveArguments} from \"./resolve-arguments.js\"\nimport {resolveAccounts} from \"./resolve-accounts.js\"\nimport {resolveSignatures} from \"./resolve-signatures.js\"\nimport {resolveValidators} from \"./resolve-validators.js\"\nimport {resolveFinalNormalization} from \"./resolve-final-normalization.js\"\nimport {resolveVoucherIntercept} from \"./resolve-voucher-intercept.js\"\nimport {resolveComputeLimit} from \"./resolve-compute-limit.js\"\n\nconst noop = v => v\nconst debug =\n  (key, fn = noop) =>\n  async ix => {\n    const take = (obj, keys = []) => {\n      if (typeof keys === \"string\") keys = keys.split(\" \")\n      keys.reduce((acc, key) => ({...acc, [key]: obj[key]}), {})\n    }\n\n    const accts = ix =>\n      [\n        \"\\nAccounts:\",\n        {\n          proposer: ix.proposer,\n          authorizations: ix.authorizations,\n          payer: ix.payer,\n        },\n        \"\\n\\nDetails:\",\n        ix.accounts,\n      ].filter(Boolean)\n\n    const log = (...msg) => {\n      console.log(`debug[${key}] ---\\n`, ...msg, \"\\n\\n\\n---\")\n    }\n\n    if (await config.get(`debug.${key}`)) await fn(ix, log, accts)\n    return ix\n  }\n\nexport const resolve = pipe([\n  resolveCadence,\n  debug(\"cadence\", (ix, log) => log(ix.message.cadence)),\n  resolveComputeLimit,\n  debug(\"compute limit\", (ix, log) => log(ix.message.computeLimit)),\n  resolveArguments,\n  debug(\"arguments\", (ix, log) => log(ix.message.arguments, ix.message)),\n  resolveAccounts,\n  debug(\"accounts\", (ix, log, accts) => log(...accts(ix))),\n  /* special */ execFetchRef,\n  /* special */ execFetchSequenceNumber,\n  resolveSignatures,\n  debug(\"signatures\", (ix, log, accts) => log(...accts(ix))),\n  resolveFinalNormalization,\n  resolveValidators,\n  resolveVoucherIntercept,\n  debug(\"resolved\", (ix, log) => log(ix)),\n])\n\nasync function execFetchRef(ix) {\n  if (isTransaction(ix) && ix.message.refBlock == null) {\n    const node = await config().get(\"accessNode.api\")\n    const sendFn = await config.first(\n      [\"sdk.transport\", \"sdk.send\"],\n      defaultSend\n    )\n\n    invariant(\n      sendFn,\n      `Required value for sdk.transport is not defined in config. See: ${\"https://github.com/onflow/fcl-js/blob/master/packages/sdk/CHANGELOG.md#0057-alpha1----2022-01-21\"}`\n    )\n\n    ix.message.refBlock = (\n      await sendFn(\n        build([getBlock()]),\n        {config, response, Buffer, ix: ixModule},\n        {node}\n      ).then(decode)\n    ).id\n  }\n  return ix\n}\n\nasync function execFetchSequenceNumber(ix) {\n  if (isTransaction(ix)) {\n    var acct = Object.values(ix.accounts).find(a => a.role.proposer)\n    invariant(acct, `Transactions require a proposer`)\n    if (acct.sequenceNum == null) {\n      const node = await config().get(\"accessNode.api\")\n      const sendFn = await config.first(\n        [\"sdk.transport\", \"sdk.send\"],\n        defaultSend\n      )\n\n      invariant(\n        sendFn,\n        `Required value for sdk.transport is not defined in config. See: ${\"https://github.com/onflow/fcl-js/blob/master/packages/sdk/CHANGELOG.md#0057-alpha1----2022-01-21\"}`\n      )\n\n      ix.accounts[acct.tempId].sequenceNum = await sendFn(\n        await build([getAccount(acct.addr)]),\n        {config, response, Buffer, ix: ixModule},\n        {node}\n      )\n        .then(decode)\n        .then(acct => acct.keys)\n        .then(keys => keys.find(key => key.index === acct.keyId))\n        .then(key => key.sequenceNumber)\n    }\n  }\n  return ix\n}","import {Ok, Bad} from \"../interaction/interaction.js\"\n\nexport function invariant(...args) {\n  if (args.length > 1) {\n    const [predicate, message] = args\n    return invariant((ix, {Ok, Bad}) => {\n      return predicate ? Ok(ix) : Bad(ix, message)\n    })\n  }\n  const [fn] = args\n  return ix => fn(ix, {Ok, Bad})\n}\n","import {Buffer} from \"@onflow/rlp\"\nimport {send as defaultSend} from \"@onflow/transport-http\"\nimport {interaction, pipe} from \"../interaction/interaction.js\"\nimport * as ixModule from \"../interaction/interaction.js\"\nimport {invariant} from \"../build/build-invariant.js\"\nimport {response} from \"../response/response.js\"\nimport {config} from \"@onflow/config\"\nimport {resolve as defaultResolve} from \"../resolve/resolve.js\"\n\n/**\n * @description - Sends arbitrary scripts, transactions, and requests to Flow\n * @param {Array.<Function>} args - An array of functions that take interaction and return interaction\n * @param {object} opts - Optional parameters\n * @returns {Promise<*>} - A promise that resolves to a response\n */\nexport const send = async (args = [], opts = {}) => {\n  const sendFn = await config.first(\n    [\"sdk.transport\", \"sdk.send\"],\n    opts.send || defaultSend\n  )\n\n  invariant(\n    sendFn,\n    `Required value for sdk.transport is not defined in config. See: ${\"https://github.com/onflow/fcl-js/blob/master/packages/sdk/CHANGELOG.md#0057-alpha1----2022-01-21\"}`\n  )\n\n  const resolveFn = await config.first(\n    [\"sdk.resolve\"],\n    opts.resolve || defaultResolve\n  )\n\n  opts.node = opts.node || (await config().get(\"accessNode.api\"))\n\n  if (Array.isArray(args)) args = pipe(interaction(), args)\n  return sendFn(\n    await resolveFn(args),\n    {config, response, ix: ixModule, Buffer},\n    opts\n  )\n}\n","import {decodeResponse} from \"./decode.js\"\nimport {config} from \"@onflow/config\"\n\nexport async function decode(response) {\n  const decodersFromConfig = await config().where(/^decoder\\./)\n  const decoders = Object.entries(decodersFromConfig).map(\n    ([pattern, xform]) => {\n      pattern = `/${pattern.replace(/^decoder\\./, \"\")}$/`\n      return [pattern, xform]\n    }\n  )\n\n  return decodeResponse(response, Object.fromEntries(decoders))\n}\n","import {withPrefix, sansPrefix} from \"@onflow/util-address\"\nimport {\n  encodeTransactionPayload,\n  encodeTransactionEnvelope,\n} from \"../encode/encode.js\"\n\nconst findPayloadSigners = voucher => {\n  // Payload Signers Are: (authorizers + proposer) - payer\n  let payload = new Set(voucher.authorizers)\n  payload.add(voucher.proposalKey.address)\n  payload.delete(voucher.payer)\n  return Array.from(payload).map(withPrefix)\n}\n\nconst findEnvelopeSigners = voucher => {\n  // Envelope Signers Are: (payer)\n  let envelope = new Set([voucher.payer])\n  return Array.from(envelope).map(withPrefix)\n}\n\nexport class UnableToDetermineMessageEncodingTypeForSignerAddress extends Error {\n  constructor(signerAddress) {\n    const msg = `\n        Encode Message From Signable Error: Unable to determine message encoding for signer addresss: ${signerAddress}. \n        Please ensure the address: ${signerAddress} is intended to sign the given transaction as specified by the transaction signable.\n      `.trim()\n    super(msg)\n    this.name = \"Unable To Determine Message Encoding For Signer Addresss\"\n  }\n}\n\nexport const encodeMessageFromSignable = (signable, signerAddress) => {\n  let payloadSigners = findPayloadSigners(signable.voucher)\n  let envelopeSigners = findEnvelopeSigners(signable.voucher)\n\n  const isPayloadSigner = payloadSigners.includes(withPrefix(signerAddress))\n  const isEnvelopeSigner = envelopeSigners.includes(withPrefix(signerAddress))\n\n  if (!isPayloadSigner && !isEnvelopeSigner) {\n    throw new UnableToDetermineMessageEncodingTypeForSignerAddress(\n      signerAddress\n    )\n  }\n\n  const message = {\n    cadence: signable.voucher.cadence,\n    refBlock: signable.voucher.refBlock,\n    computeLimit: signable.voucher.computeLimit,\n    arguments: signable.voucher.arguments,\n    proposalKey: {\n      ...signable.voucher.proposalKey,\n      address: sansPrefix(signable.voucher.proposalKey.address),\n    },\n    payer: sansPrefix(signable.voucher.payer),\n    authorizers: signable.voucher.authorizers.map(sansPrefix),\n    payloadSigs: signable.voucher.payloadSigs.map(ps => ({\n      ...ps,\n      address: sansPrefix(ps.address),\n    })),\n  }\n\n  return isPayloadSigner\n    ? encodeTransactionPayload(message)\n    : encodeTransactionEnvelope(message)\n}\n","import {update} from \"../interaction/interaction.js\"\n\nexport function validator(cb) {\n  return update(\"ix.validators\", validators =>\n    Array.isArray(validators) ? validators.push(cb) : [cb]\n  )\n}\n","import {pipe} from \"../interaction/interaction.js\"\nimport {validator} from \"./build-validator.js\"\n\n/**\n * @description - A builder function that returns a partial interaction to a block at a specific height\n * @param {number} height - The height of the block to get\n * @returns {object} - A partial interaction object\n */\nexport function atBlockHeight(height) {\n  return pipe([\n    ix => {\n      ix.block.height = height\n      return ix\n    },\n    validator(ix => {\n      if (typeof ix.block.isSealed === \"boolean\")\n        throw new Error(\"Unable to specify both block height and isSealed.\")\n      if (ix.block.id)\n        throw new Error(\"Unable to specify both block height and block id.\")\n      return ix\n    }),\n  ])\n}\n","import {isGetAccount, pipe, Ok} from \"../interaction/interaction.js\"\nimport {validator} from \"./build-validator.js\"\n\nexport function atBlockId(id) {\n  return pipe([\n    ix => {\n      ix.block.id = id\n      return Ok(ix)\n    },\n    validator((ix, {Ok, Bad}) => {\n      if (isGetAccount(ix))\n        return Bad(\n          ix,\n          \"Unable to specify a block id with a Get Account interaction.\"\n        )\n      if (typeof ix.block.isSealed === \"boolean\")\n        return Bad(ix, \"Unable to specify both block id and isSealed.\")\n      if (ix.block.height)\n        return Bad(ix, \"Unable to specify both block id and block height.\")\n      return Ok(ix)\n    }),\n  ])\n}\n","import {atBlockHeight} from \"../build/build-at-block-height.js\"\nimport {atBlockId} from \"../build/build-at-block-id.js\"\nimport {getAccount} from \"../build/build-get-account.js\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport {decodeResponse as decode} from \"../decode/decode.js\"\nimport {send} from \"../send/send.js\"\n\n/**\n * @typedef {import(\"@onflow/typedefs\").Account} Account\n */\n\n/**\n * @description  Returns the details of an account from their public address\n * @param {string} address - Address of the account\n * @param {object} [queryOptions] - Query parameters\n * @param {number} [queryOptions.height] - Block height to query\n * @param {string} [queryOptions.id] - Block ID to query\n * @param {object} [opts] - Optional parameters\n * @returns {Promise<Account>} - A promise that resolves to an account response\n */\nexport function account(address, {height, id} = {}, opts) {\n  invariant(\n    !(id && height),\n    `Method: account -- Cannot pass \"id\" and \"height\" simultaneously`\n  )\n\n  // Get account by ID\n  if (id) return send([getAccount(address), atBlockId(id)], opts).then(decode)\n\n  // Get account by height\n  if (height)\n    return send([getAccount(address), atBlockHeight(height)], opts).then(decode)\n\n  return send([getAccount(address)], opts).then(decode)\n}\n","import {send} from \"../send/send.js\"\nimport {getBlock} from \"../build/build-get-block\"\nimport {atBlockHeight} from \"../build/build-at-block-height.js\"\nimport {atBlockId} from \"../build/build-at-block-id.js\"\nimport {decodeResponse as decode} from \"../decode/decode.js\"\nimport {invariant} from \"@onflow/util-invariant\"\n\n/**\n * @typedef {import(\"@onflow/typedefs\").Block} Block\n */\n\n/**\n * @description Returns the latest block (optionally sealed or not), by id, or by height\n * @param {object} [queryOptions] - Query parameters\n * @param {boolean} [queryOptions.sealed=false] - Whether to query for a sealed block\n * @param {number} [queryOptions.height] - Block height to query\n * @param {string} [queryOptions.id] - Block ID to query\n * @param {object} [opts] - Optional parameters\n * @returns {Promise<Block>} - A promise that resolves to a block response\n */\nexport function block({sealed = false, id, height} = {}, opts = {}) {\n  invariant(\n    !((sealed && id) || (sealed && height)),\n    `Method: block -- Cannot pass \"sealed\" with \"id\" or \"height\"`\n  )\n\n  invariant(\n    !(id && height),\n    `Method: block -- Cannot pass \"id\" and \"height\" simultaneously`\n  )\n\n  // Get block by ID\n  if (id) return send([getBlock(), atBlockId(id)], opts).then(decode)\n\n  // Get block by height\n  if (height)\n    return send([getBlock(), atBlockHeight(height)], opts).then(decode)\n\n  // Get latest block\n  return send([getBlock(sealed)], opts).then(decode)\n}\n","import {pipe, prepAccount, AUTHORIZER} from \"../interaction/interaction.js\"\n\nexport function authorizations(ax = []) {\n  return pipe(\n    ax.map(authz => {\n      return prepAccount(authz, {role: AUTHORIZER})\n    })\n  )\n}\n\nexport function authorization(addr, signingFunction, keyId, sequenceNum) {\n  return {addr, signingFunction, keyId, sequenceNum}\n}\n","import {pipe, Ok, makeGetEvents} from \"../interaction/interaction.js\"\nimport * as logger from \"@onflow/util-logger\"\n\nexport function getEvents(eventType, start, end) {\n  if (typeof start !== \"undefined\" || typeof end !== \"undefined\") {\n    logger.log.deprecate({\n      pkg: \"FCL/SDK\",\n      subject: \"Passing a start and end into getEvents\",\n      transition:\n        \"https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0005-deprecate-start-end-get-events-builder\",\n    })\n  }\n\n  return pipe([\n    makeGetEvents,\n    ix => {\n      ix.events.eventType = eventType\n      ix.events.start = start\n      ix.events.end = end\n      return Ok(ix)\n    },\n  ])\n}\n","import {pipe, Ok, makeGetEvents} from \"../interaction/interaction.js\"\n\n/**\n * @description - A builder function that returns all instances of a particular event (by name) within a height range\n * NOTE:\n * - The block range provided must be from the current spork.\n * - The block range provided must be 250 blocks or lower per request.\n * @param {string} eventName - The name of the event to get\n * @param {number} fromBlockHeight - The height of the block to start looking for events (inclusive)\n * @param {number} toBlockHeight - The height of the block to stop looking for events (inclusive)\n * @returns {object} - An interaction object\n */\nexport function getEventsAtBlockHeightRange(eventName, fromBlockHeight, toBlockHeight) {\n  return pipe([\n    makeGetEvents,\n    ix => {\n      ix.events.eventType = eventName\n      ix.events.start = fromBlockHeight\n      ix.events.end = toBlockHeight\n      return Ok(ix)\n    },\n  ])\n}\n","import {pipe, Ok, makeGetEvents} from \"../interaction/interaction.js\"\n\n/**\n * @description - A builder function that returns all instances of a particular event (by name) within a set of blocks, specified by block ids\n * NOTE:\n * - The block range provided must be from the current spork.\n * @param {string} eventName - The name of the event to get\n * @param {number[]} blockIds - The ids of the blocks to look for events\n * @returns {object} - An interaction object\n */\nexport function getEventsAtBlockIds(eventName, blockIds = []) {\n  return pipe([\n    makeGetEvents,\n    ix => {\n      ix.events.eventType = eventName\n      ix.events.blockIds = blockIds\n      return Ok(ix)\n    },\n  ])\n}\n","import {pipe, Ok, makeGetBlockHeader} from \"../interaction/interaction.js\"\n\n/**\n * @description - A builder function that returns the interaction to get a block header\n * @param {boolean} [isSealed] - Whether or not the block should be sealed\n * @returns {object} - An interaction object\n */\nexport function getBlockHeader(isSealed = null) {\n  return pipe([\n    makeGetBlockHeader,\n    ix => {\n      ix.block.isSealed = isSealed\n      return Ok(ix)\n    },\n  ])\n}\n","import {pipe, makeGetCollection} from \"../interaction/interaction.js\"\n\n/**\n * @description - A builder function that returns all a collection containing a list of transaction ids by its collection id\n * NOTE:\n * - The block range provided must be from the current spork. All events emitted during past sporks is current unavailable.\n * @param {string} [id] - The id of the collection to get\n * @returns {object} - An interaction object\n */\nexport function getCollection(id = null) {\n  return pipe([\n    makeGetCollection,\n    ix => {\n      ix.collection.id = id\n      return ix\n    },\n  ])\n}\n","import {pipe, Ok, makeGetTransactionStatus} from \"../interaction/interaction.js\"\n\n/**\n * @description - A builder function that returns the status of transaction\n * NOTE: The transactionID provided must be from the current spork.\n * @param {string} transactionId - The id of the transaction to get status\n * @returns {object} - An interaction object\n */\nexport function getTransactionStatus(transactionId) {\n  return pipe([\n    makeGetTransactionStatus,\n    ix => {\n      ix.transaction.id = transactionId\n      return Ok(ix)\n    },\n  ])\n}\n","import {pipe, Ok, makeGetTransaction} from \"../interaction/interaction.js\"\n\n/**\n * @description - A builder function that returns a transaction\n * NOTE: The transactionID provided must be from the current spork.\n * @param {string} transactionId - The id of the transaction to get\n * @returns {object} - An interaction object\n */\nexport function getTransaction(transactionId) {\n  return pipe([\n    makeGetTransaction,\n    ix => {\n      ix.transaction.id = transactionId\n      return Ok(ix)\n    },\n  ])\n}\n","import {pipe, Ok, makeGetNetworkParameters} from \"../interaction/interaction.js\"\n\nexport function getNetworkParameters() {\n  return pipe([\n    makeGetNetworkParameters,\n    ix => {\n      return Ok(ix)\n    },\n  ])\n}\n","export function limit(computeLimit) {\n  return ix => {\n    ix.message.computeLimit = computeLimit\n    return ix\n  }\n}\n","import {pipe, makeArgument} from \"../interaction/interaction.js\"\n\n/**\n * @description - A utility builder to be used with other builders to pass in arguments with a value and supported type\n * @param {Array.<*>} ax - An array of arguments\n * @returns {object} - An interaction object\n */\nexport function args(ax = []) {\n  return pipe(ax.map(makeArgument))\n}\n\n/**\n * @description - A utility builder to be used with fcl.args[...] to create FCL supported arguments for interactions\n * @param {any} value - The value of the argument\n * @param {Function} xform - A function to transform the value\n * @returns {object} - An argument object\n */\nexport function arg(value, xform) {\n  return {value, xform}\n}\n","import {prepAccount, PROPOSER} from \"../interaction/interaction.js\"\n\nexport async function proposer(authz) {\n  return prepAccount(authz, {role: PROPOSER})\n}\n","import {prepAccount, PAYER} from \"../interaction/interaction.js\"\n\nexport async function payer(authz) {\n  return prepAccount(authz, {role: PAYER})\n}\n","import {makePing} from \"../interaction/interaction.js\"\n\nexport function ping() {\n  return makePing\n}\n","import {pipe, Ok} from \"../interaction/interaction.js\"\n\nexport function ref(refBlock) {\n  return pipe([\n    ix => {\n      ix.message.refBlock = refBlock\n      return Ok(ix)\n    },\n  ])\n}\n","import {pipe, Ok, put, makeScript} from \"../interaction/interaction.js\"\nimport {template} from \"@onflow/util-template\"\n\nexport function script(...args) {\n  return pipe([makeScript, put(\"ix.cadence\", template(...args))])\n}\n","import {pipe, put, Ok, makeTransaction} from \"../interaction/interaction.js\"\nimport {template} from \"@onflow/util-template\"\n\nconst DEFAULT_SCRIPT_ACCOUNTS = []\nconst DEFUALT_REF = null\n\n/**\n * @description - A template builder to use a Cadence transaction for an interaction\n * @param {...*} args - The arguments to pass\n * @returns {object} - An interaction object\n */\nexport function transaction(...args) {\n  return pipe([\n    makeTransaction,\n    put(\"ix.cadence\", template(...args)),\n    ix => {\n      ix.message.refBlock = ix.message.refBlock || DEFUALT_REF\n      ix.authorizations = ix.authorizations || DEFAULT_SCRIPT_ACCOUNTS\n      return Ok(ix)\n    },\n  ])\n}\n","import {put} from \"../interaction/interaction.js\"\n\nexport function voucherIntercept(fn) {\n  return put(\"ix.voucher-intercept\", fn)\n}\n","import {isTransaction, Ok} from \"../interaction/interaction.js\"\nimport * as ixModule from \"../interaction/interaction.js\"\nimport {response as responseModule} from \"../response/response.js\"\nimport {config} from \"@onflow/config\"\nimport {decodeResponse} from \"../decode/decode.js\"\nimport {getAccount} from \"../build/build-get-account.js\"\nimport {build} from \"../build/build.js\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport {Buffer} from \"@onflow/rlp\"\nimport {send as defaultSend} from \"@onflow/transport-http\"\n\nexport const resolveProposerSequenceNumber =\n  ({node}) =>\n  async ix => {\n    if (!isTransaction(ix)) return Ok(ix)\n    if (ix.accounts[ix.proposer].sequenceNum) return Ok(ix)\n\n    const sendFn = await config.first(\n      [\"sdk.transport\", \"sdk.send\"],\n      defaultSend\n    )\n\n    invariant(\n      sendFn,\n      `Required value for sdk.transport is not defined in config. See: ${\"https://github.com/onflow/fcl-js/blob/master/packages/sdk/CHANGELOG.md#0057-alpha1----2022-01-21\"}`\n    )\n\n    const response = await sendFn(\n      await build([getAccount(ix.accounts[ix.proposer].addr)]),\n      {config, response: responseModule, Buffer, ix: ixModule},\n      {node}\n    )\n    const decoded = await decodeResponse(response)\n\n    ix.accounts[ix.proposer].sequenceNum =\n      decoded.keys[ix.accounts[ix.proposer].keyId].sequenceNumber\n\n    return Ok(ix)\n  }\n","import {\n  isTransaction,\n  Ok,\n  interaction,\n  pipe,\n} from \"../interaction/interaction.js\"\nimport * as ixModule from \"../interaction/interaction.js\"\nimport {response} from \"../response/response.js\"\nimport {config} from \"@onflow/config\"\nimport {decodeResponse} from \"../decode/decode.js\"\nimport {getBlock} from \"../build/build-get-block.js\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport {Buffer} from \"@onflow/rlp\"\nimport {send as defaultSend} from \"@onflow/transport-http\"\n\nasync function getRefId(opts) {\n  const node = await config().get(\"accessNode.api\")\n  const sendFn = await config.first([\"sdk.transport\", \"sdk.send\"], defaultSend)\n\n  invariant(\n    sendFn,\n    `Required value for sdk.transport is not defined in config. See: ${\"https://github.com/onflow/fcl-js/blob/master/packages/sdk/CHANGELOG.md#0057-alpha1----2022-01-21\"}`\n  )\n\n  var ix\n  ix = await pipe(interaction(), [getBlock()])\n  ix = await sendFn(ix, {config, response, Buffer, ix: ixModule}, {node})\n  ix = await decodeResponse(ix)\n  return ix.id\n}\n\nexport function resolveRefBlockId(opts) {\n  return async ix => {\n    if (!isTransaction(ix)) return Ok(ix)\n    if (ix.message.refBlock) return Ok(ix)\n\n    ix.message.refBlock = await getRefId(opts)\n\n    return Ok(ix)\n  }\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {isGetAccount, isGetBlock} from \"../interaction/interaction\"\n\nexport function mockAccountResponse(ix, numberOfKeys = 5) {\n  // prettier-ignore\n  invariant(ix.account, \"mockAccountResponse(ix) -- ix.account is missing\", ix)\n  // prettier-ignore\n  invariant( ix.account.addr, \"mockAccountResponse(ix) -- ix.account.addr is missing\", ix)\n\n  const address = ix.account.addr\n\n  return {\n    account: {\n      addr: address,\n      keys: Array.from({length: numberOfKeys}, (_, i) => ({\n        index: i,\n        sequenceNumber: 42,\n      })),\n    },\n  }\n}\n\nexport function mockGetBlockResponse(ix) {\n  return {\n    tag: \"GET_BLOCK\",\n    block: {\n      id: \"32\",\n    },\n  }\n}\n\nconst identity = v => v\n\nexport function mockSend(fallback = identity) {\n  return async function execSend(ix) {\n    ix = await ix\n    switch (true) {\n      case isGetAccount(ix):\n        return mockAccountResponse(ix)\n\n      case isGetBlock(ix):\n        return mockGetBlockResponse(ix)\n\n      default:\n        return fallback(ix)\n    }\n  }\n}\n","import {withPrefix} from \"@onflow/util-address\"\n\nexport const idof = acct => `${withPrefix(acct.addr)}-${acct.keyId}`\n\nexport function sig(opts) {\n  return [\"SIGNATURE\", opts.addr, opts.keyId].join(\".\")\n}\n\nexport function authzFn(opts = {}) {\n  return function (account) {\n    const acct = {\n      ...account,\n      ...opts,\n      signingFunction:\n        opts.signingFunction ||\n        account.signingFunction ||\n        fallbackSigningFunction,\n    }\n\n    return acct\n\n    function fallbackSigningFunction(signable) {\n      return {\n        addr: acct.addr,\n        keyId: acct.keyId,\n        signature: sig(acct),\n      }\n    }\n  }\n}\n\nexport function authzResolve(opts = {}) {\n  return function (account) {\n    const {tempId, ...rest} = opts\n    return {\n      ...account,\n      tempId: tempId || \"WITH_RESOLVE\",\n      resolve: authzFn(rest),\n    }\n  }\n}\n\nconst ROLE = {proposer: false, authorizer: false, payer: false}\nconst noop = () => {}\n\nexport function authzResolveMany(opts = {}) {\n  return function (account) {\n    const tempId = opts.tempId || \"AUTHZ_RESOLVE_MANY\"\n    return {\n      ...account,\n      tempId,\n      resolve: () =>\n        [\n          opts.proposer &&\n            authzFn(opts.proposer)({role: {...ROLE, proposer: true}}),\n          ...opts.authorizations\n            .map(authzFn)\n            .map(d => d({role: {...ROLE, authorizer: true}})),\n          opts.payer && authzFn(opts.payer)({role: {...ROLE, payer: true}}),\n        ].filter(Boolean),\n    }\n  }\n}\n","import {build} from \"../build/build\"\nimport {resolve} from \"../resolve/resolve\"\nimport {ref} from \"../build/build-ref\"\n\nexport const run = (fns = []) => build([ref(\"123\"), ...fns]).then(resolve)\n","export const VERSION = PACKAGE_CURRENT_VERSION || \"TESTVERSION\"\n","import * as logger from \"@onflow/util-logger\"\n// Base\nexport {build} from \"./build/build.js\"\nexport {resolve} from \"./resolve/resolve.js\"\nexport {send} from \"./send/send.js\"\nexport {decode} from \"./decode/sdk-decode.js\"\nexport {\n  encodeTransactionPayload,\n  encodeTransactionEnvelope,\n  encodeTxIdFromVoucher,\n} from \"./encode/encode\"\n// Utils\nexport {\n  interaction,\n  isOk,\n  isBad,\n  why,\n  pipe,\n  get,\n  put,\n  update,\n  destroy,\n  isUnknown,\n  isScript,\n  isTransaction,\n  isGetTransaction,\n  isGetTransactionStatus,\n  isGetAccount,\n  isGetEvents,\n  isPing,\n  isGetBlock,\n  isGetBlockHeader,\n  isGetCollection,\n  isGetNetworkParameters,\n} from \"./interaction/interaction.js\"\nexport {createSignableVoucher, voucherToTxId} from \"./resolve/voucher.js\"\nexport {encodeMessageFromSignable} from \"./wallet-utils/encode-signable.js\"\nexport {template as cadence} from \"@onflow/util-template\"\nexport {template as cdc} from \"@onflow/util-template\"\n\n// Helpers\nexport {account} from \"./account/account.js\"\nexport {block} from \"./block/block.js\"\n\n// Builders\nexport {authorizations, authorization} from \"./build/build-authorizations.js\"\nexport {atBlockHeight} from \"./build/build-at-block-height.js\"\nexport {atBlockId} from \"./build/build-at-block-id.js\"\nexport {getAccount} from \"./build/build-get-account.js\"\nexport {getEvents} from \"./build/build-get-events.js\"\nexport {getEventsAtBlockHeightRange} from \"./build/build-get-events-at-block-height-range.js\"\nexport {getEventsAtBlockIds} from \"./build/build-get-events-at-block-ids\"\nexport {getBlock} from \"./build/build-get-block.js\"\nexport {getBlockHeader} from \"./build/build-get-block-header.js\"\nexport {getCollection} from \"./build/build-get-collection\"\nexport {getTransactionStatus} from \"./build/build-get-transaction-status.js\"\nexport {getTransaction} from \"./build/build-get-transaction.js\"\nexport {getNetworkParameters} from \"./build/build-get-network-parameters.js\"\nexport {limit} from \"./build/build-limit.js\"\nexport {args, arg} from \"./build/build-arguments.js\"\nexport {proposer} from \"./build/build-proposer.js\"\nexport {payer} from \"./build/build-payer.js\"\nexport {ping} from \"./build/build-ping.js\"\nexport {ref} from \"./build/build-ref.js\"\nexport {script} from \"./build/build-script.js\"\nexport {transaction} from \"./build/build-transaction.js\"\nexport {validator} from \"./build/build-validator.js\"\nexport {invariant} from \"./build/build-invariant.js\"\nexport {voucherIntercept} from \"./build/build-voucher-intercept.js\"\n\n// Resolvers\nexport {resolveCadence} from \"./resolve/resolve-cadence.js\"\nexport {resolveFinalNormalization} from \"./resolve/resolve-final-normalization\"\nexport {resolveProposerSequenceNumber} from \"./resolve/resolve-proposer-sequence-number\"\nexport {resolveArguments} from \"./resolve/resolve-arguments.js\"\nexport {resolveAccounts} from \"./resolve/resolve-accounts.js\"\nexport {response} from \"./response/response.js\"\nexport {resolveSignatures} from \"./resolve/resolve-signatures.js\"\nexport {resolveValidators} from \"./resolve/resolve-validators.js\"\nexport {resolveRefBlockId} from \"./resolve/resolve-ref-block-id.js\"\nexport {resolveVoucherIntercept} from \"./resolve/resolve-voucher-intercept.js\"\n\nexport {config} from \"@onflow/config\"\n\n// Deprecated\nexport const params = params =>\n  logger.log.deprecate({\n    pkg: \"FCL/SDK\",\n    message: `The params builder has been removed from the Flow JS-SDK/FCL.`,\n    transition:\n      \"https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0001-deprecate-params\",\n    level: logger.LEVELS.error,\n  })\nexport const param = params =>\n  logger.log.deprecate({\n    pkg: \"FCL/SDK\",\n    message: `The param builder has been removed from the Flow JS-SDK/FCL.`,\n    transition:\n      \"https://github.com/onflow/flow-js-sdk/blob/master/packages/sdk/TRANSITIONS.md#0001-deprecate-params\",\n    level: logger.LEVELS.error,\n  })\n\nimport * as TestUtils from \"./test-utils\"\nexport {TestUtils}\n\nexport {VERSION} from \"./VERSION\""],"names":["UNKNOWN","SCRIPT","TRANSACTION","GET_TRANSACTION_STATUS","GET_ACCOUNT","GET_EVENTS","PING","GET_TRANSACTION","GET_BLOCK","GET_BLOCK_HEADER","GET_COLLECTION","GET_NETWORK_PARAMETERS","BAD","OK","ACCOUNT","PARAM","ARGUMENT","AUTHORIZER","PAYER","PROPOSER","ACCT","ARG","IX","KEYS","Set","Object","keys","JSON","parse","interaction","CHARS","split","randChar","Math","random","length","uuid","Array","from","join","isNumber","d","isArray","isObj","isNull","isFn","isInteraction","ix","key","hasOwnProperty","Ok","status","Bad","reason","makeIx","wat","tag","prepAccountKeyId","acct","keyId","invariant","isNaN","parseInt","prepAccount","opts","arguments","undefined","role","tempId","authorization","resolve","_len","rest","_key","reduce","fn","accounts","authorizations","push","payer","makeArgument","arg","message","value","asArgument","xform","resolveArgument","bind","makeUnknown","makeScript","makeTransaction","makeGetTransactionStatus","makeGetTransaction","makeGetAccount","makeGetEvents","makePing","makeGetBlock","makeGetBlockHeader","makeGetCollection","makeGetNetworkParameters","is","isUnknown","isScript","isTransaction","isGetTransactionStatus","isGetTransaction","isGetAccount","isGetEvents","isPing","isGetBlock","isGetBlockHeader","isGetCollection","isGetNetworkParameters","isOk","isBad","why","isAccount","account","kind","isParam","param","isArgument","argument","hardMode","has","Error","recPipe","fns","hd","cur","e","pipe","_len2","args","_key2","arg1","arg2","identity","v","get","fallback","assigns","put","update","destroy","build","DEFAULT_RESPONSE","response","getBlock","isSealed","block","getAccount","addr","sansPrefix","latestBlockDeprecationNotice","log","deprecate","pkg","subject","transition","decodeImplicit","i","decodeVoid","decodeType","type","staticType","decodePath","path","domain","identifier","decodeCapability","cap","address","borrowType","decodeOptional","optional","decoders","stack","recurseDecode","decodeReference","decodeArray","array","Promise","all","map","res","decodeDictionary","dictionary","acc","decodeComposite","composite","decoded","fields","name","decoder","id","decoderLookup","defaultDecoders","UInt","Int","UInt8","Int8","UInt16","Int16","UInt32","Int32","UInt64","Int64","UInt128","Int128","UInt256","Int256","Word8","Word16","Word32","Word64","UFix64","Fix64","String","Character","Bool","Address","Void","Optional","Reference","Dictionary","Event","Resource","Struct","Enum","Type","Path","Capability","lookup","found","find","test","reg","RegExp","substring","decodeInstructions","decode","customDecoders","filteredDecoders","filter","customDecoder","decoderKey","decodeResponse","encodedData","transactionStatus","events","decodeEvents","transactionId","transactionIndex","eventIndex","data","payload","transaction","blockId","blockHeight","blockTimestamp","blockHeader","latestBlock","collection","networkParameters","chainIdMap","chainId","isString","oldIdentifierPatternFn","isOldIdentifierSyntax","cadence","newIdentifierPatternFn","isNewIdentifierSyntax","getContractIdentifierSyntaxMatches","matchAll","resolveCadence","config","where","then","entries","_ref","regex","replace","fullMatch","contractName","withPrefix","logger","title","level","LEVELS","warn","cast","handleArgResolution","depth","resolvedArg","resolveArguments","encodeTransactionPayload","tx","prependTransactionDomainTag","rlpEncode","preparePayload","encodeTransactionEnvelope","prepareEnvelope","encodeTxIdFromVoucher","voucher","sha3_256","prepareVoucher","rightPaddedHexBuffer","pad","Buffer","padEnd","leftPaddedHexBuffer","padStart","TRANSACTION_DOMAIN_TAG","toString","addressBuffer","blockBuffer","argumentToString","stringify","scriptBuffer","script","signatureBuffer","signature","encode","msg","sha","SHA3","digest","validatePayload","refBlock","computeLimit","proposalKey","sequenceNum","authorizers","authorizer","validateEnvelope","preparePayloadSignatures","signers","collectSigners","payloadSigs","sig","signerIndex","sort","a","b","Map","addSigner","set","forEach","validateVoucher","prepareSigs","sigs","envelopeSigs","payloadFields","field","checkField","proposalKeyFields","payloadSigsFields","index","payloadSigFields","envelopeSigsFields","envelopeSigFields","isObject","check","defaultVal","obj","base","missingFieldError","invalidFieldError","printFieldName","findInsideSigners","inside","add","proposer","p","delete","findOutsideSigners","outside","createSignableVoucher","buildAuthorizers","cid","prev","current","item","buildInsideSigners","buildOutsideSigners","voucherToTxId","idof","buildPreSignable","f_type","f_vsn","roles","error","console","collectAccounts","last","ax","old","dupList","payerAccts","g","includes","multiAccts","curr","resolveAccounts","values","resolveSignatures","insideSigners","insidePayload","encodeInsideMessage","prepForEncoding","fetchSignature","outsideSigners","outsidePayload","encodeOutsideMessage","innerFetchSignature","signingFunction","buildSignable","payerAddress","resolveValidators","validators","cb","resolveFinalNormalization","resolveVoucherIntercept","DEFAULT_COMPUTE_LIMIT","resolveComputeLimit","noop","debug","accts","Boolean","execFetchRef","execFetchSequenceNumber","node","sendFn","first","defaultSend","ixModule","sequenceNumber","predicate","send","resolveFn","defaultResolve","decodersFromConfig","pattern","fromEntries","findPayloadSigners","findEnvelopeSigners","envelope","UnableToDetermineMessageEncodingTypeForSignerAddress","constructor","signerAddress","trim","encodeMessageFromSignable","signable","payloadSigners","envelopeSigners","isPayloadSigner","isEnvelopeSigner","ps","validator","atBlockHeight","height","atBlockId","sealed","authz","getEvents","eventType","start","end","getEventsAtBlockHeightRange","eventName","fromBlockHeight","toBlockHeight","getEventsAtBlockIds","blockIds","getBlockHeader","getCollection","getTransactionStatus","getTransaction","getNetworkParameters","limit","ping","ref","template","DEFAULT_SCRIPT_ACCOUNTS","DEFUALT_REF","voucherIntercept","resolveProposerSequenceNumber","responseModule","getRefId","resolveRefBlockId","mockAccountResponse","numberOfKeys","_","mockGetBlockResponse","mockSend","execSend","authzFn","fallbackSigningFunction","authzResolve","ROLE","authzResolveMany","run","VERSION","params"],"mappings":"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"}