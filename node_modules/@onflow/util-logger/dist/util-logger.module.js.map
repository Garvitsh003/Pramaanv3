{"version":3,"file":"util-logger.module.js","sources":["../src/util-logger.js"],"sourcesContent":["import {config} from \"@onflow/config\"\n\n/**\n * The levels of the logger\n * \n * @typedef {Object} LEVELS\n * @property {number} debug - The debug level\n * @property {number} info - The info level\n * @property {number} log - The log level\n * @property {number} warn - The warn level\n * @property {number} error - The error level\n * \n */\nexport const LEVELS = Object.freeze({\n  debug: 5,\n  info: 4,\n  log: 3,\n  warn: 2,\n  error: 1,\n})\n\n/**\n * Builds a message formatted for the logger\n * \n * @param {Object} options - The options for the log\n * @param {string} options.title - The title of the log\n * @param {string} options.message - The message of the log\n * @returns {Array<string>} - The message formatted for the logger\n * \n * @example\n * buildLoggerMessageArgs({ title: \"My Title\", message: \"My Message\" })\n */\nconst buildLoggerMessageArgs = ({title, message}) => {\n  return [\n    `\n    %c${title}\n    ============================\n\n    ${message}\n\n    ============================\n    `\n      .replace(/\\n[^\\S\\r\\n]+/g, \"\\n\")\n      .trim(),\n    ,\n    \"font-weight:bold;font-family:monospace;\",\n  ]\n}\n\n/**\n * Logs messages based on the level of the message and the level set in the config\n * \n * @param {Object} options - The options for the log\n * @param {string} options.title - The title of the log\n * @param {string} options.message - The message of the log\n * @param {number} options.level - The level of the log\n * @param {boolean} options.always - Whether to always show the log\n * @returns {Promise<void>}\n * \n * @example\n * log({ title: \"My Title\", message: \"My Message\", level: LEVELS.warn, always: false })\n * \n */\nexport const log = async ({title, message, level, always = false}) => {\n  const configLoggerLevel = await config.get(\"logger.level\", LEVELS.warn)\n\n  // If config level is below message level then don't show it\n  if (!always && configLoggerLevel < level) return\n\n  const loggerMessageArgs = buildLoggerMessageArgs({title, message})\n\n  switch (level) {\n    case LEVELS.debug:\n      console.debug(...loggerMessageArgs)\n      break\n    case LEVELS.info:\n      console.info(...loggerMessageArgs)\n      break\n    case LEVELS.warn:\n      console.warn(...loggerMessageArgs)\n      break\n    case LEVELS.error:\n      console.error(...loggerMessageArgs)\n      break\n    default:\n      console.log(...loggerMessageArgs)\n  }\n}\n\n/**\n * Logs a deprecation notice\n * \n * @param {Object} options - The options for the log\n * @param {string} options.pkg - The package that is being deprecated\n * @param {string} options.subject - The subject of the deprecation\n * @param {string} options.transition - The transition path for the deprecation\n * @param {number} options.level - The level of the log\n * @param {string} options.message - The message of the log\n * @param {Function} options.callback - A callback to run after the log\n * @returns {Promise<void>}\n * \n * @example\n * log.deprecate({ pkg: \"@onflow/fcl\", subject: \"Some item\", transition: \"https://github.com/onflow/flow-js-sdk\", message: \"Descriptive message\", level: LEVELS.warn, callback: () => {} })\n * \n */\nlog.deprecate = ({\n  pkg,\n  subject,\n  transition,\n  level = LEVELS.warn,\n  message = \"\",\n  callback = null,\n}) => {\n  const capitalizeFirstLetter = string => {\n    return string.charAt(0).toUpperCase() + string.slice(1)\n  }\n\n  const logMessage = () =>\n    log({\n      title: `${pkg ? pkg + \" \" : \"\"}Deprecation Notice`,\n      message: `\n      ${\n        subject\n          ? `${capitalizeFirstLetter(\n              subject\n            )} is deprecated and will cease to work in future releases${\n              pkg ? \" of \" + pkg : \"\"\n            }.`\n          : \"\"\n      }${message ? \"\\n\" + message : \"\"}${\n        transition\n          ? `\\nYou can learn more (including a guide on common transition paths) here: ${transition}`\n          : \"\"\n      }\n    `.trim(),\n      level,\n    })\n\n  if (typeof callback === \"function\") {\n    return async (...args) => {\n      await logMessage()\n      return await callback(...args)\n    }\n  }\n  return logMessage()\n}\n"],"names":["LEVELS","Object","freeze","debug","info","log","warn","error","buildLoggerMessageArgs","_ref","title","message","replace","trim","_ref2","level","always","configLoggerLevel","config","get","loggerMessageArgs","console","deprecate","_ref3","pkg","subject","transition","callback","capitalizeFirstLetter","string","charAt","toUpperCase","slice","logMessage","arguments"],"mappings":"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"}