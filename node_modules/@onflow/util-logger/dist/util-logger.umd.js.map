{"version":3,"file":"util-logger.umd.js","sources":["../../../node_modules/queue-microtask/index.js","../../util-actor/src/mailbox/index.js","../../util-invariant/src/index.js","../src/util-logger.js"],"sourcesContent":["/*! queue-microtask. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\nlet promise\n\nmodule.exports = typeof queueMicrotask === 'function'\n  ? queueMicrotask.bind(typeof window !== 'undefined' ? window : global)\n  // reuse resolved promise, and allocate it lazily\n  : cb => (promise || (promise = Promise.resolve()))\n    .then(cb)\n    .catch(err => setTimeout(() => { throw err }, 0))\n","export const mailbox = () => {\n  const queue = []\n  var next\n\n  return {\n    async deliver(msg) {\n      queue.push(msg)\n      if (next) {\n        next(queue.shift())\n        next = undefined\n      }\n    },\n\n    receive() {\n      return new Promise(function innerReceive(resolve) {\n        const msg = queue.shift()\n        if (msg) return resolve(msg)\n        next = resolve\n      })\n    },\n  }\n}\n","/**\n * Asserts fact is true, otherwise throw an error with invariant message\n * @param {boolean} fact\n * @param {string} msg\n * @param {Array} rest\n * @returns {void}\n */\nexport function invariant(fact, msg, ...rest) {\n  if (!fact) {\n    const error = new Error(`INVARIANT ${msg}`)\n    error.stack = error.stack\n      .split(\"\\n\")\n      .filter(d => !/at invariant/.test(d))\n      .join(\"\\n\")\n    console.error(\"\\n\\n---\\n\\n\", error, \"\\n\\n\", ...rest, \"\\n\\n---\\n\\n\")\n    throw error\n  }\n}\n","import {config} from \"@onflow/config\"\n\n/**\n * The levels of the logger\n * \n * @typedef {Object} LEVELS\n * @property {number} debug - The debug level\n * @property {number} info - The info level\n * @property {number} log - The log level\n * @property {number} warn - The warn level\n * @property {number} error - The error level\n * \n */\nexport const LEVELS = Object.freeze({\n  debug: 5,\n  info: 4,\n  log: 3,\n  warn: 2,\n  error: 1,\n})\n\n/**\n * Builds a message formatted for the logger\n * \n * @param {Object} options - The options for the log\n * @param {string} options.title - The title of the log\n * @param {string} options.message - The message of the log\n * @returns {Array<string>} - The message formatted for the logger\n * \n * @example\n * buildLoggerMessageArgs({ title: \"My Title\", message: \"My Message\" })\n */\nconst buildLoggerMessageArgs = ({title, message}) => {\n  return [\n    `\n    %c${title}\n    ============================\n\n    ${message}\n\n    ============================\n    `\n      .replace(/\\n[^\\S\\r\\n]+/g, \"\\n\")\n      .trim(),\n    ,\n    \"font-weight:bold;font-family:monospace;\",\n  ]\n}\n\n/**\n * Logs messages based on the level of the message and the level set in the config\n * \n * @param {Object} options - The options for the log\n * @param {string} options.title - The title of the log\n * @param {string} options.message - The message of the log\n * @param {number} options.level - The level of the log\n * @param {boolean} options.always - Whether to always show the log\n * @returns {Promise<void>}\n * \n * @example\n * log({ title: \"My Title\", message: \"My Message\", level: LEVELS.warn, always: false })\n * \n */\nexport const log = async ({title, message, level, always = false}) => {\n  const configLoggerLevel = await config.get(\"logger.level\", LEVELS.warn)\n\n  // If config level is below message level then don't show it\n  if (!always && configLoggerLevel < level) return\n\n  const loggerMessageArgs = buildLoggerMessageArgs({title, message})\n\n  switch (level) {\n    case LEVELS.debug:\n      console.debug(...loggerMessageArgs)\n      break\n    case LEVELS.info:\n      console.info(...loggerMessageArgs)\n      break\n    case LEVELS.warn:\n      console.warn(...loggerMessageArgs)\n      break\n    case LEVELS.error:\n      console.error(...loggerMessageArgs)\n      break\n    default:\n      console.log(...loggerMessageArgs)\n  }\n}\n\n/**\n * Logs a deprecation notice\n * \n * @param {Object} options - The options for the log\n * @param {string} options.pkg - The package that is being deprecated\n * @param {string} options.subject - The subject of the deprecation\n * @param {string} options.transition - The transition path for the deprecation\n * @param {number} options.level - The level of the log\n * @param {string} options.message - The message of the log\n * @param {Function} options.callback - A callback to run after the log\n * @returns {Promise<void>}\n * \n * @example\n * log.deprecate({ pkg: \"@onflow/fcl\", subject: \"Some item\", transition: \"https://github.com/onflow/flow-js-sdk\", message: \"Descriptive message\", level: LEVELS.warn, callback: () => {} })\n * \n */\nlog.deprecate = ({\n  pkg,\n  subject,\n  transition,\n  level = LEVELS.warn,\n  message = \"\",\n  callback = null,\n}) => {\n  const capitalizeFirstLetter = string => {\n    return string.charAt(0).toUpperCase() + string.slice(1)\n  }\n\n  const logMessage = () =>\n    log({\n      title: `${pkg ? pkg + \" \" : \"\"}Deprecation Notice`,\n      message: `\n      ${\n        subject\n          ? `${capitalizeFirstLetter(\n              subject\n            )} is deprecated and will cease to work in future releases${\n              pkg ? \" of \" + pkg : \"\"\n            }.`\n          : \"\"\n      }${message ? \"\\n\" + message : \"\"}${\n        transition\n          ? `\\nYou can learn more (including a guide on common transition paths) here: ${transition}`\n          : \"\"\n      }\n    `.trim(),\n      level,\n    })\n\n  if (typeof callback === \"function\") {\n    return async (...args) => {\n      await logMessage()\n      return await callback(...args)\n    }\n  }\n  return logMessage()\n}\n"],"names":["promise","queueMicrotask_1","queueMicrotask","bind","window","global","cb","Promise","resolve","then","catch","err","setTimeout","mailbox","deliver","msg","queue","push","next","shift","receive","innerReceive","fact","error","Error","stack","split","console","rest","invariant","filter","d","test","join","_len","arguments","length","Array","_key","LEVELS","Object","freeze","debug","info","log","warn","buildLoggerMessageArgs","_ref","title","message","replace","trim","_ref2","level","always","configLoggerLevel","config","get","loggerMessageArgs","deprecate","_ref3","pkg","subject","transition","callback","capitalizeFirstLetter","string","charAt","toUpperCase","slice","logMessage"],"mappings":"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"}