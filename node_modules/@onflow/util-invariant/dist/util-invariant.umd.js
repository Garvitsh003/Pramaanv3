(function (global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :
  typeof define === 'function' && define.amd ? define(['exports'], factory) :
  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global["onflowUtil-invariant"] = {}));
})(this, (function (exports) { 'use strict';

  /**
   * Asserts fact is true, otherwise throw an error with invariant message
   * @param {boolean} fact
   * @param {string} msg
   * @param {Array} rest
   * @returns {void}
   */
  function invariant(fact, msg) {
    if (!fact) {
      const error = new Error(`INVARIANT ${msg}`);
      error.stack = error.stack.split("\n").filter(d => !/at invariant/.test(d)).join("\n");
      for (var _len = arguments.length, rest = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
        rest[_key - 2] = arguments[_key];
      }
      console.error("\n\n---\n\n", error, "\n\n", ...rest, "\n\n---\n\n");
      throw error;
    }
  }

  exports.invariant = invariant;

  Object.defineProperty(exports, '__esModule', { value: true });

}));
//# sourceMappingURL=util-invariant.umd.js.map
