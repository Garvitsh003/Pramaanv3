{"version":3,"file":"actor.js","sources":["../src/mailbox/index.js","../src/index.js"],"sourcesContent":["export const mailbox = () => {\n  const queue = []\n  var next\n\n  return {\n    async deliver(msg) {\n      queue.push(msg)\n      if (next) {\n        next(queue.shift())\n        next = undefined\n      }\n    },\n\n    receive() {\n      return new Promise(function innerReceive(resolve) {\n        const msg = queue.shift()\n        if (msg) return resolve(msg)\n        next = resolve\n      })\n    },\n  }\n}\n","import {mailbox as createMailbox} from \"./mailbox\"\nimport queueMicrotask from \"queue-microtask\"\n\nexport const INIT = \"INIT\"\nexport const SUBSCRIBE = \"SUBSCRIBE\"\nexport const UNSUBSCRIBE = \"UNSUBSCRIBE\"\nexport const UPDATED = \"UPDATED\"\nexport const SNAPSHOT = \"SNAPSHOT\"\nexport const EXIT = \"EXIT\"\nexport const TERMINATE = \"TERMINATE\"\n\nconst root =\n  (typeof self === \"object\" && self.self === self && self) ||\n  (typeof global === \"object\" && global.global === global && global) ||\n  (typeof window === \"object\" && window.window === window && window)\n\nroot.FCL_REGISTRY = root.FCL_REGISTRY == null ? {} : root.FCL_REGISTRY\nvar pid = 0b0\n\nconst DEFAULT_TIMEOUT = 5000\nconst DEFAULT_TAG = \"---\"\nexport const send = (addr, tag, data, opts = {}) =>\n  new Promise((reply, reject) => {\n    const expectReply = opts.expectReply || false\n    const timeout = opts.timeout != null ? opts.timeout : DEFAULT_TIMEOUT\n\n    if (expectReply && timeout) {\n      setTimeout(\n        () =>\n          reject(new Error(`Timeout: ${timeout}ms passed without a response.`)),\n        timeout\n      )\n    }\n\n    const payload = {\n      to: addr,\n      from: opts.from,\n      tag,\n      data,\n      timeout,\n      reply,\n      reject,\n    }\n\n    try {\n      root.FCL_REGISTRY[addr] &&\n        root.FCL_REGISTRY[addr].mailbox.deliver(payload)\n      if (!expectReply) reply(true)\n    } catch (error) {\n      console.error(\n        \"FCL.Actor -- Could Not Deliver Message\",\n        payload,\n        root.FCL_REGISTRY[addr],\n        error\n      )\n    }\n  })\n\nexport const kill = addr => {\n  delete root.FCL_REGISTRY[addr]\n}\n\nconst fromHandlers =\n  (handlers = {}) =>\n  async ctx => {\n    if (typeof handlers[INIT] === \"function\") await handlers[INIT](ctx)\n    __loop: while (1) {\n      const letter = await ctx.receive()\n      try {\n        if (letter.tag === EXIT) {\n          if (typeof handlers[TERMINATE] === \"function\") {\n            await handlers[TERMINATE](ctx, letter, letter.data || {})\n          }\n          break __loop\n        }\n        await handlers[letter.tag](ctx, letter, letter.data || {})\n      } catch (error) {\n        console.error(`${ctx.self()} Error`, letter, error)\n      } finally {\n        continue __loop\n      }\n    }\n  }\n\nexport const spawn = (fn, addr = null) => {\n  if (addr == null) addr = ++pid\n  if (root.FCL_REGISTRY[addr] != null) return addr\n\n  root.FCL_REGISTRY[addr] = {\n    addr,\n    mailbox: createMailbox(),\n    subs: new Set(),\n    kvs: {},\n    error: null,\n  }\n\n  const ctx = {\n    self: () => addr,\n    receive: () => root.FCL_REGISTRY[addr].mailbox.receive(),\n    send: (to, tag, data, opts = {}) => {\n      opts.from = addr\n      return send(to, tag, data, opts)\n    },\n    sendSelf: (tag, data, opts) => {\n      if (root.FCL_REGISTRY[addr]) send(addr, tag, data, opts)\n    },\n    broadcast: (tag, data, opts = {}) => {\n      opts.from = addr\n      for (let to of root.FCL_REGISTRY[addr].subs) send(to, tag, data, opts)\n    },\n    subscribe: sub => sub != null && root.FCL_REGISTRY[addr].subs.add(sub),\n    unsubscribe: sub => sub != null && root.FCL_REGISTRY[addr].subs.delete(sub),\n    subscriberCount: () => root.FCL_REGISTRY[addr].subs.size,\n    hasSubs: () => !!root.FCL_REGISTRY[addr].subs.size,\n    put: (key, value) => {\n      if (key != null) root.FCL_REGISTRY[addr].kvs[key] = value\n    },\n    get: (key, fallback) => {\n      const value = root.FCL_REGISTRY[addr].kvs[key]\n      return value == null ? fallback : value\n    },\n    delete: key => {\n      delete root.FCL_REGISTRY[addr].kvs[key]\n    },\n    update: (key, fn) => {\n      if (key != null)\n        root.FCL_REGISTRY[addr].kvs[key] = fn(root.FCL_REGISTRY[addr].kvs[key])\n    },\n    keys: () => {\n      return Object.keys(root.FCL_REGISTRY[addr].kvs)\n    },\n    all: () => {\n      return root.FCL_REGISTRY[addr].kvs\n    },\n    where: pattern => {\n      return Object.keys(root.FCL_REGISTRY[addr].kvs).reduce((acc, key) => {\n        return pattern.test(key)\n          ? {...acc, [key]: root.FCL_REGISTRY[addr].kvs[key]}\n          : acc\n      }, {})\n    },\n    merge: (data = {}) => {\n      Object.keys(data).forEach(\n        key => (root.FCL_REGISTRY[addr].kvs[key] = data[key])\n      )\n    },\n    fatalError: error => {\n      root.FCL_REGISTRY[addr].error = error\n      for (let to of root.FCL_REGISTRY[addr].subs) send(to, UPDATED)\n    },\n  }\n\n  if (typeof fn === \"object\") fn = fromHandlers(fn)\n\n  queueMicrotask(async () => {\n    await fn(ctx)\n    kill(addr)\n  })\n\n  return addr\n}\n\n// Returns an unsubscribe function\n// A SUBSCRIBE handler will need to be created to handle the subscription event\n//\n//  [SUBSCRIBE]: (ctx, letter) => {\n//    ctx.subscribe(letter.from)\n//    ctx.send(letter.from, UPDATED, ctx.all())\n//  }\n//\nexport function subscriber(address, spawnFn, callback) {\n  spawnFn(address)\n  const EXIT = \"@EXIT\"\n  const self = spawn(async ctx => {\n    ctx.send(address, SUBSCRIBE)\n    while (1) {\n      const letter = await ctx.receive()\n      const error = root.FCL_REGISTRY[address].error\n      if (letter.tag === EXIT) {\n        ctx.send(address, UNSUBSCRIBE)\n        return\n      }\n      if (error) {\n        callback(null, error)\n        ctx.send(address, UNSUBSCRIBE)\n        return\n      }\n\n      callback(letter.data, null)\n    }\n  })\n  return () => send(self, EXIT)\n}\n\n// Returns a promise that returns a result\n// A SNAPSHOT handler will need to be created to handle the snapshot event\n//\n//  [SNAPSHOT]: (ctx, letter) => {\n//    letter.reply(ctx.all())\n//  }\n//\nexport function snapshoter(address, spawnFn) {\n  spawnFn(address)\n  return send(address, SNAPSHOT, null, {expectReply: true, timeout: 0})\n}\n"],"names":["mailbox","queue","next","deliver","msg","push","shift","undefined","receive","Promise","innerReceive","resolve","INIT","SUBSCRIBE","UNSUBSCRIBE","UPDATED","SNAPSHOT","EXIT","TERMINATE","root","self","global","window","FCL_REGISTRY","pid","DEFAULT_TIMEOUT","send","addr","tag","data","opts","arguments","length","reply","reject","expectReply","timeout","setTimeout","Error","payload","to","from","error","console","kill","fromHandlers","handlers","ctx","__loop","letter","spawn","fn","createMailbox","subs","Set","kvs","sendSelf","broadcast","subscribe","sub","add","unsubscribe","delete","subscriberCount","size","hasSubs","put","key","value","get","fallback","update","keys","Object","all","where","pattern","reduce","acc","test","merge","forEach","fatalError","queueMicrotask","subscriber","address","spawnFn","callback","snapshoter"],"mappings":";;;;;;;;;;AAAO,MAAMA,OAAO,GAAGA,MAAM;EAC3B,MAAMC,KAAK,GAAG,EAAE,CAAA;AAChB,EAAA,IAAIC,IAAI,CAAA;EAER,OAAO;IACL,MAAMC,OAAOA,CAACC,GAAG,EAAE;AACjBH,MAAAA,KAAK,CAACI,IAAI,CAACD,GAAG,CAAC,CAAA;AACf,MAAA,IAAIF,IAAI,EAAE;AACRA,QAAAA,IAAI,CAACD,KAAK,CAACK,KAAK,EAAE,CAAC,CAAA;AACnBJ,QAAAA,IAAI,GAAGK,SAAS,CAAA;AAClB,OAAA;KACD;AAEDC,IAAAA,OAAOA,GAAG;AACR,MAAA,OAAO,IAAIC,OAAO,CAAC,SAASC,YAAYA,CAACC,OAAO,EAAE;AAChD,QAAA,MAAMP,GAAG,GAAGH,KAAK,CAACK,KAAK,EAAE,CAAA;AACzB,QAAA,IAAIF,GAAG,EAAE,OAAOO,OAAO,CAACP,GAAG,CAAC,CAAA;AAC5BF,QAAAA,IAAI,GAAGS,OAAO,CAAA;AAChB,OAAC,CAAC,CAAA;AACJ,KAAA;GACD,CAAA;AACH,CAAC;;AClBM,MAAMC,IAAI,GAAG,OAAM;AACnB,MAAMC,SAAS,GAAG,YAAW;AAC7B,MAAMC,WAAW,GAAG,cAAa;AACjC,MAAMC,OAAO,GAAG,UAAS;AACzB,MAAMC,QAAQ,GAAG,WAAU;AAC3B,MAAMC,IAAI,GAAG,OAAM;AACnB,MAAMC,SAAS,GAAG,YAAW;AAEpC,MAAMC,IAAI,GACP,OAAOC,IAAI,KAAK,QAAQ,IAAIA,IAAI,CAACA,IAAI,KAAKA,IAAI,IAAIA,IAAI,IACtD,OAAOC,MAAM,KAAK,QAAQ,IAAIA,MAAM,CAACA,MAAM,KAAKA,MAAM,IAAIA,MAAO,IACjE,OAAOC,MAAM,KAAK,QAAQ,IAAIA,MAAM,CAACA,MAAM,KAAKA,MAAM,IAAIA,MAAO,CAAA;AAEpEH,IAAI,CAACI,YAAY,GAAGJ,IAAI,CAACI,YAAY,IAAI,IAAI,GAAG,EAAE,GAAGJ,IAAI,CAACI,YAAY,CAAA;AACtE,IAAIC,GAAG,GAAG,GAAG,CAAA;AAEb,MAAMC,eAAe,GAAG,IAAI,CAAA;AAErB,MAAMC,IAAI,GAAG,UAACC,IAAI,EAAEC,GAAG,EAAEC,IAAI,EAAA;AAAA,EAAA,IAAEC,IAAI,GAAAC,SAAA,CAAAC,MAAA,GAAA,CAAA,IAAAD,SAAA,CAAA,CAAA,CAAA,KAAAxB,SAAA,GAAAwB,SAAA,CAAA,CAAA,CAAA,GAAG,EAAE,CAAA;AAAA,EAAA,OAC7C,IAAItB,OAAO,CAAC,CAACwB,KAAK,EAAEC,MAAM,KAAK;AAC7B,IAAA,MAAMC,WAAW,GAAGL,IAAI,CAACK,WAAW,IAAI,KAAK,CAAA;AAC7C,IAAA,MAAMC,OAAO,GAAGN,IAAI,CAACM,OAAO,IAAI,IAAI,GAAGN,IAAI,CAACM,OAAO,GAAGX,eAAe,CAAA;IAErE,IAAIU,WAAW,IAAIC,OAAO,EAAE;AAC1BC,MAAAA,UAAU,CACR,MACEH,MAAM,CAAC,IAAII,KAAK,CAAE,CAAWF,SAAAA,EAAAA,OAAQ,CAA8B,6BAAA,CAAA,CAAC,CAAC,EACvEA,OAAO,CACR,CAAA;AACH,KAAA;AAEA,IAAA,MAAMG,OAAO,GAAG;AACdC,MAAAA,EAAE,EAAEb,IAAI;MACRc,IAAI,EAAEX,IAAI,CAACW,IAAI;MACfb,GAAG;MACHC,IAAI;MACJO,OAAO;MACPH,KAAK;AACLC,MAAAA,MAAAA;KACD,CAAA;IAED,IAAI;AACFf,MAAAA,IAAI,CAACI,YAAY,CAACI,IAAI,CAAC,IACrBR,IAAI,CAACI,YAAY,CAACI,IAAI,CAAC,CAAC3B,OAAO,CAACG,OAAO,CAACoC,OAAO,CAAC,CAAA;AAClD,MAAA,IAAI,CAACJ,WAAW,EAAEF,KAAK,CAAC,IAAI,CAAC,CAAA;KAC9B,CAAC,OAAOS,KAAK,EAAE;AACdC,MAAAA,OAAO,CAACD,KAAK,CACX,wCAAwC,EACxCH,OAAO,EACPpB,IAAI,CAACI,YAAY,CAACI,IAAI,CAAC,EACvBe,KAAK,CACN,CAAA;AACH,KAAA;AACF,GAAC,CAAC,CAAA;AAAA,EAAA;AAESE,MAAAA,IAAI,GAAGjB,IAAI,IAAI;AAC1B,EAAA,OAAOR,IAAI,CAACI,YAAY,CAACI,IAAI,CAAC,CAAA;AAChC,EAAC;AAED,MAAMkB,YAAY,GAChB,YAAA;AAAA,EAAA,IAACC,QAAQ,GAAAf,SAAA,CAAAC,MAAA,GAAA,CAAA,IAAAD,SAAA,CAAA,CAAA,CAAA,KAAAxB,SAAA,GAAAwB,SAAA,CAAA,CAAA,CAAA,GAAG,EAAE,CAAA;EAAA,OACd,MAAMgB,GAAG,IAAI;AACX,IAAA,IAAI,OAAOD,QAAQ,CAAClC,IAAI,CAAC,KAAK,UAAU,EAAE,MAAMkC,QAAQ,CAAClC,IAAI,CAAC,CAACmC,GAAG,CAAC,CAAA;IACnEC,MAAM,EAAE,OAAO,CAAC,EAAE;AAChB,MAAA,MAAMC,MAAM,GAAG,MAAMF,GAAG,CAACvC,OAAO,EAAE,CAAA;MAClC,IAAI;AACF,QAAA,IAAIyC,MAAM,CAACrB,GAAG,KAAKX,IAAI,EAAE;AACvB,UAAA,IAAI,OAAO6B,QAAQ,CAAC5B,SAAS,CAAC,KAAK,UAAU,EAAE;AAC7C,YAAA,MAAM4B,QAAQ,CAAC5B,SAAS,CAAC,CAAC6B,GAAG,EAAEE,MAAM,EAAEA,MAAM,CAACpB,IAAI,IAAI,EAAE,CAAC,CAAA;AAC3D,WAAA;AACA,UAAA,MAAMmB,MAAM,CAAA;AACd,SAAA;AACA,QAAA,MAAMF,QAAQ,CAACG,MAAM,CAACrB,GAAG,CAAC,CAACmB,GAAG,EAAEE,MAAM,EAAEA,MAAM,CAACpB,IAAI,IAAI,EAAE,CAAC,CAAA;OAC3D,CAAC,OAAOa,KAAK,EAAE;AACdC,QAAAA,OAAO,CAACD,KAAK,CAAE,CAAA,EAAEK,GAAG,CAAC3B,IAAI,EAAG,CAAO,MAAA,CAAA,EAAE6B,MAAM,EAAEP,KAAK,CAAC,CAAA;AACrD,OAAC,SAAS;AACR,QAAA,SAASM,MAAM,CAAA;AACjB,OAAA;AACF,KAAA;GACD,CAAA;AAAA,CAAA,CAAA;MAEUE,KAAK,GAAG,UAACC,EAAE,EAAkB;AAAA,EAAA,IAAhBxB,IAAI,GAAAI,SAAA,CAAAC,MAAA,GAAA,CAAA,IAAAD,SAAA,CAAA,CAAA,CAAA,KAAAxB,SAAA,GAAAwB,SAAA,CAAA,CAAA,CAAA,GAAG,IAAI,CAAA;AACnC,EAAA,IAAIJ,IAAI,IAAI,IAAI,EAAEA,IAAI,GAAG,EAAEH,GAAG,CAAA;EAC9B,IAAIL,IAAI,CAACI,YAAY,CAACI,IAAI,CAAC,IAAI,IAAI,EAAE,OAAOA,IAAI,CAAA;AAEhDR,EAAAA,IAAI,CAACI,YAAY,CAACI,IAAI,CAAC,GAAG;IACxBA,IAAI;IACJ3B,OAAO,EAAEoD,OAAa,EAAE;IACxBC,IAAI,EAAE,IAAIC,GAAG,EAAE;IACfC,GAAG,EAAE,EAAE;AACPb,IAAAA,KAAK,EAAE,IAAA;GACR,CAAA;AAED,EAAA,MAAMK,GAAG,GAAG;IACV3B,IAAI,EAAEA,MAAMO,IAAI;AAChBnB,IAAAA,OAAO,EAAEA,MAAMW,IAAI,CAACI,YAAY,CAACI,IAAI,CAAC,CAAC3B,OAAO,CAACQ,OAAO,EAAE;IACxDkB,IAAI,EAAE,UAACc,EAAE,EAAEZ,GAAG,EAAEC,IAAI,EAAgB;AAAA,MAAA,IAAdC,IAAI,GAAAC,SAAA,CAAAC,MAAA,GAAA,CAAA,IAAAD,SAAA,CAAA,CAAA,CAAA,KAAAxB,SAAA,GAAAwB,SAAA,CAAA,CAAA,CAAA,GAAG,EAAE,CAAA;MAC7BD,IAAI,CAACW,IAAI,GAAGd,IAAI,CAAA;MAChB,OAAOD,IAAI,CAACc,EAAE,EAAEZ,GAAG,EAAEC,IAAI,EAAEC,IAAI,CAAC,CAAA;KACjC;AACD0B,IAAAA,QAAQ,EAAEA,CAAC5B,GAAG,EAAEC,IAAI,EAAEC,IAAI,KAAK;AAC7B,MAAA,IAAIX,IAAI,CAACI,YAAY,CAACI,IAAI,CAAC,EAAED,IAAI,CAACC,IAAI,EAAEC,GAAG,EAAEC,IAAI,EAAEC,IAAI,CAAC,CAAA;KACzD;AACD2B,IAAAA,SAAS,EAAE,UAAC7B,GAAG,EAAEC,IAAI,EAAgB;AAAA,MAAA,IAAdC,IAAI,GAAAC,SAAA,CAAAC,MAAA,GAAA,CAAA,IAAAD,SAAA,CAAA,CAAA,CAAA,KAAAxB,SAAA,GAAAwB,SAAA,CAAA,CAAA,CAAA,GAAG,EAAE,CAAA;MAC9BD,IAAI,CAACW,IAAI,GAAGd,IAAI,CAAA;MAChB,KAAK,IAAIa,EAAE,IAAIrB,IAAI,CAACI,YAAY,CAACI,IAAI,CAAC,CAAC0B,IAAI,EAAE3B,IAAI,CAACc,EAAE,EAAEZ,GAAG,EAAEC,IAAI,EAAEC,IAAI,CAAC,CAAA;KACvE;AACD4B,IAAAA,SAAS,EAAEC,GAAG,IAAIA,GAAG,IAAI,IAAI,IAAIxC,IAAI,CAACI,YAAY,CAACI,IAAI,CAAC,CAAC0B,IAAI,CAACO,GAAG,CAACD,GAAG,CAAC;AACtEE,IAAAA,WAAW,EAAEF,GAAG,IAAIA,GAAG,IAAI,IAAI,IAAIxC,IAAI,CAACI,YAAY,CAACI,IAAI,CAAC,CAAC0B,IAAI,CAACS,MAAM,CAACH,GAAG,CAAC;AAC3EI,IAAAA,eAAe,EAAEA,MAAM5C,IAAI,CAACI,YAAY,CAACI,IAAI,CAAC,CAAC0B,IAAI,CAACW,IAAI;AACxDC,IAAAA,OAAO,EAAEA,MAAM,CAAC,CAAC9C,IAAI,CAACI,YAAY,CAACI,IAAI,CAAC,CAAC0B,IAAI,CAACW,IAAI;AAClDE,IAAAA,GAAG,EAAEA,CAACC,GAAG,EAAEC,KAAK,KAAK;AACnB,MAAA,IAAID,GAAG,IAAI,IAAI,EAAEhD,IAAI,CAACI,YAAY,CAACI,IAAI,CAAC,CAAC4B,GAAG,CAACY,GAAG,CAAC,GAAGC,KAAK,CAAA;KAC1D;AACDC,IAAAA,GAAG,EAAEA,CAACF,GAAG,EAAEG,QAAQ,KAAK;AACtB,MAAA,MAAMF,KAAK,GAAGjD,IAAI,CAACI,YAAY,CAACI,IAAI,CAAC,CAAC4B,GAAG,CAACY,GAAG,CAAC,CAAA;AAC9C,MAAA,OAAOC,KAAK,IAAI,IAAI,GAAGE,QAAQ,GAAGF,KAAK,CAAA;KACxC;IACDN,MAAM,EAAEK,GAAG,IAAI;MACb,OAAOhD,IAAI,CAACI,YAAY,CAACI,IAAI,CAAC,CAAC4B,GAAG,CAACY,GAAG,CAAC,CAAA;KACxC;AACDI,IAAAA,MAAM,EAAEA,CAACJ,GAAG,EAAEhB,EAAE,KAAK;AACnB,MAAA,IAAIgB,GAAG,IAAI,IAAI,EACbhD,IAAI,CAACI,YAAY,CAACI,IAAI,CAAC,CAAC4B,GAAG,CAACY,GAAG,CAAC,GAAGhB,EAAE,CAAChC,IAAI,CAACI,YAAY,CAACI,IAAI,CAAC,CAAC4B,GAAG,CAACY,GAAG,CAAC,CAAC,CAAA;KAC1E;IACDK,IAAI,EAAEA,MAAM;AACV,MAAA,OAAOC,MAAM,CAACD,IAAI,CAACrD,IAAI,CAACI,YAAY,CAACI,IAAI,CAAC,CAAC4B,GAAG,CAAC,CAAA;KAChD;IACDmB,GAAG,EAAEA,MAAM;AACT,MAAA,OAAOvD,IAAI,CAACI,YAAY,CAACI,IAAI,CAAC,CAAC4B,GAAG,CAAA;KACnC;IACDoB,KAAK,EAAEC,OAAO,IAAI;MAChB,OAAOH,MAAM,CAACD,IAAI,CAACrD,IAAI,CAACI,YAAY,CAACI,IAAI,CAAC,CAAC4B,GAAG,CAAC,CAACsB,MAAM,CAAC,CAACC,GAAG,EAAEX,GAAG,KAAK;AACnE,QAAA,OAAOS,OAAO,CAACG,IAAI,CAACZ,GAAG,CAAC,GACpB;AAAC,UAAA,GAAGW,GAAG;UAAE,CAACX,GAAG,GAAGhD,IAAI,CAACI,YAAY,CAACI,IAAI,CAAC,CAAC4B,GAAG,CAACY,GAAG,CAAA;AAAC,SAAC,GACjDW,GAAG,CAAA;OACR,EAAE,EAAE,CAAC,CAAA;KACP;IACDE,KAAK,EAAE,YAAe;AAAA,MAAA,IAAdnD,IAAI,GAAAE,SAAA,CAAAC,MAAA,GAAA,CAAA,IAAAD,SAAA,CAAA,CAAA,CAAA,KAAAxB,SAAA,GAAAwB,SAAA,CAAA,CAAA,CAAA,GAAG,EAAE,CAAA;MACf0C,MAAM,CAACD,IAAI,CAAC3C,IAAI,CAAC,CAACoD,OAAO,CACvBd,GAAG,IAAKhD,IAAI,CAACI,YAAY,CAACI,IAAI,CAAC,CAAC4B,GAAG,CAACY,GAAG,CAAC,GAAGtC,IAAI,CAACsC,GAAG,CAAE,CACtD,CAAA;KACF;IACDe,UAAU,EAAExC,KAAK,IAAI;MACnBvB,IAAI,CAACI,YAAY,CAACI,IAAI,CAAC,CAACe,KAAK,GAAGA,KAAK,CAAA;AACrC,MAAA,KAAK,IAAIF,EAAE,IAAIrB,IAAI,CAACI,YAAY,CAACI,IAAI,CAAC,CAAC0B,IAAI,EAAE3B,IAAI,CAACc,EAAE,EAAEzB,OAAO,CAAC,CAAA;AAChE,KAAA;GACD,CAAA;EAED,IAAI,OAAOoC,EAAE,KAAK,QAAQ,EAAEA,EAAE,GAAGN,YAAY,CAACM,EAAE,CAAC,CAAA;AAEjDgC,EAAAA,kCAAc,CAAC,YAAY;IACzB,MAAMhC,EAAE,CAACJ,GAAG,CAAC,CAAA;IACbH,IAAI,CAACjB,IAAI,CAAC,CAAA;AACZ,GAAC,CAAC,CAAA;AAEF,EAAA,OAAOA,IAAI,CAAA;AACb,EAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASyD,UAAUA,CAACC,OAAO,EAAEC,OAAO,EAAEC,QAAQ,EAAE;EACrDD,OAAO,CAACD,OAAO,CAAC,CAAA;EAChB,MAAMpE,IAAI,GAAG,OAAO,CAAA;AACpB,EAAA,MAAMG,IAAI,GAAG8B,KAAK,CAAC,MAAMH,GAAG,IAAI;AAC9BA,IAAAA,GAAG,CAACrB,IAAI,CAAC2D,OAAO,EAAExE,SAAS,CAAC,CAAA;AAC5B,IAAA,OAAO,CAAC,EAAE;AACR,MAAA,MAAMoC,MAAM,GAAG,MAAMF,GAAG,CAACvC,OAAO,EAAE,CAAA;MAClC,MAAMkC,KAAK,GAAGvB,IAAI,CAACI,YAAY,CAAC8D,OAAO,CAAC,CAAC3C,KAAK,CAAA;AAC9C,MAAA,IAAIO,MAAM,CAACrB,GAAG,KAAKX,IAAI,EAAE;AACvB8B,QAAAA,GAAG,CAACrB,IAAI,CAAC2D,OAAO,EAAEvE,WAAW,CAAC,CAAA;AAC9B,QAAA,OAAA;AACF,OAAA;AACA,MAAA,IAAI4B,KAAK,EAAE;AACT6C,QAAAA,QAAQ,CAAC,IAAI,EAAE7C,KAAK,CAAC,CAAA;AACrBK,QAAAA,GAAG,CAACrB,IAAI,CAAC2D,OAAO,EAAEvE,WAAW,CAAC,CAAA;AAC9B,QAAA,OAAA;AACF,OAAA;AAEAyE,MAAAA,QAAQ,CAACtC,MAAM,CAACpB,IAAI,EAAE,IAAI,CAAC,CAAA;AAC7B,KAAA;AACF,GAAC,CAAC,CAAA;AACF,EAAA,OAAO,MAAMH,IAAI,CAACN,IAAI,EAAEH,IAAI,CAAC,CAAA;AAC/B,CAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASuE,UAAUA,CAACH,OAAO,EAAEC,OAAO,EAAE;EAC3CA,OAAO,CAACD,OAAO,CAAC,CAAA;AAChB,EAAA,OAAO3D,IAAI,CAAC2D,OAAO,EAAErE,QAAQ,EAAE,IAAI,EAAE;AAACmB,IAAAA,WAAW,EAAE,IAAI;AAAEC,IAAAA,OAAO,EAAE,CAAA;AAAC,GAAC,CAAC,CAAA;AACvE;;;;;;;;;;;;;;;"}