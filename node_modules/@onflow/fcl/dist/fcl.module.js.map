{"version":3,"file":"fcl.module.js","sources":["../src/utils/get-chain-id.js","../src/utils/chain-id-watcher.js","../src/utils/index.js","../src/default-config.js","../src/VERSION.js","../src/exec/utils/is.js","../src/exec/utils/normalize-args.js","../src/document/document.js","../src/normalizers/interaction-template/interaction-template.js","../src/interaction-template-utils/derive-cadence-by-network.js","../src/exec/utils/derive-dependencies.js","../src/exec/utils/prep-template-opts.js","../src/exec/utils/pre.js","../src/exec/query.js","../src/current-user/fetch-services.js","../src/current-user/merge-services.js","../src/normalizers/service/__vsn.js","../src/normalizers/service/authn.js","../src/normalizers/service/authz.js","../src/normalizers/service/pre-authz.js","../src/normalizers/service/frame.js","../src/normalizers/service/back-channel-rpc.js","../src/normalizers/service/open-id.js","../src/normalizers/service/user-signature.js","../src/normalizers/service/local-view.js","../src/normalizers/service/account-proof.js","../src/normalizers/service/authn-refresh.js","../src/normalizers/service/service.js","../src/current-user/build-user.js","../src/current-user/service-of-type.js","../src/current-user/exec-service/strategies/utils/service-endpoint.js","../src/current-user/exec-service/strategies/utils/fetch-service.js","../src/normalizers/service/polling-response.js","../src/current-user/exec-service/strategies/utils/poll.js","../src/current-user/exec-service/strategies/utils/render-frame.js","../src/current-user/exec-service/strategies/utils/render-pop.js","../src/current-user/exec-service/strategies/utils/render-tab.js","../src/current-user/exec-service/exec-local.js","../src/current-user/exec-service/strategies/http-post.js","../src/current-user/exec-service/strategies/utils/buildMessageHandler.js","../src/current-user/exec-service/strategies/utils/frame.js","../src/current-user/exec-service/strategies/iframe-rpc.js","../src/current-user/exec-service/strategies/utils/pop.js","../src/current-user/exec-service/strategies/pop-rpc.js","../src/current-user/exec-service/strategies/utils/tab.js","../src/current-user/exec-service/strategies/tab-rpc.js","../src/current-user/exec-service/strategies/utils/extension.js","../src/current-user/exec-service/strategies/ext-rpc.js","../src/current-user/exec-service/plugins.js","../src/current-user/exec-service/index.js","../src/normalizers/service/composite-signature.js","../src/discovery/utils.js","../src/discovery/services.js","../src/discovery/services/authn.js","../src/discovery/index.js","../src/current-user/index.js","../src/exec/mutate.js","../src/wallet-utils/on-message-from-fcl.js","../src/wallet-utils/send-msg-to-fcl.js","../src/wallet-utils/CompositeSignature.js","../src/wallet-utils/encode-account-proof.js","../src/wallet-utils/inject-ext-service.js","../src/app-utils/verify-signatures.js","../src/exec/verify.js","../src/serialize/index.js","../src/transaction/index.js","../src/events/index.js","../../../node_modules/sha3/sponge/permute/copy/index.js","../../../node_modules/sha3/sponge/permute/chi/index.js","../../../node_modules/sha3/sponge/permute/iota/round-constants/index.js","../../../node_modules/sha3/sponge/permute/iota/index.js","../../../node_modules/sha3/sponge/permute/rho-pi/pi-shuffles/index.js","../../../node_modules/sha3/sponge/permute/rho-pi/rho-offsets/index.js","../../../node_modules/sha3/sponge/permute/rho-pi/index.js","../../../node_modules/sha3/sponge/permute/theta/index.js","../../../node_modules/sha3/sponge/permute/index.js","../../../node_modules/sha3/sponge/index.js","../../../node_modules/sha3/index.js","../src/interaction-template-utils/utils/hash.js","../src/interaction-template-utils/generate-template-id.js","../src/interaction-template-utils/get-interaction-template-audits.js","../src/interaction-template-utils/utils/generate-import.js","../src/interaction-template-utils/utils/find-imports.js","../src/interaction-template-utils/generate-dependency-pin.js","../src/normalizers/interaction-template/interaction-template-interface.js","../src/interaction-template-utils/generate-template-interface-id.js","../src/interaction-template-utils/verify-dependency-pin-same-at-block.js","../src/interaction-template-utils/get-template-message.js","../src/interaction-template-utils/get-template-argument-message.js","../src/fcl.js"],"sourcesContent":["import * as sdk from \"@onflow/sdk\"\nimport {config} from \"@onflow/config\"\nimport {log} from \"@onflow/util-logger\"\nimport {invariant} from \"@onflow/util-invariant\"\n\nasync function getChainIdFromAccessNode() {\n  const response = await sdk.send([sdk.getNetworkParameters()]).then(sdk.decode)\n  return response.chainId\n}\n\n/**\n * Sets the default chain id to the chain id of the access node\n *\n * @returns {string} The chain id of the access node\n *\n * @example\n * // returns \"testnet\"\n * setChainIdDefault()\n */\nexport async function setChainIdDefault() {\n  const network = await getChainIdFromAccessNode()\n  config.put(\"flow.network.default\", network)\n  return network\n}\n\n/**\n * @description\n * Gets the chain ID if its set, otherwise gets the chain ID from the access node\n *\n * @returns {string} The chain ID of the access node\n * @throws {Error} If the chain ID is not found\n *\n * @example\n * // returns \"testnet\"\n * getChainId()\n */\nexport async function getChainId() {\n  let network = await config.get(\"flow.network.default\")\n\n  if (!network) {\n    network = await setChainIdDefault()\n\n    if (!network) {\n      network = await config.get(\"flow.network\")\n\n      if (network) {\n        log.deprecate({\n          pkg: \"FCL\",\n          subject:\n            'Using the \"flow.network\" configuration key for specifying the flow network',\n          message: \"Configuring flow.network is no longer required\",\n          transition:\n            \"https://github.com/onflow/flow-js-sdk/blob/master/packages/fcl/TRANSITIONS.md#0002-deprecate-flow.network-config-key\",\n        })\n      } else {\n        network = await config.get(\"env\")\n\n        if (network)\n          log.deprecate({\n            pkg: \"FCL\",\n            subject:\n              'Using the \"env\" configuration key for specifying the flow network',\n            message:\n              \"Configuring to specify flow network is no longer required\",\n            transition:\n              \"https://github.com/onflow/flow-js-sdk/blob/master/packages/fcl/TRANSITIONS.md#0001-deprecate-env-config-key\",\n          })\n      }\n    }\n  }\n\n  invariant(\n    network,\n    \"Error getting chainId from access node. Please configure flow.network instead\"\n  )\n\n  return network\n}\n","import {config} from \"@onflow/config\"\nimport {setChainIdDefault} from \"./get-chain-id\"\n\n/**\n * @description\n * Watches the config for changes to access node and updates the chain id accordingly\n *\n * @returns {Function} A function that unsubscribes the listener\n *\n */\nexport function watchForChainIdChanges() {\n  return config.subscribe(\n    function configSubscriber(config) {\n      const nextAccessNode = config?.[\"accessNode.api\"]\n      if (this.prevAccessNode !== nextAccessNode) {\n        setChainIdDefault()\n      }\n      this.prevAccessNode = nextAccessNode\n    }.bind({})\n  )\n}\n","export {getChainId} from \"./get-chain-id\"\nexport {watchForChainIdChanges} from \"./chain-id-watcher\"\n\nexport function isAndroid() {\n  return (\n    typeof navigator !== \"undefined\" && /android/i.test(navigator.userAgent)\n  )\n}\n\nexport function isSmallIOS() {\n  return (\n    typeof navigator !== \"undefined\" && /iPhone|iPod/.test(navigator.userAgent)\n  )\n}\n\nexport function isLargeIOS() {\n  return typeof navigator !== \"undefined\" && /iPad/.test(navigator.userAgent)\n}\n\nexport function isIOS() {\n  return isSmallIOS() || isLargeIOS()\n}\n\nexport function isMobile() {\n  return isAndroid() || isIOS()\n}\n","import {config} from \"@onflow/config\"\nimport {setChainIdDefault, watchForChainIdChanges} from \"./utils\"\n\nconst isServerSide = () => typeof window === \"undefined\"\n\nconst SESSION_STORAGE = {\n  can: !isServerSide(),\n  get: async key => JSON.parse(sessionStorage.getItem(key)),\n  put: async (key, value) => sessionStorage.setItem(key, JSON.stringify(value)),\n}\n\nconfig({\n  \"discovery.wallet.method.default\": \"IFRAME/RPC\",\n  \"fcl.storage.default\": SESSION_STORAGE,\n})\n\n// Set chain id default on access node change\nwatchForChainIdChanges()\n\nexport async function configLens(regex) {\n  return Object.fromEntries(\n    Object.entries(await config().where(regex)).map(([key, value]) => [\n      key.replace(regex, \"\"),\n      value,\n    ])\n  )\n}\n","export const VERSION = PACKAGE_CURRENT_VERSION || \"TESTVERSION\"\n","const is = type => d => typeof d === type\n\nexport const isRequired = d => d != null\nexport const isObject = is(\"object\")\nexport const isString = is(\"string\")\nexport const isFunc = is(\"function\")\nexport const isNumber = is(\"number\")\n","import {isFunc} from \"./is\"\nimport * as sdk from \"@onflow/sdk\"\nimport * as t from \"@onflow/types\"\n\nexport function normalizeArgs(ax) {\n  if (isFunc(ax)) return ax(sdk.arg, t)\n  return []\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport fetchTransport from \"cross-fetch\"\nimport {config} from \"@onflow/config\"\n\nasync function httpDocumentResolver({url}) {\n  invariant(\n    typeof url !== \"undefined\",\n    \"retrieve({ url }) -- url must be defined\"\n  )\n\n  let res\n  try {\n    res = await fetchTransport(url)\n  } catch (e) {\n    throw new Error(\"httpDocumentResolver Error: Failed to retrieve document.\")\n  }\n\n  let document = res.ok ? await res.json() : null\n\n  return document\n}\n\nconst DOCUMENT_RESOLVERS = new Map([\n  [\"http\", httpDocumentResolver],\n  [\"https\", httpDocumentResolver],\n])\n\nexport async function retrieve({url}) {\n  invariant(\n    typeof url !== \"undefined\",\n    \"retrieve({ url }) -- url must be defined\"\n  )\n  invariant(\n    typeof url === \"string\",\n    \"retrieve({ url }) -- url must be a string\"\n  )\n\n  const documentResolversFromConfig = await config().where(\n    /^document\\.resolver\\./\n  )\n  Object.keys(documentResolversFromConfig).map(key => {\n    const resolverFromConfig = documentResolversFromConfig[key]\n    const resolverProtocol = key.replace(/^document\\.resolver\\./, \"\")\n    DOCUMENT_RESOLVERS.set(resolverProtocol, resolverFromConfig)\n  })\n\n  const urlParts = /^(.*):\\/\\/([A-Za-z0-9\\-\\.]+)(:[0-9]+)?(.*)$/.exec(url)\n  invariant(urlParts, \"Failed to parse URL\")\n  const protocol = urlParts[1]\n  invariant(urlParts, \"Failed to parse URL protocol\")\n\n  const resolver = DOCUMENT_RESOLVERS.get(protocol)\n  invariant(resolver, `No resolver found for protcol=${protocol}`)\n\n  let document = await resolver({url})\n\n  return document\n}\n","export function normalizeInteractionTemplate(template) {\n  if (template == null) return null\n\n  switch (template[\"f_version\"]) {\n    case \"1.0.0\":\n      return template\n\n    default:\n      throw new Error(\n        \"normalizeInteractionTemplate Error: Invalid InteractionTemplate\"\n      )\n  }\n}\n","import {invariant} from \"@onflow/sdk\"\nimport {normalizeInteractionTemplate} from \"../normalizers/interaction-template/interaction-template\"\n\n/**\n * @description Fills import addresses in Cadence for network\n * \n * @param {object} params\n * @param {string} params.network - Network to derive Cadence for\n * @param {object} params.template - Interaction Template to derive Cadence from\n * @returns {string} - Cadence\n */\nexport function deriveCadenceByNetwork({network, template}) {\n  invariant(\n    network != undefined,\n    \"deriveCadenceByNetwork({ network }) -- network must be defined\"\n  )\n  invariant(\n    typeof network === \"string\",\n    \"deriveCadenceByNetwork({ network }) -- network must be a string\"\n  )\n\n  invariant(\n    template != undefined,\n    \"generateDependencyPin({ template }) -- template must be defined\"\n  )\n  invariant(\n    typeof template === \"object\",\n    \"generateDependencyPin({ template }) -- template must be an object\"\n  )\n  invariant(\n    template.f_type === \"InteractionTemplate\",\n    \"generateDependencyPin({ template }) -- template must be an InteractionTemplate\"\n  )\n\n  template = normalizeInteractionTemplate(template)\n\n  switch (template.f_version) {\n    case \"1.0.0\":\n      let networkDependencies = Object.keys(template?.data?.dependencies).map(\n        dependencyPlaceholder => {\n          let dependencyNetworkContracts = Object.values(\n            template?.data?.dependencies?.[dependencyPlaceholder]\n          )\n\n          invariant(\n            dependencyNetworkContracts,\n            `deriveCadenceByNetwork -- Could not find contracts for dependency placeholder: ${dependencyPlaceholder}`\n          )\n\n          invariant(\n            dependencyNetworkContracts.length === 0,\n            `deriveCadenceByNetwork -- Could not find contracts for dependency placeholder: ${dependencyPlaceholder}`\n          )\n\n          let dependencyContract = dependencyNetworkContracts[0]\n          let dependencyContractForNetwork = dependencyContract?.[network]\n\n          invariant(\n            dependencyContractForNetwork,\n            `deriveCadenceByNetwork -- Could not find ${network} network information for dependency: ${dependencyPlaceholder}`\n          )\n\n          return [dependencyPlaceholder, dependencyContractForNetwork.address]\n        }\n      )\n\n      return networkDependencies.reduce((cadence, [placeholder, address]) => {\n        const regex = new RegExp(\"(\\\\b\" + placeholder + \"\\\\b)\", \"g\")\n        return cadence.replace(regex, address)\n      }, template.data.cadence)\n\n    default:\n      throw new Error(\n        \"deriveCadenceByNetwork Error: Unsupported template version\"\n      )\n  }\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {withPrefix} from \"@onflow/util-address\"\nimport {getChainId} from \"../../utils\"\n\nexport async function deriveDependencies({template}) {\n  const network = await getChainId()\n\n  invariant(\n    network,\n    \"FCL configureDependencies Error: Missing configuration value for 'flow.network'\"\n  )\n\n  const derivedDependencies = {}\n\n  switch (template[\"f_version\"]) {\n    case \"1.0.0\":\n      const dependencyPlaceholderKeys = Object.keys(\n        template?.data?.dependencies\n      )\n      for (let dependencyPlaceholderKey of dependencyPlaceholderKeys) {\n        let dependencyPlaceholder =\n          template?.data?.dependencies[dependencyPlaceholderKey]\n\n        const dependencyPlaceholderContractsKeys = Object.keys(\n          dependencyPlaceholder\n        )\n        invariant(\n          dependencyPlaceholderContractsKeys.length > 0,\n          `FCL configureDependencies Error: No contracts found in template for placeholder=${dependencyPlaceholderKey}`\n        )\n        const dependencyPlaceholderContract =\n          dependencyPlaceholder[dependencyPlaceholderContractsKeys[0]]\n        const dependency = dependencyPlaceholderContract[network]\n\n        invariant(\n          dependency,\n          `FCL configureDependencies Error: No dependency information for placeholder=${dependencyPlaceholderKey} contract=${dependencyPlaceholderContractsKeys[0]} network=${network}`\n        )\n        invariant(\n          dependency?.address,\n          `FCL configureDependencies Error: No address information for placeholder=${dependencyPlaceholderKey} contract=${dependencyPlaceholderContractsKeys[0]} network=${network}`\n        )\n\n        derivedDependencies[dependencyPlaceholderKey] = withPrefix(\n          dependency?.address\n        )\n      }\n\n      return derivedDependencies\n\n    default:\n      throw new Error(\n        \"FCL configureDependencies Error: Unsupported template version\"\n      )\n  }\n}\n","import {retrieve} from \"../../document/document.js\"\nimport {normalizeInteractionTemplate} from \"../../normalizers/interaction-template/interaction-template\"\nimport {deriveCadenceByNetwork} from \"../../interaction-template-utils/derive-cadence-by-network.js\"\nimport {deriveDependencies} from \"./derive-dependencies\"\nimport {isString} from \"./is\"\nimport {getChainId} from \"../../utils\"\n\nexport async function prepTemplateOpts(opts) {\n  if (isString(opts?.template)) {\n    opts.template = await retrieve({url: opts?.template})\n  }\n\n  let dependencies = {}\n  if (opts?.template) {\n    opts.template = normalizeInteractionTemplate(opts?.template)\n    dependencies = await deriveDependencies({template: opts.template})\n  }\n\n  const cadence =\n    opts.cadence ||\n    deriveCadenceByNetwork({\n      template: opts.template,\n      network: await getChainId(),\n    })\n\n  opts.cadence = cadence\n  opts.dependencies = dependencies\n\n  return opts\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport * as sdk from \"@onflow/sdk\"\nimport {isRequired, isObject, isString} from \"./is\"\n\nasync function pre(type, opts) {\n  // prettier-ignore\n  invariant(isRequired(opts), `${type}(opts) -- opts is required`)\n  // prettier-ignore\n  invariant(isObject(opts), `${type}(opts) -- opts must be an object`)\n  // prettier-ignore\n  invariant(!(opts.cadence && opts.template), `${type}({ template, cadence }) -- cannot pass both cadence and template`)\n  // prettier-ignore\n  invariant(isRequired(opts.cadence || opts?.template), `${type}({ cadence }) -- cadence is required`)\n  // // prettier-ignore\n  invariant(\n    isString(opts.cadence) || opts?.template,\n    `${type}({ cadence }) -- cadence must be a string`\n  )\n  // prettier-ignore\n  invariant(\n    opts.cadence || (await sdk.config().get(\"flow.network\")),\n    `${type}(opts) -- Required value for \"flow.network\" not defined in config. See: ${\"https://github.com/onflow/flow-js-sdk/blob/master/packages/fcl/src/exec/query.md#configuration\"}`\n  )\n  // prettier-ignore\n  invariant(\n    await sdk.config().get(\"accessNode.api\"),\n    `${type}(opts) -- Required value for \"accessNode.api\" not defined in config. See: ${\"https://github.com/onflow/flow-js-sdk/blob/master/packages/fcl/src/exec/query.md#configuration\"}`\n  )\n}\n\nexport async function preMutate(opts) {\n  return pre(\"mutate\", opts)\n}\n\nexport async function preQuery(opts) {\n  return pre(\"query\", opts)\n}\n","import * as sdk from \"@onflow/sdk\"\nimport {normalizeArgs} from \"./utils/normalize-args\"\nimport {prepTemplateOpts} from \"./utils/prep-template-opts.js\"\nimport {preQuery} from \"./utils/pre.js\"\n\n/**\n * @description\n * Allows you to submit scripts to query the blockchain.\n *\n *  @param {object} opts - Query Options and configuration\n *  @param {string} opts.cadence - Cadence Script used to query Flow\n *  @param {import(\"../fcl\").ArgsFn} [opts.args] - Arguments passed to cadence script\n *  @param {object} [opts.template] - Interaction Template for a script\n *  @param {number} [opts.limit]   - Compute Limit for Query\n *  @returns {Promise}\n *\n *  @example\n *    const cadence = `\n *      cadence: `\n *        pub fun main(a: Int, b: Int, c: Address): Int {\n *          log(c)\n *          return a + b\n *        }\n *    `.trim()\n *\n *    const args = (arg, t) => [\n *      arg(5, t.Int),\n *      arg(7, t.Int),\n *      arg(\"0xb2db43ad6bc345fec9\", t.Address),\n *    ]\n *\n *    await query({ cadence, args })\n */\nexport async function query(opts = {}) {\n  await preQuery(opts)\n  opts = await prepTemplateOpts(opts)\n\n  return sdk.config().overload(opts.dependencies || {}, async () =>\n    // prettier-ignore\n    sdk.send([\n      sdk.script(opts.cadence),\n      sdk.args(normalizeArgs(opts.args || [])),\n      opts.limit && typeof opts.limit === \"number\" && sdk.limit(opts.limit)\n    ]).then(sdk.decode)\n  )\n}\n","export async function fetchServices(servicesURL, code) {\n  if (servicesURL == null || code == null) return []\n\n  const url = new URL(servicesURL)\n  url.searchParams.append(\"code\", code)\n\n  const resp = await fetch(url, {\n    method: \"GET\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  }).then(d => d.json())\n\n  if (Array.isArray(resp)) return resp\n\n  // Backwards compatibility for First-Gen Wallet Providers\n  const services = []\n\n  // Convert authorizations into authz services\n  if (Array.isArray(resp.authorizations)) {\n    for (let service of resp.authorizations) {\n      services.push({\n        type: \"authz\",\n        keyId: resp.keyId,\n        ...service,\n      })\n    }\n  }\n\n  // Convert Provider info into an authn service\n  if (resp.provider != null) {\n    services.push({\n      type: \"authn\",\n      id: \"wallet-provider#authn\",\n      ...resp.provider,\n    })\n  }\n\n  return services\n}\n","import {withPrefix} from \"@onflow/util-address\"\n\nexport function mergeServices(sx1 = [], sx2 = []) {\n  // TODO: Make this smarter\n  return [...sx1, ...sx2]\n}\n","export const SERVICE_PRAGMA = {\n  f_type: \"Service\",\n  f_vsn: \"1.0.0\",\n}\n\nexport const IDENTITY_PRAGMA = {\n  f_type: \"Identity\",\n  f_vsn: \"1.0.0\",\n}\n\nexport const PROVIDER_PRAGMA = {\n  f_type: \"Provider\",\n  f_vsn: \"1.0.0\",\n}\n\nexport const USER_PRAGMA = {\n  f_type: \"USER\",\n  f_vsn: \"1.0.0\",\n}\n\nexport const POLLING_RESPONSE_PRAGMA = {\n  f_type: \"PollingResponse\",\n  f_vsn: \"1.0.0\",\n}\n\nexport const COMPOSITE_SIGNATURE_PRAGMA = {\n  f_type: \"CompositeSignature\",\n  f_vsn: \"1.0.0\",\n}\n\nexport const OPEN_ID_PRAGMA = {\n  f_type: \"OpenId\",\n  f_vsn: \"1.0.0\",\n}\n","import {withPrefix} from \"@onflow/util-address\"\nimport {SERVICE_PRAGMA} from \"./__vsn\"\n\n// {\n//   \"f_type\": \"Service\",\n//   \"f_vsn\": \"1.0.0\",\n//   \"type\": \"authn\",\n//   \"uid\": \"uniqueDedupeKey\",\n//   \"endpoint\": \"https://rawr\",\n//   \"id\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\", // wallets internal id for the user\n//   \"identity\": {\n//     \"address\": \"0x____\"\n//   },\n//   \"provider\": {\n//     \"address\": \"0x____\",\n//     \"name\": \"Best Wallet\",\n//     \"description\": \"The Best Wallet\"\n//     \"icon\": \"https://\",\n//   }\n// }\nexport function normalizeAuthn(service) {\n  if (service == null) return null\n\n  switch (service[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return service\n\n    default:\n      return {\n        ...SERVICE_PRAGMA,\n        type: service.type,\n        uid: service.id,\n        endpoint: service.authn,\n        id: service.pid,\n        provider: {\n          address: withPrefix(service.addr),\n          name: service.name,\n          icon: service.icon,\n        },\n      }\n  }\n}\n","import {withPrefix} from \"@onflow/util-address\"\nimport {SERVICE_PRAGMA, IDENTITY_PRAGMA} from \"./__vsn\"\n\n// {\n//   \"f_type\": \"service\",\n//   \"f_vsn\": \"1.0.0\",\n//   \"type\": \"authz\",\n//   \"uid\": \"uniqueDedupeKey\",\n//   \"endpoint\": \"https://rawr\",\n//   \"method\": \"HTTP/POST\", // HTTP/POST | IFRAME/RPC | HTTP/RPC\n//   \"identity\": {\n//      \"address\": \"0x______\",\n//      \"keyId\": 0,\n//   },\n//   \"data\": {}, // included in body of authz request\n//   \"params\": {}, // included as query params on endpoint url\n// }\nexport function normalizeAuthz(service) {\n  if (service == null) return null\n\n  switch (service[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return service\n\n    default:\n      return {\n        ...SERVICE_PRAGMA,\n        type: service.type,\n        uid: service.id,\n        endpoint: service.endpoint,\n        method: service.method,\n        identity: {\n          ...IDENTITY_PRAGMA,\n          address: withPrefix(service.addr),\n          keyId: service.keyId,\n        },\n        params: service.params,\n        data: service.data,\n      }\n  }\n}\n","import {withPrefix} from \"@onflow/util-address\"\nimport {SERVICE_PRAGMA, IDENTITY_PRAGMA} from \"./__vsn\"\n\n// {\n//   \"f_type\": \"service\",\n//   \"f_vsn\": \"1.0.0\",\n//   \"type\": \"pre-authz\",\n//   \"uid\": \"uniqueDedupeKey\",\n//   \"endpoint\": \"https://rawr\",\n//   \"method\": \"HTTP/POST\", // HTTP/POST | IFRAME/RPC | HTTP/RPC\n//   \"identity\": {\n//      \"address\": \"0x______\",\n//      \"keyId\": 0,\n//   },\n//   \"data\": {}, // included in body of pre-authz request\n//   \"params\": {}, // included as query params on endpoint url\n// }\nexport function normalizePreAuthz(service) {\n  if (service == null) return null\n\n  switch (service[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return service\n\n    default:\n      return {\n        ...SERVICE_PRAGMA,\n        type: service.type,\n        uid: service.id,\n        endpoint: service.endpoint,\n        method: service.method,\n        identity: {\n          ...IDENTITY_PRAGMA,\n          address: withPrefix(service.addr),\n          keyId: service.keyId,\n        },\n        params: service.params,\n        data: service.data,\n      }\n  }\n}\n","import {SERVICE_PRAGMA} from \"./__vsn\"\n\n// {\n//    \"f_type\": \"Service\",\n//    \"f_vsn\": \"1.0.0\",\n//    \"type\": \"frame\",\n//    \"endpoint\": \"https://rawr\",\n//    \"data\": {},   // Sent to frame when ready\n//    \"params\": {}, // include in query params on frame\n// }\nexport function normalizeFrame(service) {\n  if (service == null) return null\n\n  switch (service[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return service\n\n    default:\n      return {\n        old: service,\n        ...SERVICE_PRAGMA,\n        type: \"frame\",\n        endpoint: service.endpoint,\n        params: service.params || {},\n        data: service.data || {},\n      }\n  }\n}\n","import {SERVICE_PRAGMA} from \"./__vsn\"\n\n// {\n//    \"f_type\": \"Service\",\n//    \"f_vsn\": \"1.0.0\",\n//    \"type\": \"back-channel-rpc\",\n//    \"endpoint\": \"https://rawr\",\n//    \"method\": \"HTTP/GET\", // HTTP/GET | HTTP/POST\n//    \"data\": {},           // included in body of rpc\n//    \"params\": {},         // included as query params on endpoint url\n// }\nexport function normalizeBackChannelRpc(service) {\n  if (service == null) return null\n\n  switch (service[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return service\n\n    default:\n      return {\n        ...SERVICE_PRAGMA,\n        type: \"back-channel-rpc\",\n        endpoint: service.endpoint,\n        method: service.method,\n        params: service.params || {},\n        data: service.data || {},\n      }\n  }\n}\n","import {SERVICE_PRAGMA, OPEN_ID_PRAGMA} from \"./__vsn\"\n\n// {\n//   \"f_type\": \"Service\",\n//   \"f_vsn\": \"1.0.0\",\n//   \"type\": \"open-id\",\n//   \"uid\": \"uniqueDedupeKey\",\n//   \"method: \"data\",\n//   \"data\": {\n//      \"profile\": {\n//        \"name\": \"Bob\",\n//        \"family_name\": \"Builder\",\n//        \"given_name\": \"Robert\",\n//        \"middle_name\": \"the\",\n//        \"nickname\": \"Bob the Builder\",\n//        \"perferred_username\": \"bob\",\n//        \"profile\": \"https://www.bobthebuilder.com/\",\n//        \"picture\": \"https://avatars.onflow.org/avatar/bob\",\n//        \"gender\": \"...\",\n//        \"birthday\": \"2001-01-18\",\n//        \"zoneinfo\": \"America/Vancouver\",\n//        \"locale\": \"en-us\",\n//        \"updated_at\": \"1614970797388\"\n//      },\n//      \"email\": {\n//        \"email\": \"bob@bob.bob\",\n//        \"email_verified\": true\n//      },\n//      \"address\": {\n//        \"address\": \"One Apple Park Way, Cupertino, CA 95014, USA\"\n//      },\n//      \"phone\": {\n//        \"phone_number\": \"+1 (xxx) yyy-zzzz\",\n//        \"phone_number_verified\": true\n//      },\n//      \"social\": {\n//        \"twitter\": \"@_qvvg\",\n//        \"twitter_verified\": true\n//      },\n//   }\n// }\nexport function normalizeOpenId(service) {\n  if (service == null) return null\n\n  switch (service[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return service\n\n    default:\n      return null\n  }\n}\n","// {\n//   \"f_type\": \"Service\",\n//   \"f_vsn\": \"1.0.0\",\n//   \"type\": \"user-signature\",\n//   \"uid\": \"uniqueDedupeKey\",\n//   \"endpoint\": \"https://rawr\",\n//   \"method\": \"IFRAME/RPC\", // HTTP/POST | IFRAME/RPC | HTTP/RPC\n//   \"id\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\", // wallets internal id for the user\n//   \"data\": {}, // included in body of user-signature request\n//   \"params\": {}, // included as query params on endpoint url\n// }\nexport function normalizeUserSignature(service) {\n  if (service == null) return null\n\n  switch (service[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return service\n\n    default:\n      throw new Error(\"Invalid user-signature service\")\n  }\n}\n","import {SERVICE_PRAGMA} from \"./__vsn\"\n\n// {\n//    \"f_type\": \"Service\",\n//    \"f_vsn\": \"1.0.0\",\n//    type: \"local-view\",\n//    method: \"VIEW/IFRAME\",\n//    endpoint: \"https://woot.org/authz/local\",\n//    data: {},\n//    params: {},\n// }\nexport function normalizeLocalView(resp) {\n  if (resp == null) return null\n  if (resp.method == null) {\n    resp = {...resp, type: \"local-view\", method: \"VIEW/IFRAME\"}\n  }\n\n  switch (resp[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return resp\n\n    default:\n      return {\n        ...SERVICE_PRAGMA,\n        type: resp.type || \"local-view\",\n        method: resp.method,\n        endpoint: resp.endpoint,\n        data: resp.data || {},\n        params: resp.params || {},\n      }\n  }\n}\n","// {\n//   \"f_type\": \"Service\",                    // Its a service!\n//   \"f_vsn\": \"1.0.0\",                       // Follows the v1.0.0 spec for the service\n//   \"type\": \"account-proof\",                // the type of service it is\n//   \"method\": \"DATA\",                       // Its data!\n//   \"uid\": \"awesome-wallet#account-proof\",  // A unique identifier for the service\n//   \"data\": {\n//     \"f_type\": \"account-proof\",\n//     \"f_vsn\": \"1.0.0\",\n//     \"nonce\": \"0A1BC2FF\",                  // Nonce signed by the current account-proof (minimum 32 bytes in total, i.e 64 hex characters)\n//     \"address\": \"0xUSER\",                  // The user's address (8 bytes, i.e 16 hex characters)\n//     \"signature\": CompositeSignature,      // address (sans-prefix), keyId, signature (hex)\n// }\n\nexport function normalizeAccountProof(service) {\n  if (service == null) return null\n\n  switch (service[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return service\n\n    default:\n      throw new Error(`FCL Normalizer Error: Invalid account-proof service`)\n  }\n}\n","// {\n//   \"f_type\": \"Service\",\n//   \"f_vsn\": \"1.0.0\",\n//   \"type\": \"authn-refresh\",\n//   \"uid\": \"uniqueDedupeKey\",\n//   \"endpoint\": \"https://rawr\",\n//   \"method\": \"HTTP/POST\",  // \"HTTP/POST\", // HTTP/POST | IFRAME/RPC | HTTP/RPC\n//   \"id\": \"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\", // wallets internal id for the user\n//   \"data\": {}, // included in body of request\n//   \"params\": {}, // included as query params on endpoint url\n// }\nexport function normalizeAuthnRefresh(service) {\n  if (service == null) return null\n\n  switch (service[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return service\n\n    default:\n      throw new Error(\"Invalid authn-refresh service\")\n  }\n}\n","import {normalizeAuthn} from \"./authn\"\nimport {normalizeAuthz} from \"./authz\"\nimport {normalizePreAuthz} from \"./pre-authz\"\nimport {normalizeFrame} from \"./frame\"\nimport {normalizeBackChannelRpc} from \"./back-channel-rpc\"\nimport {normalizeOpenId} from \"./open-id\"\nimport {normalizeUserSignature} from \"./user-signature\"\nimport {normalizeLocalView} from \"./local-view\"\nimport {normalizeAccountProof} from \"./account-proof\"\nimport {normalizeAuthnRefresh} from \"./authn-refresh\"\n\nexport function normalizeServices(services, data) {\n  return services.map(service => normalizeService(service, data))\n}\n\nconst serviceNormalizers = {\n  \"back-channel-rpc\": normalizeBackChannelRpc,\n  \"pre-authz\": normalizePreAuthz,\n  authz: normalizeAuthz,\n  authn: normalizeAuthn,\n  frame: normalizeFrame,\n  \"open-id\": normalizeOpenId,\n  \"user-signature\": normalizeUserSignature,\n  \"local-view\": normalizeLocalView,\n  \"account-proof\": normalizeAccountProof,\n  \"authn-refresh\": normalizeAuthnRefresh,\n}\n\nexport function normalizeService(service, data) {\n  try {\n    var normalized = serviceNormalizers[service.type](service, data)\n    return normalized\n  } catch (error) {\n    console.error(\n      `Unrecognized FCL Service Type [${service.type}]`,\n      service,\n      error\n    )\n    return service\n  }\n}\n","import {withPrefix} from \"@onflow/util-address\"\nimport * as rlp from \"@onflow/rlp\"\nimport {fetchServices} from \"./fetch-services\"\nimport {mergeServices} from \"./merge-services\"\nimport {USER_PRAGMA} from \"../normalizers/service/__vsn\"\nimport {normalizeService} from \"../normalizers/service/service\"\n\nfunction deriveCompositeId(authn) {\n  return rlp\n    .encode([\n      authn.provider.address || authn.provider.name || \"UNSPECIFIED\",\n      authn.id,\n    ])\n    .toString(\"hex\")\n}\n\nfunction normalizeData(data) {\n  data.addr = data.addr ? withPrefix(data.addr) : null\n  data.paddr = data.paddr ? withPrefix(data.paddr) : null\n  return data\n}\n\nfunction findService(type, services) {\n  return services.find(d => d.type === type)\n}\n\nexport async function buildUser(data) {\n  data = normalizeData(data)\n\n  var services = mergeServices(\n    data.services || [],\n    await fetchServices(data.hks, data.code)\n  ).map(service => normalizeService(service, data))\n\n  const authn = findService(\"authn\", services)\n\n  return {\n    ...USER_PRAGMA,\n    addr: withPrefix(data.addr),\n    cid: deriveCompositeId(authn),\n    loggedIn: true,\n    services: services,\n    expiresAt: data.expires,\n  }\n}\n","export function serviceOfType(services = [], type) {\n  return services.find(service => service.type === type)\n}\n","export function serviceEndpoint(service) {\n  const url = new URL(service.endpoint)\n  if (window?.location?.origin) {\n    url.searchParams.append(\"l6n\", window.location.origin)\n  }\n  if (service.params != null) {\n    for (let [key, value] of Object.entries(service.params || {})) {\n      url.searchParams.append(key, value)\n    }\n  }\n  return url\n}\n","import {serviceEndpoint} from \"./service-endpoint\"\n\nexport function fetchService(service, opts = {}) {\n  const method = opts.method || \"POST\"\n  const body =\n    method === \"GET\"\n      ? undefined\n      : JSON.stringify(opts.data || service.data || {})\n\n  return fetch(serviceEndpoint(service), {\n    method: method,\n    headers: {\n      ...(service.headers || {}),\n      ...(opts.headers || {}),\n      \"Content-Type\": \"application/json\",\n    },\n    body: body,\n  }).then(d => d.json())\n}\n","import {POLLING_RESPONSE_PRAGMA} from \"./__vsn\"\nimport {normalizeBackChannelRpc} from \"./back-channel-rpc\"\nimport {normalizeFrame} from \"./frame\"\n\n// {\n//    \"f_type\": \"PollingResponse\",\n//    \"f_vsn\": \"1.0.0\",\n//    \"status\": \"PENDING\", // PENDING | APPROVED | DECLINED | REDIRECT\n//    \"reason\": null,      // Reason for Declining Transaction\n//    \"data\": null,        // Return value for APPROVED\n//    \"updates\": BackChannelRpc,\n//    \"local\": Frame,\n// }\nexport function normalizePollingResponse(resp) {\n  if (resp == null) return null\n\n  switch (resp[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return resp\n\n    default:\n      return {\n        ...POLLING_RESPONSE_PRAGMA,\n        status: resp.status ?? \"APPROVED\",\n        reason: resp.reason ?? null,\n        data: resp.compositeSignature || resp.data || {...resp} || {},\n        updates: normalizeBackChannelRpc(resp.authorizationUpdates),\n        local: normalizeFrame((resp.local || [])[0]),\n      }\n  }\n}\n","import {normalizePollingResponse} from \"../../../../normalizers/service/polling-response\"\nimport {serviceEndpoint} from \"./service-endpoint\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport {fetchService} from \"./fetch-service\"\n\nconst OPTIONS = {\n  \"HTTP/GET\": \"GET\",\n  \"HTTP/POST\": \"POST\",\n}\n\nconst serviceMethod = service => {\n  invariant(\n    OPTIONS[service.method],\n    \"Invalid Service Method for type back-channel-rpc\",\n    {service}\n  )\n  return OPTIONS[service.method]\n}\n\nconst serviceBody = service => {\n  if (service.method === \"HTTP/GET\") return undefined\n  if (service.method === \"HTTP/POST\" && service.data != null)\n    return JSON.stringify(service.data)\n  return undefined\n}\n\nexport async function poll(service, canContinue = () => true) {\n  invariant(service, \"Missing Polling Service\", {service})\n  if (!canContinue()) throw new Error(\"Externally Halted\")\n\n  let resp\n  try {\n    if (\n      typeof document !== \"undefined\" &&\n      document.visibilityState === \"hidden\"\n    ) {\n      await new Promise(r => setTimeout(r, 500))\n      return poll(service, canContinue)\n    }\n\n    resp = await fetchService(service, {\n      method: serviceMethod(service),\n    }).then(normalizePollingResponse)\n  } catch (error) {\n    throw error\n  }\n\n  switch (resp.status) {\n    case \"APPROVED\":\n      return resp.data\n    case \"DECLINED\":\n      throw new Error(`Declined: ${resp.reason || \"No reason supplied.\"}`)\n    default:\n      await new Promise(r => setTimeout(r, 500))\n      return poll(resp.updates, canContinue)\n  }\n}\n","import {invariant} from \"@onflow/util-invariant\"\n\nconst FRAME = \"FCL_IFRAME\"\n\nconst FRAME_STYLES = `\n  position:fixed;\n  top: 0px;\n  right: 0px;\n  bottom: 0px;\n  left: 0px;\n  height: 100%;\n  width: 100vw;\n  display:block;\n  background:rgba(0,0,0,0.25);\n  z-index: 2147483647;\n  box-sizing: border-box;\n  color-scheme: light;\n`\n\nexport function renderFrame(src) {\n  invariant(\n    !document.getElementById(FRAME),\n    \"Attempt at triggering multiple Frames\",\n    {src}\n  )\n\n  const $frame = document.createElement(\"iframe\")\n  $frame.src = src\n  $frame.id = FRAME\n  $frame.allow = \"usb *; hid *\"\n  $frame.frameBorder = \"0\"\n  $frame.style.cssText = FRAME_STYLES\n  document.body.append($frame)\n\n  const unmount = () => {\n    if (document.getElementById(FRAME)) {\n      document.getElementById(FRAME).remove()\n    }\n  }\n\n  return [$frame.contentWindow, unmount]\n}\n","const POP = \"FCL_POP\"\n\nlet popup = null\nlet previousUrl = null\n\nfunction popupWindow(url, windowName, win, w, h) {\n  const y = win.top.outerHeight / 2 + win.top.screenY - h / 2\n  const x = win.top.outerWidth / 2 + win.top.screenX - w / 2\n  const popup = win.open(\n    url,\n    windowName,\n    `toolbar=no, location=no, directories=no, status=no, menubar=no, scrollbars=no, resizable=no, copyhistory=no, width=${w}, height=${h}, top=${y}, left=${x}`\n  )\n  if (!popup)\n    throw new Error(\"Popup failed to open (was it blocked by a popup blocker?)\")\n  return popup\n}\n\nexport function renderPop(src) {\n  if (popup == null || popup?.closed) {\n    popup = popupWindow(src, POP, window, 640, 770)\n  } else if (previousUrl !== src) {\n    popup.location.replace(src)\n    popup.focus()\n  } else {\n    popup.focus()\n  }\n\n  previousUrl = src\n\n  const unmount = () => {\n    if (popup && !popup.closed) {\n      popup.close()\n    }\n    popup = null\n  }\n\n  return [popup, unmount]\n}\n","const TAB = \"FCL_TAB\"\n\nlet tab = null\nlet previousUrl = null\n\nexport function renderTab(src) {\n  if (tab == null || tab?.closed) {\n    tab = window.open(src, \"_blank\")\n    if (!tab)\n      throw new Error(\"Tab failed to open (was it blocked by the browser?)\")\n  } else if (previousUrl !== src) {\n    tab.location.replace(src)\n    tab.focus()\n  } else {\n    tab.focus()\n  }\n\n  previousUrl = src\n\n  const unmount = () => {\n    if (tab && !tab.closed) {\n      tab.close()\n    }\n    tab = null\n  }\n\n  return [tab, unmount]\n}\n","import {renderFrame} from \"./strategies/utils/render-frame\"\nimport {renderPop} from \"./strategies/utils/render-pop\"\nimport {renderTab} from \"./strategies/utils/render-tab\"\nimport {serviceEndpoint} from \"./strategies/utils/service-endpoint\"\n\nconst VIEWS = {\n  \"VIEW/IFRAME\": renderFrame,\n  \"VIEW/POP\": renderPop,\n  \"VIEW/TAB\": renderTab,\n}\n\nexport async function execLocal(service, opts = {}) {\n  try {\n    return VIEWS[service.method](serviceEndpoint(service), opts)\n  } catch (error) {\n    console.error(\"execLocal({service, opts = {}})\", error, {service, opts})\n    throw error\n  }\n}\n","import {fetchService} from \"./utils/fetch-service\"\nimport {normalizePollingResponse} from \"../../../normalizers/service/polling-response\"\nimport {normalizeLocalView} from \"../../../normalizers/service/local-view\"\nimport {poll} from \"./utils/poll\"\nimport {execLocal} from \"../exec-local\"\nimport {VERSION} from \"../../../VERSION\"\n\nexport async function execHttpPost({service, body, config, opts}) {\n  const resp = await fetchService(service, {\n    data: {\n      fclVersion: VERSION,\n      service: {\n        params: service.params,\n        data: service.data,\n        type: service.type,\n      },\n      config,\n      ...body,\n    },\n  }).then(normalizePollingResponse)\n\n  if (resp.status === \"APPROVED\") {\n    return resp.data\n  } else if (resp.status === \"DECLINED\") {\n    throw new Error(`Declined: ${resp.reason || \"No reason supplied.\"}`)\n  } else if (resp.status === \"REDIRECT\") {\n    return resp\n  } else if (resp.status === \"PENDING\") {\n    var canContinue = true\n    const [_, unmount] = await execLocal(normalizeLocalView(resp.local))\n\n    const close = () => {\n      try {\n        unmount()\n        canContinue = false\n      } catch (error) {\n        console.error(\"Frame Close Error\", error)\n      }\n    }\n\n    return poll(resp.updates, () => canContinue)\n      .then(serviceResponse => {\n        close()\n        return serviceResponse\n      })\n      .catch(error => {\n        console.error(error)\n        close()\n        throw error\n      })\n  } else {\n    console.error(`Auto Decline: Invalid Response`, {service, resp})\n    throw new Error(`Auto Decline: Invalid Response`)\n  }\n}\n","const CLOSE_EVENT = \"FCL:VIEW:CLOSE\"\nconst READY_EVENT = \"FCL:VIEW:READY\"\nconst RESPONSE_EVENT = \"FCL:VIEW:RESPONSE\"\n\nconst _ = e => typeof e === \"string\" && e.toLowerCase()\n\nconst IGNORE = new Set([\n  \"monetizationstart\",\n  \"monetizationpending\",\n  \"monetizationprogress\",\n  \"monetizationstop\",\n])\n\nconst deprecate = (was, want) =>\n  console.warn(\n    \"DEPRECATION NOTICE\",\n    `Received ${was}, please use ${want} for this and future versions of FCL`\n  )\n\nexport const buildMessageHandler =\n  ({close, send, onReady, onResponse, onMessage}) =>\n  e => {\n    try {\n      if (typeof e.data !== \"object\") return\n      if (IGNORE.has(e.data.type)) return\n      if (_(e.data.type) === _(CLOSE_EVENT)) close()\n      if (_(e.data.type) === _(READY_EVENT)) onReady(e, {send, close})\n      if (_(e.data.type) === _(RESPONSE_EVENT)) onResponse(e, {send, close})\n      onMessage(e, {send, close})\n\n      // Backwards Compatible\n      if (_(e.data.type) === _(\"FCL:FRAME:READY\")) {\n        deprecate(e.data.type, READY_EVENT)\n        onReady(e, {send, close})\n      }\n      if (_(e.data.type) === _(\"FCL:FRAME:RESPONSE\")) {\n        deprecate(e.data.type, RESPONSE_EVENT)\n        onResponse(e, {send, close})\n      }\n      if (_(e.data.type) === _(\"FCL:FRAME:CLOSE\")) {\n        deprecate(e.data.type, CLOSE_EVENT)\n        close()\n      }\n      //\n      if (_(e.data.type) === _(\"FCL::CHALLENGE::RESPONSE\")) {\n        deprecate(e.data.type, RESPONSE_EVENT)\n        onResponse(e, {send, close})\n      }\n      if (_(e.data.type) === _(\"FCL::AUTHZ_READY\")) {\n        deprecate(e.data.type, READY_EVENT)\n        onReady(e, {send, close})\n      }\n      if (_(e.data.type) === _(\"FCL::CHALLENGE::CANCEL\")) {\n        deprecate(e.data.type, CLOSE_EVENT)\n        close()\n      }\n      if (_(e.data.type) === _(\"FCL::CANCEL\")) {\n        deprecate(e.data.type, CLOSE_EVENT)\n        close()\n      }\n    } catch (error) {\n      console.error(\"Frame Callback Error\", error)\n      close()\n    }\n  }\n","import {renderFrame} from \"./render-frame\"\nimport {serviceEndpoint} from \"./service-endpoint\"\nimport {buildMessageHandler} from \"./buildMessageHandler\"\n\nconst noop = () => {}\n\nexport function frame(service, opts = {}) {\n  if (service == null) return {send: noop, close: noop}\n\n  const onClose = opts.onClose || noop\n  const onMessage = opts.onMessage || noop\n  const onReady = opts.onReady || noop\n  const onResponse = opts.onResponse || noop\n\n  const handler = buildMessageHandler({\n    close,\n    send,\n    onReady,\n    onResponse,\n    onMessage,\n  })\n  window.addEventListener(\"message\", handler)\n\n  const [$frame, unmount] = renderFrame(serviceEndpoint(service))\n  return {send, close}\n\n  function close() {\n    try {\n      window.removeEventListener(\"message\", handler)\n      unmount()\n      onClose()\n    } catch (error) {\n      console.error(\"Frame Close Error\", error)\n    }\n  }\n\n  function send(msg) {\n    try {\n      $frame.postMessage(JSON.parse(JSON.stringify(msg || {})), \"*\")\n    } catch (error) {\n      console.error(\"Frame Send Error\", msg, error)\n    }\n  }\n}\n","import {uid} from \"@onflow/util-uid\"\nimport {frame} from \"./utils/frame\"\nimport {normalizePollingResponse} from \"../../../normalizers/service/polling-response\"\nimport {VERSION} from \"../../../VERSION\"\n\nexport function execIframeRPC({service, body, config, opts}) {\n  return new Promise((resolve, reject) => {\n    const id = uid()\n    const includeOlderJsonRpcCall = opts.includeOlderJsonRpcCall\n\n    frame(service, {\n      async onReady(_, {send}) {\n        try {\n          send({\n            type: \"FCL:VIEW:READY:RESPONSE\",\n            fclVersion: VERSION,\n            body,\n            service: {\n              params: service.params,\n              data: service.data,\n              type: service.type,\n            },\n            config,\n          })\n          send({\n            fclVersion: VERSION,\n            type: \"FCL:FRAME:READY:RESPONSE\",\n            body,\n            service: {\n              params: service.params,\n              data: service.data,\n              type: service.type,\n            },\n            config,\n            deprecated: {\n              message:\n                \"FCL:FRAME:READY:RESPONSE is deprecated and replaced with type: FCL:VIEW:READY:RESPONSE\",\n            },\n          })\n          if (includeOlderJsonRpcCall) {\n            send({\n              jsonrpc: \"2.0\",\n              id: id,\n              method: \"fcl:sign\",\n              params: [body, service.params],\n              deprecated: {\n                message:\n                  \"jsonrpc is deprecated and replaced with type: FCL:VIEW:READY:RESPONSE\",\n              },\n            })\n          }\n        } catch (error) {\n          throw error\n        }\n      },\n\n      onResponse(e, {close}) {\n        try {\n          if (typeof e.data !== \"object\") return\n          const resp = normalizePollingResponse(e.data)\n\n          switch (resp.status) {\n            case \"APPROVED\":\n              resolve(resp.data)\n              close()\n              break\n\n            case \"DECLINED\":\n              reject(`Declined: ${resp.reason || \"No reason supplied\"}`)\n              close()\n              break\n\n            case \"REDIRECT\":\n              resolve(resp)\n              close()\n              break\n\n            default:\n              reject(`Declined: No reason supplied`)\n              close()\n              break\n          }\n        } catch (error) {\n          console.error(\"execIframeRPC onResponse error\", error)\n          throw error\n        }\n      },\n\n      onMessage(e, {close}) {\n        try {\n          if (typeof e.data !== \"object\") return\n          if (e.data.jsonrpc !== \"2.0\") return\n          if (e.data.id !== id) return\n          const resp = normalizePollingResponse(e.data.result)\n\n          switch (resp.status) {\n            case \"APPROVED\":\n              resolve(resp.data)\n              close()\n              break\n\n            case \"DECLINED\":\n              reject(`Declined: ${resp.reason || \"No reason supplied\"}`)\n              close()\n              break\n\n            case \"REDIRECT\":\n              resolve(resp)\n              close()\n              break\n\n            default:\n              reject(`Declined: No reason supplied`)\n              close()\n              break\n          }\n        } catch (error) {\n          console.error(\"execIframeRPC onMessage error\", error)\n          throw error\n        }\n      },\n\n      onClose() {\n        reject(`Declined: Externally Halted`)\n      },\n    })\n  })\n}\n","import {renderPop} from \"./render-pop\"\nimport {serviceEndpoint} from \"./service-endpoint\"\nimport {buildMessageHandler} from \"./buildMessageHandler\"\n\nconst noop = () => {}\n\nexport function pop(service, opts = {}) {\n  if (service == null) return {send: noop, close: noop}\n\n  const onClose = opts.onClose || noop\n  const onMessage = opts.onMessage || noop\n  const onReady = opts.onReady || noop\n  const onResponse = opts.onResponse || noop\n\n  const handler = buildMessageHandler({\n    close,\n    send,\n    onReady,\n    onResponse,\n    onMessage,\n  })\n  window.addEventListener(\"message\", handler)\n\n  const [$pop, unmount] = renderPop(serviceEndpoint(service))\n\n  const timer = setInterval(function () {\n    if ($pop && $pop.closed) {\n      close()\n    }\n  }, 500)\n\n  return {send, close}\n\n  function close() {\n    try {\n      window.removeEventListener(\"message\", handler)\n      clearInterval(timer)\n      unmount()\n      onClose()\n    } catch (error) {\n      console.error(\"Popup Close Error\", error)\n    }\n  }\n\n  function send(msg) {\n    try {\n      $pop.postMessage(JSON.parse(JSON.stringify(msg || {})), \"*\")\n    } catch (error) {\n      console.error(\"Popup Send Error\", msg, error)\n    }\n  }\n}\n","import {uid} from \"@onflow/util-uid\"\nimport {pop} from \"./utils/pop\"\nimport {normalizePollingResponse} from \"../../../normalizers/service/polling-response\"\nimport {VERSION} from \"../../../VERSION\"\n\nexport function execPopRPC({service, body, config, opts}) {\n  return new Promise((resolve, reject) => {\n    const id = uid()\n    const {redir, includeOlderJsonRpcCall} = opts\n\n    pop(service, {\n      async onReady(_, {send}) {\n        try {\n          send({\n            fclVersion: VERSION,\n            type: \"FCL:VIEW:READY:RESPONSE\",\n            body,\n            service: {\n              params: service.params,\n              data: service.data,\n              type: service.type,\n            },\n            config,\n          })\n          send({\n            fclVersion: VERSION,\n            type: \"FCL:FRAME:READY:RESPONSE\",\n            body,\n            service: {\n              params: service.params,\n              data: service.data,\n              type: service.type,\n            },\n            config,\n            deprecated: {\n              message:\n                \"FCL:FRAME:READY:RESPONSE is deprecated and replaced with type: FCL:VIEW:READY:RESPONSE\",\n            },\n          })\n          if (includeOlderJsonRpcCall) {\n            send({\n              jsonrpc: \"2.0\",\n              id: id,\n              method: \"fcl:sign\",\n              params: [body, service.params],\n            })\n          }\n        } catch (error) {\n          throw error\n        }\n      },\n\n      onResponse(e, {close}) {\n        try {\n          if (typeof e.data !== \"object\") return\n          const resp = normalizePollingResponse(e.data)\n\n          switch (resp.status) {\n            case \"APPROVED\":\n              resolve(resp.data)\n              !redir && close()\n              break\n\n            case \"DECLINED\":\n              reject(`Declined: ${resp.reason || \"No reason supplied\"}`)\n              close()\n              break\n\n            case \"REDIRECT\":\n              resolve(resp)\n              close()\n              break\n\n            default:\n              reject(`Declined: No reason supplied`)\n              close()\n              break\n          }\n        } catch (error) {\n          console.error(\"execPopRPC onResponse error\", error)\n          throw error\n        }\n      },\n\n      onMessage(e, {close}) {\n        try {\n          if (typeof e.data !== \"object\") return\n          if (e.data.jsonrpc !== \"2.0\") return\n          if (e.data.id !== id) return\n          const resp = normalizePollingResponse(e.data.result)\n\n          switch (resp.status) {\n            case \"APPROVED\":\n              resolve(resp.data)\n              !redir && close()\n              break\n\n            case \"DECLINED\":\n              reject(`Declined: ${resp.reason || \"No reason supplied\"}`)\n              close()\n              break\n\n            case \"REDIRECT\":\n              resolve(resp)\n              close()\n              break\n\n            default:\n              reject(`Declined: No reason supplied`)\n              close()\n              break\n          }\n        } catch (error) {\n          console.error(\"execPopRPC onMessage error\", error)\n          throw error\n        }\n      },\n\n      onClose() {\n        reject(`Declined: Externally Halted`)\n      },\n    })\n  })\n}\n","import {renderTab} from \"./render-tab\"\nimport {serviceEndpoint} from \"./service-endpoint\"\nimport {buildMessageHandler} from \"./buildMessageHandler\"\n\nconst noop = () => {}\n\nexport function tab(service, opts = {}) {\n  if (service == null) return {send: noop, close: noop}\n\n  const onClose = opts.onClose || noop\n  const onMessage = opts.onMessage || noop\n  const onReady = opts.onReady || noop\n  const onResponse = opts.onResponse || noop\n\n  const handler = buildMessageHandler({\n    close,\n    send,\n    onReady,\n    onResponse,\n    onMessage,\n  })\n  window.addEventListener(\"message\", handler)\n\n  const [$tab, unmount] = renderTab(serviceEndpoint(service))\n  const timer = setInterval(function () {\n    if ($tab && $tab.closed) {\n      close()\n    }\n  }, 500)\n\n  return {send, close}\n\n  function close() {\n    try {\n      window.removeEventListener(\"message\", handler)\n      clearInterval(timer)\n      unmount()\n      onClose()\n    } catch (error) {\n      console.error(\"Tab Close Error\", error)\n    }\n  }\n\n  function send(msg) {\n    try {\n      $tab.postMessage(JSON.parse(JSON.stringify(msg || {})), \"*\")\n    } catch (error) {\n      console.error(\"Tab Send Error\", msg, error)\n    }\n  }\n}\n","import {uid} from \"@onflow/util-uid\"\nimport {tab} from \"./utils/tab\"\nimport {normalizePollingResponse} from \"../../../normalizers/service/polling-response\"\nimport {VERSION} from \"../../../VERSION\"\n\nexport function execTabRPC({service, body, config, opts}) {\n  return new Promise((resolve, reject) => {\n    const id = uid()\n    const {redir, includeOlderJsonRpcCall} = opts\n\n    tab(service, {\n      async onReady(_, {send}) {\n        try {\n          send({\n            fclVersion: VERSION,\n            type: \"FCL:VIEW:READY:RESPONSE\",\n            body,\n            service: {\n              params: service.params,\n              data: service.data,\n              type: service.type,\n            },\n            config,\n          })\n          send({\n            fclVersion: VERSION,\n            type: \"FCL:FRAME:READY:RESPONSE\",\n            body,\n            service: {\n              params: service.params,\n              data: service.data,\n              type: service.type,\n            },\n            config,\n            deprecated: {\n              message:\n                \"FCL:FRAME:READY:RESPONSE is deprecated and replaced with type: FCL:VIEW:READY:RESPONSE\",\n            },\n          })\n          if (includeOlderJsonRpcCall) {\n            send({\n              jsonrpc: \"2.0\",\n              id: id,\n              method: \"fcl:sign\",\n              params: [body, service.params],\n            })\n          }\n        } catch (error) {\n          throw error\n        }\n      },\n\n      onResponse(e, {close}) {\n        try {\n          if (typeof e.data !== \"object\") return\n          const resp = normalizePollingResponse(e.data)\n\n          switch (resp.status) {\n            case \"APPROVED\":\n              resolve(resp.data)\n              !redir && close()\n              break\n\n            case \"DECLINED\":\n              reject(`Declined: ${resp.reason || \"No reason supplied\"}`)\n              close()\n              break\n\n            case \"REDIRECT\":\n              resolve(resp)\n              close()\n              break\n\n            default:\n              reject(`Declined: No reason supplied`)\n              close()\n              break\n          }\n        } catch (error) {\n          console.error(\"execPopRPC onResponse error\", error)\n          throw error\n        }\n      },\n\n      onMessage(e, {close}) {\n        try {\n          if (typeof e.data !== \"object\") return\n          if (e.data.jsonrpc !== \"2.0\") return\n          if (e.data.id !== id) return\n          const resp = normalizePollingResponse(e.data.result)\n\n          switch (resp.status) {\n            case \"APPROVED\":\n              resolve(resp.data)\n              !redir && close()\n              break\n\n            case \"DECLINED\":\n              reject(`Declined: ${resp.reason || \"No reason supplied\"}`)\n              close()\n              break\n\n            case \"REDIRECT\":\n              resolve(resp)\n              close()\n              break\n\n            default:\n              reject(`Declined: No reason supplied`)\n              close()\n              break\n          }\n        } catch (error) {\n          console.error(\"execPopRPC onMessage error\", error)\n          throw error\n        }\n      },\n\n      onClose() {\n        reject(`Declined: Externally Halted`)\n      },\n    })\n  })\n}\n","import {buildMessageHandler} from \"./buildMessageHandler\"\n\nconst noop = () => {}\n\nexport function extension(service, opts = {}) {\n  if (service == null) return {send: noop, close: noop}\n\n  const onClose = opts.onClose || noop\n  const onMessage = opts.onMessage || noop\n  const onReady = opts.onReady || noop\n  const onResponse = opts.onResponse || noop\n\n  const handler = buildMessageHandler({\n    close,\n    send,\n    onReady,\n    onResponse,\n    onMessage,\n  })\n  window.addEventListener(\"message\", handler)\n\n  send({service})\n\n  return {send, close}\n\n  function close() {\n    try {\n      window.removeEventListener(\"message\", handler)\n      onClose()\n    } catch (error) {\n      console.error(\"Ext Close Error\", error)\n    }\n  }\n\n  function send(msg) {\n    try {\n      window && window.postMessage(JSON.parse(JSON.stringify(msg || {})), \"*\")\n    } catch (error) {\n      console.error(\"Ext Send Error\", msg, error)\n    }\n  }\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {extension} from \"./utils/extension\"\nimport {normalizePollingResponse} from \"../../../normalizers/service/polling-response\"\nimport {VERSION} from \"../../../VERSION\"\n\nexport function execExtRPC({service, body, config, opts}) {\n  return new Promise((resolve, reject) => {\n    extension(service, {\n      async onReady(_, {send}) {\n        try {\n          send({\n            fclVersion: VERSION,\n            type: \"FCL:VIEW:READY:RESPONSE\",\n            body,\n            service: {\n              params: service.params,\n              data: service.data,\n              type: service.type,\n            },\n            config,\n          })\n        } catch (error) {\n          throw error\n        }\n      },\n\n      onResponse(e, {close}) {\n        try {\n          if (typeof e.data !== \"object\") return\n          const resp = normalizePollingResponse(e.data)\n\n          switch (resp.status) {\n            case \"APPROVED\":\n              resolve(resp.data)\n              close()\n              break\n\n            case \"DECLINED\":\n              reject(`Declined: ${resp.reason || \"No reason supplied\"}`)\n              close()\n              break\n\n            case \"REDIRECT\":\n              resolve(resp)\n              close()\n              break\n\n            default:\n              reject(`Declined: No reason supplied`)\n              close()\n              break\n          }\n        } catch (error) {\n          console.error(\"execExtRPC onResponse error\", error)\n          throw error\n        }\n      },\n\n      onClose() {\n        reject(`Declined: Externally Halted`)\n      },\n    })\n  })\n}\n","import {execHttpPost} from \"./strategies/http-post\"\nimport {execIframeRPC} from \"./strategies/iframe-rpc\"\nimport {execPopRPC} from \"./strategies/pop-rpc\"\nimport {execTabRPC} from \"./strategies/tab-rpc\"\nimport {execExtRPC} from \"./strategies/ext-rpc\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport {LEVELS, log} from \"@onflow/util-logger\"\nimport {isRequired, isString, isObject, isFunc} from \"../../exec/utils/is\"\n\nconst CORE_STRATEGIES = {\n  \"HTTP/RPC\": execHttpPost,\n  \"HTTP/POST\": execHttpPost,\n  \"IFRAME/RPC\": execIframeRPC,\n  \"POP/RPC\": execPopRPC,\n  \"TAB/RPC\": execTabRPC,\n  \"EXT/RPC\": execExtRPC,\n}\n\nconst supportedPlugins = [\"ServicePlugin\"]\nconst supportedServicePlugins = [\"discovery-service\"]\n\nconst validateDiscoveryPlugin = servicePlugin => {\n  const {services, serviceStrategy} = servicePlugin\n  invariant(\n    Array.isArray(services) && services.length,\n    \"Array of Discovery Services is required\"\n  )\n\n  for (const ds of services) {\n    invariant(\n      isRequired(ds.f_type) && ds.f_type === \"Service\",\n      \"Service is required\"\n    )\n    invariant(\n      isRequired(ds.type) && ds.type === \"authn\",\n      `Service must be type authn. Received ${ds.type}`\n    )\n    invariant(\n      ds.method in CORE_STRATEGIES || serviceStrategy.method === ds.method,\n      `Service method ${ds.method} is not supported`\n    )\n  }\n\n  invariant(isRequired(serviceStrategy), \"Service strategy is required\")\n  invariant(\n    isRequired(serviceStrategy.method) && isString(serviceStrategy.method),\n    \"Service strategy method is required\"\n  )\n  invariant(\n    isRequired(serviceStrategy.exec) && isFunc(serviceStrategy.exec),\n    \"Service strategy exec function is required\"\n  )\n\n  return {discoveryServices: services, serviceStrategy}\n}\n\nconst ServiceRegistry = () => {\n  let services = new Set()\n  let strategies = new Map(Object.entries(CORE_STRATEGIES))\n\n  const add = servicePlugin => {\n    invariant(\n      supportedServicePlugins.includes(servicePlugin.type),\n      `Service Plugin type ${servicePlugin.type} is not supported`\n    )\n    if (servicePlugin.type === \"discovery-service\") {\n      const {discoveryServices, serviceStrategy} =\n        validateDiscoveryPlugin(servicePlugin)\n      setServices(discoveryServices)\n      if (!strategies.has(serviceStrategy.method)) {\n        strategies.set(serviceStrategy.method, serviceStrategy.exec)\n      } else {\n        log({\n          title: `Add Service Plugin`,\n          message: `Service strategy for ${serviceStrategy.method} already exists`,\n          level: LEVELS.warn,\n        })\n      }\n    }\n  }\n\n  const setServices = discoveryServices =>\n    (services = new Set([...discoveryServices]))\n\n  const getServices = () => [...services]\n\n  const getStrategy = method => strategies.get(method)\n\n  const getStrategies = () => [...strategies.keys()]\n\n  return Object.freeze({\n    add,\n    getServices,\n    getStrategy,\n    getStrategies,\n  })\n}\n\nconst validatePlugins = plugins => {\n  let pluginsArray\n  invariant(plugins, \"No plugins supplied\")\n\n  if (!Array.isArray(plugins)) {\n    pluginsArray = [plugins]\n  } else {\n    pluginsArray = [...plugins]\n  }\n  for (const p of pluginsArray) {\n    invariant(isRequired(p.name), \"Plugin name is required\")\n    invariant(isRequired(p.f_type), \"Plugin f_type is required\")\n    invariant(\n      supportedPlugins.includes(p.f_type),\n      `Plugin type ${p.f_type} is not supported`\n    )\n  }\n\n  return pluginsArray\n}\n\nconst PluginRegistry = () => {\n  const pluginsMap = new Map()\n\n  const getPlugins = () => pluginsMap\n\n  const add = plugins => {\n    const pluginsArray = validatePlugins(plugins)\n    for (const p of pluginsArray) {\n      pluginsMap.set(p.name, p)\n      if (p.f_type === \"ServicePlugin\") {\n        serviceRegistry.add(p)\n      }\n    }\n  }\n\n  return Object.freeze({\n    add,\n    getPlugins,\n  })\n}\n\nexport const serviceRegistry = ServiceRegistry()\nexport const pluginRegistry = PluginRegistry()\n","import {invariant} from \"@onflow/util-invariant\"\nimport {log, LEVELS} from \"@onflow/util-logger\"\nimport {serviceRegistry} from \"./plugins\"\nimport {getChainId} from \"../../utils\"\nimport {VERSION} from \"../../VERSION\"\nimport {configLens} from \"../../default-config\"\n\nconst execStrategy = async ({service, body, config, opts}) => {\n  const strategy = serviceRegistry.getStrategy(service.method)\n  return strategy({service, body, config, opts})\n}\n\nexport async function execService({service, msg = {}, config = {}, opts = {}}) {\n  msg.data = service.data\n  const execConfig = {\n    services: await configLens(/^service\\./),\n    app: await configLens(/^app\\.detail\\./),\n    client: {\n      ...config.client,\n      fclVersion: VERSION,\n      fclLibrary: \"https://github.com/onflow/fcl-js\",\n      hostname: window?.location?.hostname ?? null,\n      network: await getChainId(),\n    },\n  }\n\n  try {\n    const res = await execStrategy({\n      service,\n      body: msg,\n      config: execConfig,\n      opts,\n    })\n    if (res.status === \"REDIRECT\") {\n      invariant(\n        service.type === res.data.type,\n        \"Cannot shift recursive service type in execService\"\n      )\n      return await execService({\n        service: res.data,\n        msg,\n        config: execConfig,\n        opts,\n      })\n    } else {\n      return res\n    }\n  } catch (error) {\n    log({\n      title: `Error on execService ${service?.type}`,\n      message: error,\n      level: LEVELS.error,\n    })\n    throw error\n  }\n}\n","import {COMPOSITE_SIGNATURE_PRAGMA} from \"./__vsn\"\nimport {sansPrefix} from \"@onflow/util-address\"\n\n// {\n//    \"f_type\": \"CompositeSignature\",\n//    \"f_vsn\": \"1.0.0\",\n//    \"addr\": \"_____\",         // sans-prefix\n//    \"signature\": \"adfe1234\", // hex\n//    \"keyId\": 3,\n// }\nexport function normalizeCompositeSignature(resp) {\n  if (resp == null) return null\n\n  switch (resp[\"f_vsn\"]) {\n    case \"1.0.0\":\n      return resp\n\n    default:\n      return {\n        ...COMPOSITE_SIGNATURE_PRAGMA,\n        addr: sansPrefix(resp.addr || resp.address),\n        signature: resp.signature || resp.sig,\n        keyId: resp.keyId,\n      }\n  }\n}\n","import {config} from \"@onflow/config\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport {serviceRegistry} from \"../current-user/exec-service/plugins\"\n\nexport const makeDiscoveryServices = async () => {\n  const extensionServices = window?.fcl_extensions || []\n  return [...extensionServices, ...serviceRegistry.getServices()]\n}\n\nexport async function getDiscoveryService(service) {\n  const discoveryAuthnInclude = await config.get(\"discovery.authn.include\", [])\n  const discoveryWalletMethod = await config.first([\n    \"discovery.wallet.method\",\n    \"discovery.wallet.method.default\",\n  ])\n  const method = service?.method ? service.method : discoveryWalletMethod\n  const endpoint =\n    service?.endpoint ??\n    (await config.first([\"discovery.wallet\", \"challenge.handshake\"]))\n\n  invariant(\n    endpoint,\n    `\n    If no service is passed to \"authenticate,\" then \"discovery.wallet\" must be defined in fcl config.\n    See: \"https://docs.onflow.org/fcl/reference/api/#setting-configuration-values\"\n    `\n  )\n\n  return {\n    ...service,\n    type: \"authn\",\n    endpoint,\n    method,\n    discoveryAuthnInclude,\n  }\n}\n","import {config} from \"@onflow/config\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport {serviceRegistry} from \"../current-user/exec-service/plugins\"\nimport {getChainId} from \"../utils\"\nimport {VERSION} from \"../VERSION\"\nimport {makeDiscoveryServices} from \"./utils\"\n\nexport async function getServices({types}) {\n  const endpoint = await config.get(\"discovery.authn.endpoint\")\n  invariant(\n    Boolean(endpoint),\n    `\"discovery.authn.endpoint\" in config must be defined.`\n  )\n\n  const include = await config.get(\"discovery.authn.include\", [])\n  const url = new URL(endpoint)\n\n  return fetch(url, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({\n      type: types,\n      fclVersion: VERSION,\n      include,\n      clientServices: await makeDiscoveryServices(),\n      supportedStrategies: serviceRegistry.getStrategies(),\n      userAgent: window?.navigator?.userAgent,\n      network: await getChainId(),\n    }),\n  }).then(d => d.json())\n}\n","import {\n  spawn,\n  subscriber,\n  snapshoter,\n  INIT,\n  SUBSCRIBE,\n  UNSUBSCRIBE,\n  send,\n} from \"@onflow/util-actor\"\nimport {getServices} from \"../services\"\nimport {LEVELS, log} from \"@onflow/util-logger\"\n\nexport const SERVICE_ACTOR_KEYS = {\n  AUTHN: \"authn\",\n  RESULTS: \"results\",\n  SNAPSHOT: \"SNAPSHOT\",\n  UPDATED: \"UPDATED\",\n  UPDATE_RESULTS: \"UPDATE_RESULTS\",\n}\n\nconst warn = (fact, msg) => {\n  if (fact) {\n    console.warn(\n      `\n      %cFCL Warning\n      ============================\n      ${msg}\n      For more info, please see the docs: https://docs.onflow.org/fcl/\n      ============================\n      `,\n      \"font-weight:bold;font-family:monospace;\"\n    )\n  }\n}\n\nconst fetchServicesFromDiscovery = async () => {\n  try {\n    const services = await getServices({types: [SERVICE_ACTOR_KEYS.AUTHN]})\n    send(SERVICE_ACTOR_KEYS.AUTHN, SERVICE_ACTOR_KEYS.UPDATE_RESULTS, {\n      results: services,\n    })\n  } catch (error) {\n    log({\n      title: `${error.name} Error fetching Discovery API services.`,\n      message: error.message,\n      level: LEVELS.error,\n    })\n  }\n}\n\nconst HANDLERS = {\n  [INIT]: async ctx => {\n    warn(\n      typeof window === \"undefined\",\n      '\"fcl.discovery\" is only available in the browser.'\n    )\n    // If you call this before the window is loaded extensions will not be set yet\n    if (document.readyState === 'complete') {\n      fetchServicesFromDiscovery()\n    } else {\n      window.onload = async () => {\n        fetchServicesFromDiscovery()\n      }\n    }\n  },\n  [SERVICE_ACTOR_KEYS.UPDATE_RESULTS]: (ctx, _letter, data) => {\n    ctx.merge(data)\n    ctx.broadcast(SERVICE_ACTOR_KEYS.UPDATED, {...ctx.all()})\n  },\n  [SUBSCRIBE]: (ctx, letter) => {\n    ctx.subscribe(letter.from)\n    ctx.send(letter.from, SERVICE_ACTOR_KEYS.UPDATED, {...ctx.all()})\n  },\n  [UNSUBSCRIBE]: (ctx, letter) => ctx.unsubscribe(letter.from),\n  [SERVICE_ACTOR_KEYS.SNAPSHOT]: async (ctx, letter) =>\n    letter.reply({...ctx.all()}),\n}\n\nconst spawnProviders = () => spawn(HANDLERS, SERVICE_ACTOR_KEYS.AUTHN)\n\n/**\n * @typedef {import(\"@onflow/typedefs\").Service} Service\n */\n\n/**\n * @callback SubscriptionCallback\n * @returns {Service[]}\n */\n\n/**\n * @description\n * Discovery methods for interacting with Authn.\n * \n * @typedef {object} Authn\n * @property {Function} subscribe - Subscribe to Discovery authn services\n * @property {Function} snapshot - Get the current Discovery authn services spanshot\n * @property {Function} update - Trigger an update of authn services\n */\nconst authn = {\n  /**\n   * @description - Subscribe to Discovery authn services\n   * @param {Function} cb\n   * @returns {SubscriptionCallback}\n   */\n  subscribe: cb => subscriber(SERVICE_ACTOR_KEYS.AUTHN, spawnProviders, cb),\n  /**\n   * @description - Get the current Discovery authn services spanshot\n   * @returns {Service[]}\n   */\n  snapshot: () => snapshoter(SERVICE_ACTOR_KEYS.AUTHN, spawnProviders),\n  /**\n   * @description - Trigger an update of authn services\n   * @returns {void}\n   */\n  update: () => fetchServicesFromDiscovery(),\n}\n\nexport default authn\n","import authn from \"./services/authn\"\nexport {getDiscoveryService, makeDiscoveryServices} from \"./utils\"\n\nconst discovery = {\n  authn,\n}\n\nexport {discovery}\n","import \"../default-config\"\nimport * as t from \"@onflow/types\"\nimport {account, arg} from \"@onflow/sdk\"\nimport {config} from \"@onflow/config\"\nimport {spawn, send, INIT, SUBSCRIBE, UNSUBSCRIBE} from \"@onflow/util-actor\"\nimport {withPrefix, sansPrefix} from \"@onflow/util-address\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport {log, LEVELS} from \"@onflow/util-logger\"\nimport {buildUser} from \"./build-user\"\nimport {serviceOfType} from \"./service-of-type\"\nimport {execService} from \"./exec-service\"\nimport {normalizeCompositeSignature} from \"../normalizers/service/composite-signature\"\nimport {getDiscoveryService, makeDiscoveryServices} from \"../discovery\"\nimport {serviceRegistry} from \"./exec-service/plugins\"\nimport {isMobile} from \"../utils\"\n\n/**\n * @typedef {import(\"@onflow/typedefs\").CurrentUser} CurrentUser\n * @typedef {import(\"@onflow/typedefs\").CompositeSignature} CompositeSignature\n */\n\nexport const isFn = d => typeof d === \"function\"\n\nconst NAME = \"CURRENT_USER\"\nconst UPDATED = \"CURRENT_USER/UPDATED\"\nconst SNAPSHOT = \"SNAPSHOT\"\nconst SET_CURRENT_USER = \"SET_CURRENT_USER\"\nconst DEL_CURRENT_USER = \"DEL_CURRENT_USER\"\n\nconst DATA = `{\n  \"f_type\": \"User\",\n  \"f_vsn\": \"1.0.0\",\n  \"addr\":null,\n  \"cid\":null,\n  \"loggedIn\":null,\n  \"expiresAt\":null,\n  \"services\":[]\n}`\n\nconst getStoredUser = async storage => {\n  const fallback = JSON.parse(DATA)\n  const stored = await storage.get(NAME)\n  if (stored != null && fallback[\"f_vsn\"] !== stored[\"f_vsn\"]) {\n    storage.removeItem(NAME)\n    return fallback\n  }\n  return stored || fallback\n}\n\nconst HANDLERS = {\n  [INIT]: async ctx => {\n    if (typeof window === \"undefined\") {\n      console.warn(\n        `\n        %cFCL Warning\n        ============================\n        \"currentUser\" is only available in the browser.\n        For more info, please see the docs: https://docs.onflow.org/fcl/\n        ============================\n        `,\n        \"font-weight:bold;font-family:monospace;\"\n      )\n    }\n\n    ctx.merge(JSON.parse(DATA))\n    const storage = await config.first([\"fcl.storage\", \"fcl.storage.default\"])\n    if (storage.can) {\n      const user = await getStoredUser(storage)\n      if (notExpired(user)) ctx.merge(user)\n    }\n  },\n  [SUBSCRIBE]: (ctx, letter) => {\n    ctx.subscribe(letter.from)\n    ctx.send(letter.from, UPDATED, {...ctx.all()})\n  },\n  [UNSUBSCRIBE]: (ctx, letter) => {\n    ctx.unsubscribe(letter.from)\n  },\n  [SNAPSHOT]: async (ctx, letter) => {\n    letter.reply({...ctx.all()})\n  },\n  [SET_CURRENT_USER]: async (ctx, letter, data) => {\n    ctx.merge(data)\n    const storage = await config.first([\"fcl.storage\", \"fcl.storage.default\"])\n    if (storage.can) storage.put(NAME, ctx.all())\n    ctx.broadcast(UPDATED, {...ctx.all()})\n  },\n  [DEL_CURRENT_USER]: async (ctx, letter) => {\n    ctx.merge(JSON.parse(DATA))\n    const storage = await config.first([\"fcl.storage\", \"fcl.storage.default\"])\n    if (storage.can) storage.put(NAME, ctx.all())\n    ctx.broadcast(UPDATED, {...ctx.all()})\n  },\n}\n\nconst spawnCurrentUser = () => spawn(HANDLERS, NAME)\n\nfunction notExpired(user) {\n  return (\n    user.expiresAt == null ||\n    user.expiresAt === 0 ||\n    user.expiresAt > Date.now()\n  )\n}\n\nasync function getAccountProofData() {\n  let accountProofDataResolver = await config.get(\"fcl.accountProof.resolver\")\n  if (accountProofDataResolver == null) return\n  if (!isFn(accountProofDataResolver)) {\n    log({\n      title: \"Account Proof Data Resolver must be a function\",\n      message: `Check fcl.accountProof.resolver configuration.\n                Expected: fcl.accountProof.resolver: async () => { ... }\n                Received: fcl.accountProof.resolver: ${typeof accountProofDataResolver}\n                `,\n      level: LEVELS.warn,\n    })\n    return\n  }\n\n  const accountProofData = await accountProofDataResolver()\n  if (accountProofData == null) return\n\n  invariant(\n    typeof accountProofData.appIdentifier === \"string\",\n    \"appIdentifier must be a string\"\n  )\n  invariant(\n    /^[0-9a-f]+$/i.test(accountProofData.nonce),\n    \"Nonce must be a hex string\"\n  )\n\n  return accountProofData\n}\n\nconst makeConfig = async ({discoveryAuthnInclude}) => {\n  return {\n    client: {\n      discoveryAuthnInclude,\n      clientServices: await makeDiscoveryServices(),\n      supportedStrategies: serviceRegistry.getStrategies(),\n    },\n  }\n}\n\n/**\n * @description - Authenticate a user\n * @param {object} [opts] - Options\n * @param {object} [opts.service] - Optional service to use for authentication\n * @param {boolean} [opts.redir=false] - Optional flag to allow window to stay open after authentication\n * @returns {Promise<CurrentUser>} - User object\n */\nasync function authenticate({service, redir = false} = {}) {\n  if (\n    service &&\n    !service?.provider?.is_installed &&\n    service?.provider?.requires_install\n  ) {\n    window.location.href = service?.provider?.install_link\n    return\n  }\n\n  return new Promise(async (resolve, reject) => {\n    spawnCurrentUser()\n    const opts = {redir}\n    const user = await snapshot()\n    const discoveryService = await getDiscoveryService(service)\n    const refreshService = serviceOfType(user.services, \"authn-refresh\")\n    let accountProofData\n\n    if (user.loggedIn) {\n      if (refreshService) {\n        try {\n          const response = await execService({\n            service: refreshService,\n            msg: accountProofData,\n            opts,\n          })\n          send(NAME, SET_CURRENT_USER, await buildUser(response))\n        } catch (error) {\n          log({\n            title: `${error.name} Could not refresh wallet authentication.`,\n            message: error.message,\n            level: LEVELS.error,\n          })\n        } finally {\n          return resolve(await snapshot())\n        }\n      } else {\n        return resolve(user)\n      }\n    }\n\n    try {\n      accountProofData = await getAccountProofData()\n    } catch (error) {\n      log({\n        title: `${error.name} On Authentication: Could not resolve account proof data.`,\n        message: error.message,\n        level: LEVELS.error,\n      })\n      return reject(error)\n    }\n\n    try {\n      const response = await execService({\n        service: discoveryService,\n        msg: accountProofData,\n        config: await makeConfig(discoveryService),\n        opts,\n      })\n      send(NAME, SET_CURRENT_USER, await buildUser(response))\n    } catch (error) {\n      log({\n        title: `${error} On Authentication`,\n        message: error,\n        level: LEVELS.error,\n      })\n    } finally {\n      resolve(await snapshot())\n    }\n  })\n}\n\n/**\n * @description - Unauthenticate a user\n * @returns {void}\n */\nfunction unauthenticate() {\n  spawnCurrentUser()\n  send(NAME, DEL_CURRENT_USER)\n}\n\nconst normalizePreAuthzResponse = authz => ({\n  f_type: \"PreAuthzResponse\",\n  f_vsn: \"1.0.0\",\n  proposer: (authz || {}).proposer,\n  payer: (authz || {}).payer || [],\n  authorization: (authz || {}).authorization || [],\n})\n\nfunction resolvePreAuthz(authz) {\n  const resp = normalizePreAuthzResponse(authz)\n  const axs = []\n\n  if (resp.proposer != null) axs.push([\"PROPOSER\", resp.proposer])\n  for (let az of resp.payer || []) axs.push([\"PAYER\", az])\n  for (let az of resp.authorization || []) axs.push([\"AUTHORIZER\", az])\n\n  var result = axs.map(([role, az]) => ({\n    tempId: [az.identity.address, az.identity.keyId].join(\"|\"),\n    addr: az.identity.address,\n    keyId: az.identity.keyId,\n    signingFunction(signable) {\n      return execService({service: az, msg: signable})\n    },\n    role: {\n      proposer: role === \"PROPOSER\",\n      payer: role === \"PAYER\",\n      authorizer: role === \"AUTHORIZER\",\n    },\n  }))\n  return result\n}\n\n/**\n * @description\n * Produces the needed authorization details for the current user to submit transactions to Flow\n * It defines a signing function that connects to a user's wallet provider to produce signatures to submit transactions.\n * \n * @param {object} account - Account object\n * @returns {Promise<object>} - Account object with signing function\n */\nasync function authorization(account) {\n  spawnCurrentUser()\n\n  return {\n    ...account,\n    tempId: \"CURRENT_USER\",\n    async resolve(account, preSignable) {\n      const user = await authenticate({redir: true})\n      const authz = serviceOfType(user.services, \"authz\")\n      const preAuthz = serviceOfType(user.services, \"pre-authz\")\n\n      if (preAuthz)\n        return resolvePreAuthz(\n          await execService({\n            service: preAuthz,\n            msg: preSignable,\n          })\n        )\n      if (authz) {\n        let windowRef\n        if (isMobile() && authz.method === \"WC/RPC\") {\n          windowRef = window.open(\"\", \"_blank\")\n        }\n        return {\n          ...account,\n          tempId: \"CURRENT_USER\",\n          resolve: null,\n          addr: sansPrefix(authz.identity.address),\n          keyId: authz.identity.keyId,\n          sequenceNum: null,\n          signature: null,\n          async signingFunction(signable) {\n            return normalizeCompositeSignature(\n              await execService({\n                service: authz,\n                msg: signable,\n                opts: {\n                  includeOlderJsonRpcCall: true,\n                  windowRef,\n                },\n              })\n            )\n          },\n        }\n      }\n      throw new Error(\n        \"No Authz or PreAuthz Service configured for CURRENT_USER\"\n      )\n    },\n  }\n}\n\n/**\n * @description\n * The callback passed to subscribe will be called when the user authenticates and un-authenticates, making it easy to update the UI accordingly.\n * \n * @param {Function} callback - Callback function\n * @returns {Function} - Unsubscribe function\n */\nfunction subscribe(callback) {\n  spawnCurrentUser()\n  const EXIT = \"@EXIT\"\n  const self = spawn(async ctx => {\n    ctx.send(NAME, SUBSCRIBE)\n    while (1) {\n      const letter = await ctx.receive()\n      if (letter.tag === EXIT) {\n        ctx.send(NAME, UNSUBSCRIBE)\n        return\n      }\n      callback(letter.data)\n    }\n  })\n  return () => send(self, EXIT)\n}\n\n/**\n * @description - Gets the current user\n * @returns {Promise<CurrentUser>} - User object\n */\nfunction snapshot() {\n  spawnCurrentUser()\n  return send(NAME, SNAPSHOT, null, {expectReply: true, timeout: 0})\n}\n\nasync function info() {\n  spawnCurrentUser()\n  const {addr} = await snapshot()\n  if (addr == null) throw new Error(\"No Flow Address for Current User\")\n  return account(addr)\n}\n\n/**\n * @description - Resolves the current user as an argument\n * @returns {Promise<Function>}\n */\nasync function resolveArgument() {\n  const {addr} = await authenticate()\n  return arg(withPrefix(addr), t.Address)\n}\n\nconst makeSignable = msg => {\n  invariant(/^[0-9a-f]+$/i.test(msg), \"Message must be a hex string\")\n\n  return {\n    message: msg,\n  }\n}\n\n/**\n * @description - A method to use allowing the user to personally sign data via FCL Compatible Wallets/Services.\n * @param {string} msg - Message to sign\n * @returns {Promise<CompositeSignature[]>} - Array of CompositeSignatures\n */\nasync function signUserMessage(msg) {\n  spawnCurrentUser()\n  const user = await authenticate({redir: true})\n\n  const signingService = serviceOfType(user.services, \"user-signature\")\n\n  invariant(\n    signingService,\n    \"Current user must have authorized a signing service.\"\n  )\n\n  try {\n    const response = await execService({\n      service: signingService,\n      msg: makeSignable(msg),\n    })\n    if (Array.isArray(response)) {\n      return response.map(compSigs => normalizeCompositeSignature(compSigs))\n    } else {\n      return [normalizeCompositeSignature(response)]\n    }\n  } catch (error) {\n    return error\n  }\n}\n\nlet currentUser = () => {\n  return {\n    authenticate,\n    unauthenticate,\n    authorization,\n    signUserMessage,\n    subscribe,\n    snapshot,\n    resolveArgument,\n  }\n}\n\ncurrentUser.authenticate = authenticate\ncurrentUser.unauthenticate = unauthenticate\ncurrentUser.authorization = authorization\ncurrentUser.signUserMessage = signUserMessage\ncurrentUser.subscribe = subscribe\ncurrentUser.snapshot = snapshot\ncurrentUser.resolveArgument = resolveArgument\n\nexport {currentUser}\n","import * as sdk from \"@onflow/sdk\"\nimport {normalizeArgs} from \"./utils/normalize-args\"\nimport {currentUser} from \"../current-user\"\nimport {prepTemplateOpts} from \"./utils/prep-template-opts.js\"\nimport {preMutate} from \"./utils/pre.js\"\nimport {isNumber} from \"./utils/is\"\n\n/**\n * @description\n * Allows you to submit transactions to the blockchain to potentially mutate the state.\n *\n *  @param {object} opts - Mutation Options and configuration\n *  @param {string} opts.cadence - Cadence Transaction used to mutate Flow\n *  @param {import(\"../fcl\").ArgsFn} [opts.args] - Arguments passed to cadence transaction\n *  @param {object} [opts.template] - Interaction Template for a transaction\n *  @param {number} [opts.limit] - Compute Limit for transaction\n *  @returns {Promise<string>} Transaction Id\n *\n * @example\n *    fcl.mutate({\n *      cadence: `\n *        transaction(a: Int, b: Int, c: Address) {\n *          prepare(acct: AuthAccount) {\n *            log(acct)\n *            log(a)\n *            log(b)\n *            log(c)\n *          }\n *        }\n *      `,\n *      args: (arg, t) => [\n *        arg(6, t.Int),\n *        arg(7, t.Int),\n *        arg(\"0xba1132bc08f82fe2\", t.Address),\n *      ],\n *    })\n *\n *\n *  Options:\n *    type Options = {\n *      template: InteractionTemplate | String // InteractionTemplate or url to one\n *      cadence: String!,\n *      args: (arg, t) => Array<Arg>,\n *      limit: Number,\n *      authz: AuthzFn, // will overload the trinity of signatory roles\n *      proposer: AuthzFn, // will overload the proposer signatory role\n *      payer: AuthzFn, // will overload the payer signatory role\n *      authorizations: [AuthzFn], // an array of authorization functions used as authorizations signatory roles\n *    }\n */\nexport async function mutate(opts = {}) {\n  var txid\n  try {\n    await preMutate(opts)\n    opts = await prepTemplateOpts(opts)\n\n    // Allow for a config to overwrite the authorization function.\n    // prettier-ignore\n    const authz = await sdk.config().get(\"fcl.authz\", currentUser().authorization)\n\n    txid = sdk.config().overload(opts.dependencies || {}, async () =>\n      // prettier-ignore\n      sdk.send([\n        sdk.transaction(opts.cadence),\n\n        sdk.args(normalizeArgs(opts.args || [])),\n\n        opts.limit && isNumber(opts.limit) && sdk.limit(opts.limit),\n\n        // opts.proposer > opts.authz > authz\n        sdk.proposer(opts.proposer || opts.authz || authz),\n\n        // opts.payer > opts.authz > authz\n        sdk.payer(opts.payer || opts.authz || authz),\n\n        // opts.authorizations > [opts.authz > authz]\n        sdk.authorizations(opts.authorizations || [opts.authz || authz]),\n      ]).then(sdk.decode)\n    )\n\n    return txid\n  } catch (error) {\n    throw error\n  }\n}\n","/**\n * @description\n * Listens for messages from FCL\n * \n * @param {string} messageType - Message type\n * @param {Function} cb - Callback function\n * @returns {Function} - Function to remove event listener\n */\nexport const onMessageFromFCL = (messageType, cb = () => {}) => {\n  const buildData = data => {\n    if (data.deprecated)\n      console.warn(\"DEPRECATION NOTICE\", data.deprecated.message)\n    delete data?.body?.interaction\n\n    return data\n  }\n\n  const internal = e => {\n    const {data} = e\n    if (typeof data !== \"object\") return\n    if (typeof data == null) return\n    if (data.type !== messageType) return\n\n    cb(buildData(data))\n  }\n\n  window.addEventListener(\"message\", internal)\n  return () => window.removeEventListener(\"message\", internal)\n}\n","import {onMessageFromFCL} from \"./on-message-from-fcl\"\n\n/**\n * @description\n * Sends message to FCL window\n * \n * @param {string} type - Message type\n * @param {object} msg - Message object\n * @returns {void}\n * \n * @example\n * sendMsgToFCL(\"FCL:VIEW:RESPONSE\", {\n *    f_type: \"PollingResponse\",\n *    f_vsn: \"1.0.0\",\n *    status: \"APPROVED\",\n *    reason: null,\n *    data: data,\n *  })\n */\nexport const sendMsgToFCL = (type, msg = {}) => {\n  if (window.location !== window.parent.location) {\n    window.parent.postMessage({...msg, type}, \"*\")\n  } else if (window.opener) {\n    window.opener.postMessage({...msg, type}, \"*\")\n  } else {\n    throw new Error(\"Unable to communicate with parent FCL instance\")\n  }\n}\n\n/**\n * @description\n * Listens for \"FCL:VIEW:READY:RESPONSE\" and sends \"FCL:VIEW:READY\"\n * \n * @param {Function} cb - Callback function\n * @param {object} msg - Message object\n * @returns {void}\n */\nexport const ready = (cb, msg = {}) => {\n  onMessageFromFCL(\"FCL:VIEW:READY:RESPONSE\", cb)\n  sendMsgToFCL(\"FCL:VIEW:READY\")\n}\n\n/**\n * @description\n * Sends \"FCL:VIEW:CLOSE\"\n * \n * @returns {void}\n */\nexport const close = () => {\n  sendMsgToFCL(\"FCL:VIEW:CLOSE\")\n}\n\n/**\n * @description\n * Sends \"FCL:VIEW:RESPONSE\" with status \"APPROVED\"\n * \n * @param {object} data - Data object\n * @returns {void}\n */\nexport const approve = data => {\n  sendMsgToFCL(\"FCL:VIEW:RESPONSE\", {\n    f_type: \"PollingResponse\",\n    f_vsn: \"1.0.0\",\n    status: \"APPROVED\",\n    reason: null,\n    data: data,\n  })\n}\n\n/**\n * @description\n * Sends \"FCL:VIEW:RESPONSE\" with status \"DECLINED\"\n * \n * @param {string} reason - Reason for declining\n * @returns {void}\n */\nexport const decline = reason => {\n  sendMsgToFCL(\"FCL:VIEW:RESPONSE\", {\n    f_type: \"PollingResponse\",\n    f_vsn: \"1.0.0\",\n    status: \"DECLINED\",\n    reason: reason,\n    data: null,\n  })\n}\n\n/**\n * @description\n * Sends \"FCL:VIEW:RESPONSE\" with status \"REDIRECT\"\n * \n * @param {object} data - Data object\n * @returns {void}\n */\nexport const redirect = data => {\n  sendMsgToFCL(\"FCL:VIEW:RESPONSE\", {\n    f_type: \"PollingResponse\",\n    f_vsn: \"1.0.0\",\n    status: \"REDIRECT\",\n    reason: null,\n    data: data,\n  })\n}\n","import {withPrefix} from \"@onflow/util-address\"\nimport {COMPOSITE_SIGNATURE_PRAGMA} from \"../normalizers/service/__vsn\"\n\n/**\n * @description\n * Constructs a new CompositeSignature instance.\n *\n * @param {string} addr - Flow Address\n * @param {number} keyId - Key ID\n * @param {string} signature - Signature as a hex string\n */\nexport function CompositeSignature(addr, keyId, signature) {\n  this.f_type = COMPOSITE_SIGNATURE_PRAGMA.f_type\n  this.f_vsn = COMPOSITE_SIGNATURE_PRAGMA.f_vsn\n  this.addr = withPrefix(addr)\n  this.keyId = Number(keyId)\n  this.signature = signature\n}\n","import {sansPrefix} from \"@onflow/util-address\"\nimport {invariant} from \"@onflow/util-invariant\"\nimport {Buffer, encode as rlpEncode} from \"@onflow/rlp\"\n\nconst rightPaddedHexBuffer = (value, pad) =>\n  Buffer.from(value.padEnd(pad * 2, \"0\"), \"hex\")\n\nconst leftPaddedHexBuffer = (value, pad) =>\n  Buffer.from(value.padStart(pad * 2, \"0\"), \"hex\")\n\nconst addressBuffer = addr => leftPaddedHexBuffer(addr, 8)\n\nconst nonceBuffer = nonce => Buffer.from(nonce, \"hex\")\n\nexport const encodeAccountProof = (\n  {address, nonce, appIdentifier},\n  includeDomainTag = true\n) => {\n  invariant(\n    address,\n    \"Encode Message For Provable Authn Error: address must be defined\"\n  )\n  invariant(\n    nonce,\n    \"Encode Message For Provable Authn Error: nonce must be defined\"\n  )\n  invariant(\n    appIdentifier,\n    \"Encode Message For Provable Authn Error: appIdentifier must be defined\"\n  )\n\n  invariant(\n    nonce.length >= 64,\n    \"Encode Message For Provable Authn Error: nonce must be minimum of 32 bytes\"\n  )\n\n  const ACCOUNT_PROOF_DOMAIN_TAG = rightPaddedHexBuffer(\n    Buffer.from(\"FCL-ACCOUNT-PROOF-V0.0\").toString(\"hex\"),\n    32\n  )\n\n  if (includeDomainTag) {\n    return Buffer.concat([\n      ACCOUNT_PROOF_DOMAIN_TAG,\n      rlpEncode([\n        appIdentifier,\n        addressBuffer(sansPrefix(address)),\n        nonceBuffer(nonce),\n      ]),\n    ]).toString(\"hex\")\n  }\n\n  return rlpEncode([\n    appIdentifier,\n    addressBuffer(sansPrefix(address)),\n    nonceBuffer(nonce),\n  ]).toString(\"hex\")\n}\n","export function injectExtService(service) {\n  if (service.type === \"authn\" && service.endpoint != null) {\n    if (!Array.isArray(window.fcl_extensions)) {\n      window.fcl_extensions = []\n    }\n    window.fcl_extensions.push(service)\n  } else {\n    console.warn(\"Authn service is required\")\n  }\n}\n","import {invariant} from \"@onflow/util-invariant\"\nimport {withPrefix, sansPrefix} from \"@onflow/util-address\"\nimport {query} from \"../exec/query\"\nimport {encodeAccountProof} from \"../wallet-utils\"\nimport {isString} from \"../exec/utils/is\"\nimport {getChainId} from \"../utils\"\n\nconst ACCOUNT_PROOF = \"ACCOUNT_PROOF\"\nconst USER_SIGNATURE = \"USER_SIGNATURE\"\n\nexport const validateArgs = args => {\n  if (args.appIdentifier) {\n    const {appIdentifier, address, nonce, signatures} = args\n    invariant(\n      isString(appIdentifier),\n      \"verifyAccountProof({ appIdentifier }) -- appIdentifier must be a string\"\n    )\n    invariant(\n      isString(address) && sansPrefix(address).length === 16,\n      \"verifyAccountProof({ address }) -- address must be a valid address\"\n    )\n    invariant(/^[0-9a-f]+$/i.test(nonce), \"nonce must be a hex string\")\n    invariant(\n      Array.isArray(signatures) &&\n        signatures.every((sig, i, arr) => sig.f_type === \"CompositeSignature\"),\n      \"Must include an Array of CompositeSignatures to verify\"\n    )\n    invariant(\n      signatures.map(cs => cs.addr).every((addr, i, arr) => addr === arr[0]),\n      \"User signatures to be verified must be from a single account address\"\n    )\n    return true\n  } else {\n    const {message, address, compSigs} = args\n    invariant(\n      /^[0-9a-f]+$/i.test(message),\n      \"Signed message must be a hex string\"\n    )\n    invariant(\n      isString(address) && sansPrefix(address).length === 16,\n      \"verifyUserSignatures({ address }) -- address must be a valid address\"\n    )\n    invariant(\n      Array.isArray(compSigs) &&\n        compSigs.every((sig, i, arr) => sig.f_type === \"CompositeSignature\"),\n      \"Must include an Array of CompositeSignatures to verify\"\n    )\n    invariant(\n      compSigs.map(cs => cs.addr).every((addr, i, arr) => addr === arr[0]),\n      \"User signatures to be verified must be from a single account address\"\n    )\n    return true\n  }\n}\n\n// TODO: pass in option for contract but we're connected to testnet\n// log address + network -> in sync?\nconst getVerifySignaturesScript = async (sig, opts) => {\n  const verifyFunction =\n    sig === \"ACCOUNT_PROOF\"\n      ? \"verifyAccountProofSignatures\"\n      : \"verifyUserSignatures\"\n\n  let network = await getChainId()\n\n  let fclCryptoContract\n\n  invariant(\n    opts.fclCryptoContract || network === \"testnet\" || network === \"mainnet\",\n    \"${verifyFunction}({ fclCryptoContract }) -- config.flow.network must be specified (testnet || mainnet) or contract address provided via opts.fclCryptoContract\"\n  )\n\n  if (opts.fclCryptoContract) {\n    fclCryptoContract = opts.fclCryptoContract\n  } else {\n    fclCryptoContract =\n      network === \"testnet\" ? \"0x74daa6f9c7ef24b1\" : \"0xb4b82a1c9d21d284\"\n  }\n\n  return `\n      import FCLCrypto from ${fclCryptoContract}\n\n      pub fun main(\n          address: Address, \n          message: String, \n          keyIndices: [Int], \n          signatures: [String]\n      ): Bool {\n        return FCLCrypto.${verifyFunction}(address: address, message: message, keyIndices: keyIndices, signatures: signatures)\n      }\n    `\n}\n\n/**\n * @description\n * Verify a valid account proof signature or signatures for an account on Flow.\n *\n * @param {string} appIdentifier - A message string in hexadecimal format\n * @param {object} accountProofData - An object consisting of address, nonce, and signatures\n * @param {string} accountProofData.address - A Flow account address\n * @param {string} accountProofData.nonce - A random string in hexadecimal format (minimum 32 bytes in total, i.e 64 hex characters)\n * @param {object[]} accountProofData.signatures - An array of composite signatures to verify\n * @param {object} [opts={}] - Options object\n * @param {string} opts.fclCryptoContract - An optional override Flow account address where the FCLCrypto contract is deployed\n * @returns {Promise<boolean>} - Returns true if the signature is valid, false otherwise\n *\n * @example\n *\n *  const accountProofData = {\n *   address: \"0x123\",\n *   nonce: \"F0123\"\n *   signatures: [{f_type: \"CompositeSignature\", f_vsn: \"1.0.0\", addr: \"0x123\", keyId: 0, signature: \"abc123\"}],\n *  }\n *\n *  const isValid = await fcl.AppUtils.verifyAccountProof(\n *    \"AwesomeAppId\",\n *    accountProofData,\n *    {fclCryptoContract}\n *  )\n */\nexport async function verifyAccountProof(\n  appIdentifier,\n  {address, nonce, signatures},\n  opts = {}\n) {\n  validateArgs({appIdentifier, address, nonce, signatures})\n  const message = encodeAccountProof({address, nonce, appIdentifier}, false)\n\n  let signaturesArr = []\n  let keyIndices = []\n\n  for (const el of signatures) {\n    signaturesArr.push(el.signature)\n    keyIndices.push(el.keyId.toString())\n  }\n\n  return query({\n    cadence: await getVerifySignaturesScript(ACCOUNT_PROOF, opts),\n    args: (arg, t) => [\n      arg(withPrefix(address), t.Address),\n      arg(message, t.String),\n      arg(keyIndices, t.Array(t.Int)),\n      arg(signaturesArr, t.Array(t.String)),\n    ],\n  })\n}\n\n/**\n * @description\n * Verify a valid signature/s for an account on Flow.\n *\n * @param {string} message - A message string in hexadecimal format\n * @param {Array} compSigs - An array of Composite Signatures\n * @param {string} compSigs[].addr - The account address\n * @param {number} compSigs[].keyId - The account keyId\n * @param {string} compSigs[].signature - The signature to verify\n * @param {object} [opts={}] - Options object\n * @param {string} opts.fclCryptoContract - An optional override of Flow account address where the FCLCrypto contract is deployed\n * @returns {boolean} - Returns true if the signature is valid, false otherwise\n *\n * @example\n *\n *  const isValid = await fcl.AppUtils.verifyUserSignatures(\n *    Buffer.from('FOO').toString(\"hex\"),\n *    [{f_type: \"CompositeSignature\", f_vsn: \"1.0.0\", addr: \"0x123\", keyId: 0, signature: \"abc123\"}],\n *    {fclCryptoContract}\n *  )\n */\nexport async function verifyUserSignatures(message, compSigs, opts = {}) {\n  const address = withPrefix(compSigs[0].addr)\n  validateArgs({message, address, compSigs})\n\n  let signaturesArr = []\n  let keyIndices = []\n\n  for (const el of compSigs) {\n    signaturesArr.push(el.signature)\n    keyIndices.push(el.keyId.toString())\n  }\n\n  return query({\n    cadence: await getVerifySignaturesScript(USER_SIGNATURE, opts),\n    args: (arg, t) => [\n      arg(address, t.Address),\n      arg(message, t.String),\n      arg(keyIndices, t.Array(t.Int)),\n      arg(signaturesArr, t.Array(t.String)),\n    ],\n  })\n}\n","import {log} from \"@onflow/util-logger\"\nimport {verifyUserSignatures as verify} from \"../app-utils\"\n\n/**\n * Verify a valid signature/s for an account on Flow.\n *\n * @deprecated since version '1.0.0-alpha.0', use AppUtils.verifyUserSignatures instead\n *\n */\nexport const verifyUserSignatures = log.deprecate({\n  pkg: \"FCL\",\n  subject: \"fcl.verifyUserSignatures()\",\n  message: \"Please use fcl.AppUtils.verifyUserSignatures()\",\n  callback: function verifyUserSignatures(message, compSigs) {\n    return verify(message, compSigs)\n  },\n})\n","import {interaction, pipe} from \"@onflow/sdk\"\nimport {resolve as defaultResolve} from \"@onflow/sdk\"\nimport {config, createSignableVoucher} from \"@onflow/sdk\"\n\nexport const serialize = async (args = [], opts = {}) => {\n  const resolveFunction = await config.first(\n    [\"sdk.resolve\"],\n    opts.resolve || defaultResolve\n  )\n\n  if (Array.isArray(args)) args = await pipe(interaction(), args)\n\n  return JSON.stringify(\n    createSignableVoucher(await resolveFunction(args)),\n    null,\n    2\n  )\n}\n","import \"../default-config\"\nimport {\n  spawn,\n  send,\n  subscriber,\n  snapshoter,\n  UPDATED,\n  SNAPSHOT,\n  INIT,\n  SUBSCRIBE,\n  UNSUBSCRIBE,\n  ERROR,\n} from \"@onflow/util-actor\"\nimport {send as fclSend, decode, getTransactionStatus} from \"@onflow/sdk\"\n\n/**\n * @typedef {import(\"@onflow/typedefs\").Transaction} Transaction\n */\n\n/**\n * @typedef {import(\"@onflow/typedefs\").TransactionStatus} TransactionStatus\n */\n\nconst RATE = 2500\nconst POLL = \"POLL\"\n\nconst fetchTxStatus = async transactionId => {\n  return fclSend([getTransactionStatus(transactionId)]).then(decode)\n}\n\nconst isExpired = tx => tx.status === 5\nconst isSealed = tx => tx.status >= 4\nconst isExecuted = tx => tx.status >= 3\nconst isFinalized = tx => tx.status >= 2\nconst isPending = tx => tx.status >= 1\nconst isUnknown = tx => tx.status >= 0\n\nconst isDiff = (cur, next) => {\n  return JSON.stringify(cur) !== JSON.stringify(next)\n}\n\nconst HANDLERS = {\n  [INIT]: async ctx => {\n    ctx.sendSelf(POLL)\n  },\n  [SUBSCRIBE]: (ctx, letter) => {\n    ctx.subscribe(letter.from)\n    ctx.send(letter.from, UPDATED, ctx.all())\n  },\n  [UNSUBSCRIBE]: (ctx, letter) => {\n    ctx.unsubscribe(letter.from)\n  },\n  [SNAPSHOT]: async (ctx, letter) => {\n    letter.reply(ctx.all())\n  },\n  [POLL]: async ctx => {\n    let tx\n    try {\n      tx = await fetchTxStatus(ctx.self())\n    } catch (e) {\n      return ctx.fatalError(e)\n    }\n\n    if (!isSealed(tx)) setTimeout(() => ctx.sendSelf(POLL), RATE)\n    if (isDiff(ctx.all(), tx)) ctx.broadcast(UPDATED, tx)\n    ctx.merge(tx)\n  },\n}\n\nconst scoped = transactionId => {\n  if (typeof transactionId === \"object\")\n    transactionId = transactionId.transactionId\n  if (transactionId == null) throw new Error(\"transactionId required\")\n  return transactionId\n}\n\nconst spawnTransaction = transactionId => {\n  return spawn(HANDLERS, scoped(transactionId))\n}\n\n/**\n * @callback SubscriptionCallback\n * @param {TransactionStatus} txStatus\n * @returns {void}\n */\n\n/**\n * Provides methods for interacting with a transaction\n * \n * @param {string} transactionId - The transaction ID\n * @returns {{\n *    snapshot: function(): Promise<TransactionStatus>,\n *    subscribe: function(SubscriptionCallback): function(): void,\n *    onceFinalized: function(): Promise<TransactionStatus>,\n *    onceExecuted: function(): Promise<TransactionStatus>,\n *    onceSealed: function(): Promise<TransactionStatus>\n * }}\n */\nexport function transaction(transactionId) {\n  function snapshot() {\n    return snapshoter(transactionId, spawnTransaction)\n  }\n\n  function subscribe(callback) {\n    return subscriber(scoped(transactionId), spawnTransaction, callback)\n  }\n\n  function once(predicate) {\n    return function innerOnce(opts = {}) {\n      const suppress = opts.suppress || false\n      return new Promise((resolve, reject) => {\n        const unsub = subscribe((txStatus, error) => {\n          if ((error || txStatus.statusCode) && !suppress) {\n            reject(error || txStatus.errorMessage)\n            unsub()\n          } else if (predicate(txStatus)) {\n            resolve(txStatus)\n            unsub()\n          }\n        })\n      })\n    }\n  }\n\n  return {\n    snapshot,\n    subscribe,\n    onceFinalized: once(isFinalized),\n    onceExecuted: once(isExecuted),\n    onceSealed: once(isSealed),\n  }\n}\n\ntransaction.isUnknown = isUnknown\ntransaction.isPending = isPending\ntransaction.isFinalized = isFinalized\ntransaction.isExecuted = isExecuted\ntransaction.isSealed = isSealed\ntransaction.isExpired = isExpired\n","import {spawn, subscriber, SUBSCRIBE, UNSUBSCRIBE} from \"@onflow/util-actor\"\nimport {\n  config,\n  block,\n  getEventsAtBlockHeightRange,\n  send,\n  decode,\n} from \"@onflow/sdk\"\n\nconst RATE = 10000\nconst UPDATED = \"UPDATED\"\nconst TICK = \"TICK\"\nconst HIGH_WATER_MARK = \"hwm\"\n\nconst scheduleTick = async ctx => {\n  return setTimeout(\n    () => ctx.sendSelf(TICK),\n    await config().get(\"fcl.eventPollRate\", RATE)\n  )\n}\n\nconst HANDLERS = {\n  [TICK]: async ctx => {\n    if (!ctx.hasSubs()) return\n    let hwm = ctx.get(HIGH_WATER_MARK)\n    if (hwm == null) {\n      ctx.put(HIGH_WATER_MARK, await block())\n      ctx.put(TICK, await scheduleTick(ctx))\n    } else {\n      let next = await block()\n      ctx.put(HIGH_WATER_MARK, next)\n      if (hwm.height < next.height) {\n        const data = await send([\n          getEventsAtBlockHeightRange(ctx.self(), hwm.height + 1, next.height),\n        ]).then(decode)\n        for (let d of data) ctx.broadcast(UPDATED, d.data)\n      }\n      ctx.put(TICK, await scheduleTick(ctx))\n    }\n  },\n  [SUBSCRIBE]: async (ctx, letter) => {\n    if (!ctx.hasSubs()) {\n      ctx.put(TICK, await scheduleTick(ctx))\n    }\n    ctx.subscribe(letter.from)\n  },\n  [UNSUBSCRIBE]: (ctx, letter) => {\n    ctx.unsubscribe(letter.from)\n    if (!ctx.hasSubs()) {\n      clearTimeout(ctx.get(TICK))\n      ctx.delete(TICK)\n      ctx.delete(HIGH_WATER_MARK)\n    }\n  },\n}\n\nconst spawnEvents = key => spawn(HANDLERS, key)\n\n/**\n * @typedef {import(\"@onflow/typedefs\").Event} Event\n */\n\n/**\n * @typedef {object} SubscribeObject\n * @property {Function} subscribe - The subscribe function.\n */\n\n/**\n * @callback SubscriptionCallback\n * @returns {Event}\n */\n\n/**\n * @description - Subscribe to events\n * @param {string} key - A valid event name\n * @returns {SubscribeObject}\n * \n * @example\n * import * as fcl from \"@onflow/fcl\"\n * fcl.events(eventName).subscribe((event) => console.log(event))\n */\nexport function events(key) {\n  return {\n    /**\n     * @description - Subscribe to events\n     * @param {Function} callback - The callback function\n     * @returns {SubscriptionCallback}\n     */\n    subscribe: callback => subscriber(key, spawnEvents, callback),\n  }\n}\n","\"use strict\";var copy=function copy(I,i){return function(O,o){var oi=o*2;var ii=i*2;O[oi]=I[ii];O[oi+1]=I[ii+1]}};module.exports=copy;","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports[\"default\"]=void 0;var _copy=_interopRequireDefault(require(\"../copy\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{\"default\":obj}}var chi=function chi(_ref){var A=_ref.A,C=_ref.C;for(var y=0;y<25;y+=5){for(var x=0;x<5;x++){(0,_copy[\"default\"])(A,y+x)(C,x)}for(var _x=0;_x<5;_x++){var xy=(y+_x)*2;var x1=(_x+1)%5*2;var x2=(_x+2)%5*2;A[xy]^=~C[x1]&C[x2];A[xy+1]^=~C[x1+1]&C[x2+1]}}};var _default=chi;exports[\"default\"]=_default;","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports[\"default\"]=void 0;var ROUND_CONSTANTS=new Uint32Array([0,1,0,32898,2147483648,32906,2147483648,2147516416,0,32907,0,2147483649,2147483648,2147516545,2147483648,32777,0,138,0,136,0,2147516425,0,2147483658,0,2147516555,2147483648,139,2147483648,32905,2147483648,32771,2147483648,32770,2147483648,128,0,32778,2147483648,2147483658,2147483648,2147516545,2147483648,32896,0,2147483649,2147483648,2147516424]);var _default=ROUND_CONSTANTS;exports[\"default\"]=_default;","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports[\"default\"]=void 0;var _roundConstants=_interopRequireDefault(require(\"./round-constants\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{\"default\":obj}}var iota=function iota(_ref){var A=_ref.A,roundIndex=_ref.roundIndex;var i=roundIndex*2;A[0]^=_roundConstants[\"default\"][i];A[1]^=_roundConstants[\"default\"][i+1]};var _default=iota;exports[\"default\"]=_default;","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports[\"default\"]=void 0;var PI_SHUFFLES=[10,7,11,17,18,3,5,16,8,21,24,4,15,23,19,13,12,2,20,14,22,9,6,1];var _default=PI_SHUFFLES;exports[\"default\"]=_default;","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports[\"default\"]=void 0;var RHO_OFFSETS=[1,3,6,10,15,21,28,36,45,55,2,14,27,41,56,8,25,43,62,18,39,61,20,44];var _default=RHO_OFFSETS;exports[\"default\"]=_default;","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports[\"default\"]=void 0;var _piShuffles=_interopRequireDefault(require(\"./pi-shuffles\"));var _rhoOffsets=_interopRequireDefault(require(\"./rho-offsets\"));var _copy=_interopRequireDefault(require(\"../copy\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{\"default\":obj}}var rhoPi=function rhoPi(_ref){var A=_ref.A,C=_ref.C,W=_ref.W;(0,_copy[\"default\"])(A,1)(W,0);var H=0;var L=0;var Wi=0;var ri=32;for(var i=0;i<24;i++){var j=_piShuffles[\"default\"][i];var r=_rhoOffsets[\"default\"][i];(0,_copy[\"default\"])(A,j)(C,0);H=W[0];L=W[1];ri=32-r;Wi=r<32?0:1;W[Wi]=H<<r|L>>>ri;W[(Wi+1)%2]=L<<r|H>>>ri;(0,_copy[\"default\"])(W,0)(A,j);(0,_copy[\"default\"])(C,0)(W,0)}};var _default=rhoPi;exports[\"default\"]=_default;","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports[\"default\"]=void 0;var _copy=_interopRequireDefault(require(\"../copy\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{\"default\":obj}}var theta=function theta(_ref){var A=_ref.A,C=_ref.C,D=_ref.D,W=_ref.W;var H=0;var L=0;for(var x=0;x<5;x++){var x20=x*2;var x21=(x+5)*2;var x22=(x+10)*2;var x23=(x+15)*2;var x24=(x+20)*2;C[x20]=A[x20]^A[x21]^A[x22]^A[x23]^A[x24];C[x20+1]=A[x20+1]^A[x21+1]^A[x22+1]^A[x23+1]^A[x24+1]}for(var _x=0;_x<5;_x++){(0,_copy[\"default\"])(C,(_x+1)%5)(W,0);H=W[0];L=W[1];W[0]=H<<1|L>>>31;W[1]=L<<1|H>>>31;D[_x*2]=C[(_x+4)%5*2]^W[0];D[_x*2+1]=C[(_x+4)%5*2+1]^W[1];for(var y=0;y<25;y+=5){A[(y+_x)*2]^=D[_x*2];A[(y+_x)*2+1]^=D[_x*2+1]}}};var _default=theta;exports[\"default\"]=_default;","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports[\"default\"]=void 0;var _chi=_interopRequireDefault(require(\"./chi\"));var _iota=_interopRequireDefault(require(\"./iota\"));var _rhoPi=_interopRequireDefault(require(\"./rho-pi\"));var _theta=_interopRequireDefault(require(\"./theta\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{\"default\":obj}}var permute=function permute(){var C=new Uint32Array(10);var D=new Uint32Array(10);var W=new Uint32Array(2);return function(A){for(var roundIndex=0;roundIndex<24;roundIndex++){(0,_theta[\"default\"])({A:A,C:C,D:D,W:W});(0,_rhoPi[\"default\"])({A:A,C:C,W:W});(0,_chi[\"default\"])({A:A,C:C});(0,_iota[\"default\"])({A:A,roundIndex:roundIndex})}C.fill(0);D.fill(0);W.fill(0)}};var _default=permute;exports[\"default\"]=_default;","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports[\"default\"]=void 0;var _buffer=require(\"buffer\");var _permute=_interopRequireDefault(require(\"./permute\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{\"default\":obj}}var xorWords=function xorWords(I,O){for(var i=0;i<I.length;i+=8){var o=i/4;O[o]^=I[i+7]<<24|I[i+6]<<16|I[i+5]<<8|I[i+4];O[o+1]^=I[i+3]<<24|I[i+2]<<16|I[i+1]<<8|I[i]}return O};var readWords=function readWords(I,O){for(var o=0;o<O.length;o+=8){var i=o/4;O[o]=I[i+1];O[o+1]=I[i+1]>>>8;O[o+2]=I[i+1]>>>16;O[o+3]=I[i+1]>>>24;O[o+4]=I[i];O[o+5]=I[i]>>>8;O[o+6]=I[i]>>>16;O[o+7]=I[i]>>>24}return O};var Sponge=function Sponge(_ref){var _this=this;var capacity=_ref.capacity,padding=_ref.padding;var keccak=(0,_permute[\"default\"])();var stateSize=200;var blockSize=capacity/8;var queueSize=stateSize-capacity/4;var queueOffset=0;var state=new Uint32Array(stateSize/4);var queue=_buffer.Buffer.allocUnsafe(queueSize);this.absorb=function(buffer){for(var i=0;i<buffer.length;i++){queue[queueOffset]=buffer[i];queueOffset+=1;if(queueOffset>=queueSize){xorWords(queue,state);keccak(state);queueOffset=0}}return _this};this.squeeze=function(){var options=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};var output={buffer:options.buffer||_buffer.Buffer.allocUnsafe(blockSize),padding:options.padding||padding,queue:_buffer.Buffer.allocUnsafe(queue.length),state:new Uint32Array(state.length)};queue.copy(output.queue);for(var i=0;i<state.length;i++){output.state[i]=state[i]}output.queue.fill(0,queueOffset);output.queue[queueOffset]|=output.padding;output.queue[queueSize-1]|=128;xorWords(output.queue,output.state);for(var offset=0;offset<output.buffer.length;offset+=queueSize){keccak(output.state);readWords(output.state,output.buffer.slice(offset,offset+queueSize))}return output.buffer};this.reset=function(){queue.fill(0);state.fill(0);queueOffset=0;return _this};return this};var _default=Sponge;exports[\"default\"]=_default;","\"use strict\";Object.defineProperty(exports,\"__esModule\",{value:true});exports[\"default\"]=exports.SHAKE=exports.SHA3Hash=exports.SHA3=exports.Keccak=void 0;var _buffer=require(\"buffer\");var _sponge=_interopRequireDefault(require(\"./sponge\"));function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{\"default\":obj}}var createHash=function createHash(_ref){var allowedSizes=_ref.allowedSizes,defaultSize=_ref.defaultSize,padding=_ref.padding;return function Hash(){var _this=this;var size=arguments.length>0&&arguments[0]!==undefined?arguments[0]:defaultSize;if(!this||this.constructor!==Hash){return new Hash(size)}if(allowedSizes&&!allowedSizes.includes(size)){throw new Error(\"Unsupported hash length\")}var sponge=new _sponge[\"default\"]({capacity:size});this.update=function(input){var encoding=arguments.length>1&&arguments[1]!==undefined?arguments[1]:\"utf8\";if(_buffer.Buffer.isBuffer(input)){sponge.absorb(input);return _this}if(typeof input===\"string\"){return _this.update(_buffer.Buffer.from(input,encoding))}throw new TypeError(\"Not a string or buffer\")};this.digest=function(){var formatOrOptions=arguments.length>0&&arguments[0]!==undefined?arguments[0]:\"binary\";var options=typeof formatOrOptions===\"string\"?{format:formatOrOptions}:formatOrOptions;var buffer=sponge.squeeze({buffer:options.buffer,padding:options.padding||padding});if(options.format&&options.format!==\"binary\"){return buffer.toString(options.format)}return buffer};this.reset=function(){sponge.reset();return _this};return this}};var Keccak=createHash({allowedSizes:[224,256,384,512],defaultSize:512,padding:1});exports.Keccak=Keccak;var SHA3=createHash({allowedSizes:[224,256,384,512],defaultSize:512,padding:6});exports.SHA3=SHA3;var SHAKE=createHash({allowedSizes:[128,256],defaultSize:256,padding:31});exports.SHAKE=SHAKE;var SHA3Hash=Keccak;exports.SHA3Hash=SHA3Hash;SHA3.SHA3Hash=SHA3Hash;var _default=SHA3;exports[\"default\"]=_default;","import {SHA3} from \"sha3\"\nimport {Buffer} from \"@onflow/rlp\"\n\nexport async function genHash(utf8String) {\n  const sha = new SHA3(256)\n  sha.update(Buffer.from(utf8String, \"utf8\"))\n  return sha.digest(\"hex\")\n}\n","import {invariant} from \"@onflow/sdk\"\nimport {encode as rlpEncode} from \"@onflow/rlp\"\nimport {genHash} from \"./utils/hash.js\"\nimport {normalizeInteractionTemplate} from \"../normalizers/interaction-template/interaction-template.js\"\n\n/**\n * @description Generates Interaction Template ID for a given Interaction Template\n *  \n * @param {object} params\n * @param {object} params.template - Interaction Template\n * @returns {Promise<string>} - Interaction Template ID\n */\nexport async function generateTemplateId({template}) {\n  invariant(\n    template != undefined,\n    \"generateTemplateId({ template }) -- template must be defined\"\n  )\n  invariant(\n    typeof template === \"object\",\n    \"generateTemplateId({ template }) -- template must be an object\"\n  )\n  invariant(\n    typeof template.f_type === \"InteractionTemplate\",\n    \"generateTemplateId({ template }) -- template object must be an InteractionTemplate\"\n  )\n\n  template = normalizeInteractionTemplate(template)\n\n  switch (template.f_version) {\n    case \"1.0.0\":\n      const templateData = template.data\n\n      const messages = await Promise.all(\n        Object.keys(templateData.messages).map(async messageKey => [\n          await genHash(messageKey),\n          await Promise.all(\n            Object.keys(templateData.messages?.[messageKey]?.i18n).map(\n              async i18nkeylanguage => [\n                await genHash(i18nkeylanguage),\n                await genHash(\n                  templateData.messages?.[messageKey]?.i18n?.[i18nkeylanguage]\n                ),\n              ]\n            )\n          ),\n        ])\n      )\n\n      const dependencies = await Promise.all(\n        Object.keys(templateData?.dependencies).map(\n          async dependencyAddressPlaceholder => [\n            await genHash(dependencyAddressPlaceholder),\n            await Promise.all(\n              Object.keys(\n                templateData?.dependencies?.[dependencyAddressPlaceholder]\n              ).map(async dependencyContract => [\n                await genHash(dependencyContract),\n                await Promise.all(\n                  Object.keys(\n                    templateData?.dependencies?.[\n                      dependencyAddressPlaceholder\n                    ]?.[dependencyContract]\n                  ).map(async dependencyContractNetwork => [\n                    await genHash(dependencyContractNetwork),\n                    [\n                      await genHash(\n                        templateData?.dependencies?.[\n                          dependencyAddressPlaceholder\n                        ]?.[dependencyContract]?.[dependencyContractNetwork]\n                          .address\n                      ),\n                      await genHash(\n                        templateData?.dependencies?.[\n                          dependencyAddressPlaceholder\n                        ]?.[dependencyContract]?.[dependencyContractNetwork]\n                          .contract\n                      ),\n                      await genHash(\n                        templateData?.dependencies?.[\n                          dependencyAddressPlaceholder\n                        ]?.[dependencyContract]?.[dependencyContractNetwork]\n                          .fq_address\n                      ),\n                      await genHash(\n                        templateData?.dependencies?.[\n                          dependencyAddressPlaceholder\n                        ]?.[dependencyContract]?.[dependencyContractNetwork].pin\n                      ),\n                      await genHash(\n                        String(\n                          templateData?.dependencies?.[\n                            dependencyAddressPlaceholder\n                          ]?.[dependencyContract]?.[dependencyContractNetwork]\n                            .pin_block_height\n                        )\n                      ),\n                    ],\n                  ])\n                ),\n              ])\n            ),\n          ]\n        )\n      )\n\n      const _arguments = await Promise.all(\n        Object.keys(templateData?.[\"arguments\"]).map(async argumentLabel => [\n          await genHash(argumentLabel),\n          [\n            await genHash(\n              String(templateData?.[\"arguments\"]?.[argumentLabel].index)\n            ),\n            await genHash(templateData?.[\"arguments\"]?.[argumentLabel].type),\n            await genHash(\n              templateData?.[\"arguments\"]?.[argumentLabel].balance || \"\"\n            ),\n            await Promise.all(\n              Object.keys(\n                templateData?.[\"arguments\"]?.[argumentLabel].messages\n              ).map(async argumentMessageKey => [\n                await genHash(argumentMessageKey),\n                await Promise.all(\n                  Object.keys(\n                    templateData?.[\"arguments\"]?.[argumentLabel].messages?.[\n                      argumentMessageKey\n                    ].i18n\n                  ).map(async i18nkeylanguage => [\n                    await genHash(i18nkeylanguage),\n                    await genHash(\n                      templateData?.[\"arguments\"]?.[argumentLabel].messages?.[\n                        argumentMessageKey\n                      ].i18n?.[i18nkeylanguage]\n                    ),\n                  ])\n                ),\n              ])\n            ),\n          ],\n        ])\n      )\n\n      const encodedHex = rlpEncode([\n        await genHash(\"InteractionTemplate\"),\n        await genHash(\"1.0.0\"),\n        await genHash(templateData?.type),\n        await genHash(templateData?.interface),\n        messages,\n        await genHash(templateData?.cadence),\n        dependencies,\n        _arguments,\n      ]).toString(\"hex\")\n\n      return genHash(encodedHex)\n\n    default:\n      throw new Error(\"generateTemplateId Error: Unsupported template version\")\n  }\n}\n","import {config, invariant} from \"@onflow/sdk\"\nimport {log, LEVELS} from \"@onflow/util-logger\"\nimport {query} from \"../exec/query.js\"\nimport {generateTemplateId} from \"./generate-template-id.js\"\nimport {normalizeInteractionTemplate} from \"../normalizers/interaction-template/interaction-template.js\"\nimport {getChainId} from \"../utils\"\n\n/**\n * @description Returns whether a set of auditors have audited a given Interaction Template\n * \n * @param {object} params\n * @param {object} params.template - Interaction Template\n * @param {Array<string>} params.auditors - Array of auditors\n * @param {object} opts\n * @param {string} opts.flowInteractionAuditContract - Flow Interaction Template Audit contract address\n * @returns {Promise<object>} - Object of auditor addresses and audit status\n */\nexport async function getInteractionTemplateAudits(\n  {template, auditors},\n  opts = {}\n) {\n  invariant(\n    template != undefined,\n    \"getInteractionTemplateAudits({ template }) -- template must be defined\"\n  )\n\n  template = normalizeInteractionTemplate(template)\n\n  invariant(\n    template.f_type === \"InteractionTemplate\",\n    \"getInteractionTemplateAudits({ template }) -- template must be an InteractionTemplate\"\n  )\n\n  // Recompute ID to be sure it matches\n  let recomputedTemplateID = await generateTemplateId({template})\n\n  if (recomputedTemplateID !== template.id) {\n    log({\n      title: \"getInteractionTemplateAudits Debug Error\",\n      message: `Could not recompute and match template ID\n                computed: ${recomputedTemplateID}\n                template: ${template.id}\n            `,\n      level: LEVELS.debug,\n    })\n    throw new Error(\n      \"getInteractionTemplateAudits Error: Could not recompute and match template ID\"\n    )\n  }\n\n  switch (template.f_version) {\n    case \"1.0.0\":\n      const _auditors = auditors || (await config().get(\"flow.auditors\"))\n\n      invariant(\n        _auditors,\n        \"getInteractionTemplateAudits Error: Required configuration for 'fcl.auditors' is not set\"\n      )\n      invariant(\n        Array.isArray(_auditors),\n        \"getInteractionTemplateAudits Error: Required configuration for 'fcl.auditors' is not an array\"\n      )\n\n      let FlowInteractionAuditContract = opts.flowInteractionAuditContract\n      if (!FlowInteractionAuditContract) {\n        const fclNetwork = await getChainId()\n        invariant(\n          fclNetwork === \"mainnet\" || fclNetwork === \"testnet\",\n          \"getInteractionTemplateAudits Error: Unable to determine address for FlowInteractionTemplateAudit contract. Set configuration for 'fcl.network' to 'mainnet' or 'testnet'\"\n        )\n        if (fclNetwork === \"mainnet\") {\n          FlowInteractionAuditContract = \"0xfd100e39d50a13e6\"\n        } else {\n          FlowInteractionAuditContract = \"0xf78bfc12d0a786dc\"\n        }\n      }\n\n      const audits = await query({\n        cadence: `\n        import FlowInteractionTemplateAudit from ${FlowInteractionAuditContract}\n        pub fun main(templateId: String, auditors: [Address]): {Address:Bool} {\n          return FlowInteractionTemplateAudit.getHasTemplateBeenAuditedByAuditors(templateId: templateId, auditors: auditors)\n        }\n        `,\n        args: (arg, t) => [\n          arg(recomputedTemplateID, t.String),\n          arg(_auditors, t.Array(t.Address)),\n        ],\n      })\n\n      return audits\n\n    default:\n      throw new Error(\n        \"getInteractionTemplateAudits Error: Unsupported template version\"\n      )\n  }\n}\n","export function generateImport({contractName, address}) {\n  return {contractName, address, contract: \"\"}\n}\n","import {generateImport} from \"./generate-import.js\"\n\nexport function findImports(cadence) {\n  let imports = []\n\n  let importsReg = /import ((\\w|,| )+)* from 0x\\w+/g\n  let fileImports = cadence.match(importsReg) || []\n\n  for (const fileImport of fileImports) {\n    const importLineReg = /import ((\\w+|, |)*) from (0x\\w+)/g\n    const importLine = importLineReg.exec(fileImport)\n\n    const contractsReg = /((?:\\w+)+),?/g\n    const contracts = importLine[1].match(contractsReg) || []\n\n    for (const contract of contracts) {\n      imports.push(\n        generateImport({\n          address: importLine[3],\n          contractName: contract.replace(/,/g, \"\"),\n        })\n      )\n    }\n  }\n\n  return imports\n}\n","import {\n  invariant,\n  block,\n  send,\n  getAccount,\n  atBlockHeight,\n  config,\n  decode,\n} from \"@onflow/sdk\"\nimport {genHash} from \"./utils/hash.js\"\nimport {findImports} from \"./utils/find-imports.js\"\nimport {generateImport} from \"./utils/generate-import.js\"\n\n/**\n * @description Produces a dependency pin for a contract at a given block height\n * @param {object} params\n * @param {string} params.address - The address of the account containing the contract\n * @param {string} params.contractName - The name of the contract\n * @param {number} params.blockHeight - The block height to produce the dependency pin for\n * @param {object} opts - Options to pass to the interaction\n * @returns {Promise<string>} - The dependency pin\n */\nexport async function generateDependencyPin(\n  {address, contractName, blockHeight},\n  opts = {}\n) {\n  invariant(\n    address != undefined,\n    \"generateDependencyPin({ address }) -- address must be defined\"\n  )\n  invariant(\n    contractName != undefined,\n    \"generateDependencyPin({ contractName }) -- contractName must be defined\"\n  )\n  invariant(\n    blockHeight != undefined,\n    \"generateDependencyPin({ blockHeight }) -- blockHeight must be defined\"\n  )\n  invariant(\n    typeof address === \"string\",\n    \"generateDependencyPin({ address }) -- address must be a string\"\n  )\n  invariant(\n    typeof contractName === \"string\",\n    \"generateDependencyPin({ contractName }) -- contractName must be a string\"\n  )\n  invariant(\n    typeof blockHeight === \"number\",\n    \"generateDependencyPin({ blockHeight }) -- blockHeight must be a number\"\n  )\n\n  let horizon = [generateImport({contractName, address})]\n\n  for (const horizonImport of horizon) {\n    let account = await send(\n      [\n        getAccount(\n          await config().get(horizonImport.address, horizonImport.address)\n        ),\n        atBlockHeight(blockHeight),\n      ],\n      opts\n    ).then(decode)\n\n    horizonImport.contract = account.contracts?.[horizonImport.contractName]\n\n    if (!horizonImport.contract) {\n      console.error(\"Did not find expected contract\", horizonImport, account)\n      throw new Error(\"Did not find expected contract\")\n    }\n\n    let contractImports = findImports(horizonImport.contract)\n\n    horizon.push(...contractImports)\n  }\n\n  let contractHashes = horizon.map(iport => genHash(iport.contract))\n\n  let contractHashesJoined = contractHashes.join(\"\")\n\n  return genHash(contractHashesJoined)\n}\n\n/**\n * @description Produces a dependency pin for a contract at latest sealed block\n * @param {object} params\n * @param {string} params.address - The address of the account containing the contract\n * @param {string} params.contractName - The name of the contract\n * @param {object} opts - Options to pass to the interaction\n * @returns {Promise<string>} - The dependency pin\n */\nexport async function generateDependencyPinAtLatestSealedBlock(\n  {address, contractName},\n  opts = {}\n) {\n  let latestSealedBlock = await block({sealed: true}, opts)\n  let latestSealedBlockHeight = latestSealedBlock?.height\n\n  return generateDependencyPin(\n    {address, contractName, blockHeight: latestSealedBlockHeight},\n    opts\n  )\n}\n","export function normalizeInteractionTemplateInterface(templateInterface) {\n  if (templateInterface == null) return null\n\n  switch (templateInterface[\"f_version\"]) {\n    case \"1.0.0\":\n      return templateInterface\n\n    default:\n      throw new Error(\n        \"normalizeInteractionTemplateInterface Error: Invalid InteractionTemplateInterface\"\n      )\n  }\n}\n","import {invariant} from \"@onflow/sdk\"\nimport {encode as rlpEncode} from \"@onflow/rlp\"\nimport {genHash} from \"./utils/hash.js\"\nimport {normalizeInteractionTemplateInterface} from \"../normalizers/interaction-template/interaction-template-interface.js\"\n\n/**\n * @description Generates Interaction Template Interface ID for a given Interaction Template Interface\n * \n * @param {object} params\n * @param {object} params.templateInterface - Interaction Template Interface\n * @returns {Promise<string>} - Interaction Template Interface ID\n */\nexport async function generateTemplateInterfaceId({templateInterface}) {\n  invariant(\n    templateInterface != undefined,\n    \"generateTemplateInterfaceId({ templateInterface }) -- templateInterface must be defined\"\n  )\n  invariant(\n    typeof templateInterface === \"object\",\n    \"generateTemplateInterfaceId({ templateInterface }) -- templateInterface must be an object\"\n  )\n  invariant(\n    typeof templateInterface.f_type === \"InteractionTemplateInterface\",\n    \"generateTemplateInterfaceId({ templateInterface }) -- templateInterface object must be an InteractionTemplate\"\n  )\n\n  templateInterface = normalizeInteractionTemplateInterface(templateInterface)\n\n  switch (templateInterface.f_version) {\n    case \"1.0.0\":\n      const interfaceData = templateInterface.data\n\n      const encodedHex = rlpEncode([\n        await genHash(\"InteractionTemplateInterface\"),\n        await genHash(\"1.0.0\"),\n        await genHash(interfaceData.flip),\n        await Promise.all(\n          Object.keys(interfaceData.arguments).map(async argumentLabel => [\n            await genHash(argumentLabel),\n            await genHash(String(interfaceData.arguments[argumentLabel].index)),\n            await genHash(interfaceData.arguments[argumentLabel].type),\n          ])\n        ),\n      ]).toString(\"hex\")\n\n      return genHash(encodedHex)\n\n    default:\n      throw new Error(\n        \"generateTemplateInterfaceId Error: Unsupported templateInterface version\"\n      )\n  }\n}\n","import {generateDependencyPin} from \"./generate-dependency-pin.js\"\nimport {invariant, block} from \"@onflow/sdk\"\nimport {log, LEVELS} from \"@onflow/util-logger\"\nimport {normalizeInteractionTemplate} from \"../normalizers/interaction-template/interaction-template.js\"\n\n/**\n * @description Checks if an Interaction Template's pins match those generated at a block height\n * \n * @param {object} params\n * @param {object} params.template - Interaction Template to check pins for\n * @param {number} params.blockHeight - Block height to check pins at\n * @param {string} params.network - Network to check pins on\n * @param {object} opts\n * @returns {Promise<boolean>} - Whether or not the pins match\n */\nexport async function verifyDependencyPinsSame(\n  {template, blockHeight, network},\n  opts = {}\n) {\n  invariant(\n    template != undefined,\n    \"generateDependencyPin({ template }) -- template must be defined\"\n  )\n  invariant(\n    typeof template === \"object\",\n    \"generateDependencyPin({ template }) -- template must be an object\"\n  )\n  invariant(\n    template.f_type === \"InteractionTemplate\",\n    \"generateDependencyPin({ template }) -- template must be an InteractionTemplate\"\n  )\n\n  template = normalizeInteractionTemplate(template)\n\n  invariant(\n    network != undefined,\n    \"generateDependencyPin({ network }) network must be defined\"\n  )\n  invariant(\n    blockHeight != undefined,\n    \"generateDependencyPin({ blockHeight }) blockHeight must be defined\"\n  )\n  invariant(\n    typeof blockHeight === \"number\",\n    \"generateDependencyPin({ blockHeight }) blockHeight must be a number\"\n  )\n\n  switch (template.f_version) {\n    case \"1.0.0\":\n      let templateDependenciesPlaceholderKeys = Object.keys(\n        template.data.dependencies\n      )\n\n      for (let templateDependencyPlaceholderKey of templateDependenciesPlaceholderKeys) {\n        let templateDependencyPlaceholder =\n          template.data.dependencies[templateDependencyPlaceholderKey]\n\n        let templateDependencyPlaceholderContractNames = Object.keys(\n          templateDependencyPlaceholder\n        )\n\n        for (let templateDependencyPlaceholderContractName of templateDependencyPlaceholderContractNames) {\n          let templateDependencyPlaceholderContractNetworks =\n            template.data.dependencies[templateDependencyPlaceholderKey][\n              templateDependencyPlaceholderContractName\n            ]\n\n          let templateDependency =\n            templateDependencyPlaceholderContractNetworks[network]\n          if (typeof templateDependency === \"undefined\") continue\n\n          let pin = await generateDependencyPin(\n            {\n              address: templateDependency.address,\n              contractName: templateDependency.contract,\n              blockHeight,\n            },\n            opts\n          )\n\n          if (pin !== templateDependency.pin) {\n            log({\n              title: \"verifyDependencyPinsSame Debug Error\",\n              message: `Could not recompute and match dependency pin.\n                                address: ${templateDependency.address} | contract: ${templateDependency.contract}\n                                computed: ${pin}\n                                template: ${templateDependency.pin}\n                            `,\n              level: LEVELS.debug,\n            })\n            return false\n          }\n        }\n      }\n\n      return true\n\n    default:\n      throw new Error(\n        \"verifyDependencyPinsSame Error: Unsupported template version\"\n      )\n  }\n}\n\n/**\n * @description Checks if an Interaction Template's pins match those generated at the latest block height\n * \n * @param {object} params\n * @param {object} params.template - Interaction Template to check pins for\n * @param {string} params.network - Network to check pins on\n * @param {object} opts\n * @returns {Promise<boolean>} - Whether or not the pins match\n */\nexport async function verifyDependencyPinsSameAtLatestSealedBlock(\n  {template, network},\n  opts = {}\n) {\n  let latestSealedBlock = await block({sealed: true})\n  let latestSealedBlockHeight = latestSealedBlock?.height\n\n  return verifyDependencyPinsSame(\n    {template, network, blockHeight: latestSealedBlockHeight},\n    opts\n  )\n}\n","import {invariant} from \"@onflow/sdk\"\n\n/**\n * @description Get Interaction Template argument message\n * \n * @param {object} params\n * @param {string} params.localization [localization=\"en-US\"] - Localization code\n * @param {string} params.messageKey - Message key\n * @param {object} params.template - Interaction Template\n * @returns {string} - Message\n */\nexport function getTemplateMessage({\n  localization = \"en-US\",\n  messageKey,\n  template,\n}) {\n  invariant(\n    messageKey,\n    \"getTemplateMessage({ messageKey }) -- messageKey must be defined\"\n  )\n  invariant(\n    typeof messageKey === \"string\",\n    \"getTemplateMessage({ messageKey }) -- messageKey must be a string\"\n  )\n\n  invariant(\n    localization,\n    \"getTemplateMessage({ localization }) -- localization must be defined\"\n  )\n  invariant(\n    typeof localization === \"string\",\n    \"getTemplateMessage({ localization }) -- localization must be a string\"\n  )\n\n  invariant(\n    template != undefined,\n    \"getTemplateMessage({ template }) -- template must be defined\"\n  )\n  invariant(\n    typeof template === \"object\",\n    \"getTemplateMessage({ template }) -- template must be an object\"\n  )\n  invariant(\n    typeof template.f_type === \"InteractionTemplate\",\n    \"getTemplateMessage({ template }) -- template object must be an InteractionTemplate\"\n  )\n\n  const messages = template?.data?.messages\n\n  return messages?.[messageKey]?.i18n?.[localization]\n}\n","import {invariant} from \"@onflow/sdk\"\n\n/**\n * @description Gets Interaction Template argument message by message key, argument label, and localization\n * \n * @param {object} opts\n * @param {string} opts.localization [localization=\"en-US\"] - Localization to get message for\n * @param {string} opts.argumentLabel - Argument label to get message for\n * @param {string} opts.messageKey - Message key to get message for\n * @param {object} opts.template - Interaction Template to get message from\n * @returns {string} - Message\n */\nexport function getTemplateArgumentMessage({\n  localization = \"en-US\",\n  argumentLabel,\n  messageKey,\n  template,\n}) {\n  invariant(\n    messageKey,\n    \"getTemplateArgumentMessage({ messageKey }) -- messageKey must be defined\"\n  )\n  invariant(\n    typeof messageKey === \"string\",\n    \"getTemplateArgumentMessage({ messageKey }) -- messageKey must be a string\"\n  )\n\n  invariant(\n    argumentLabel,\n    \"getTemplateArgumentMessage({ argumentLabel }) -- argumentLabel must be defined\"\n  )\n  invariant(\n    typeof messageKey === \"string\",\n    \"getTemplateArgumentMessage({ argumentLabel }) -- argumentLabel must be a string\"\n  )\n\n  invariant(\n    localization,\n    \"getTemplateArgumentMessage({ localization }) -- localization must be defined\"\n  )\n  invariant(\n    typeof localization === \"string\",\n    \"getTemplateArgumentMessage({ localization }) -- localization must be a string\"\n  )\n\n  invariant(\n    template != undefined,\n    \"getTemplateArgumentMessage({ template }) -- template must be defined\"\n  )\n  invariant(\n    typeof template === \"object\",\n    \"getTemplateArgumentMessage({ template }) -- template must be an object\"\n  )\n  invariant(\n    typeof template.f_type === \"InteractionTemplate\",\n    \"getTemplateArgumentMessage({ template }) -- template object must be an InteractionTemplate\"\n  )\n\n  const args = template?.data?.arguments\n\n  return args?.[argumentLabel]?.messages?.[messageKey]?.i18n?.[localization]\n}\n","import \"./default-config\"\nexport {VERSION} from \"./VERSION\"\nexport {query} from \"./exec/query\"\nexport {mutate} from \"./exec/mutate\"\nexport {verifyUserSignatures} from \"./exec/verify\"\nexport {serialize} from \"./serialize\"\nexport {transaction as tx} from \"./transaction\"\nexport {events} from \"./events\"\nexport {pluginRegistry} from \"./current-user/exec-service/plugins\"\n\nimport {currentUser} from \"./current-user\"\nexport {currentUser}\n\nimport {discovery} from \"./discovery\"\nexport {discovery}\n\nexport const authenticate = (opts = {}) => currentUser().authenticate(opts)\nexport const unauthenticate = () => currentUser().unauthenticate()\nexport const reauthenticate = (opts = {}) => {\n  currentUser().unauthenticate()\n  return currentUser().authenticate(opts)\n}\nexport const signUp = (opts = {}) => currentUser().authenticate(opts)\nexport const logIn = (opts = {}) => currentUser().authenticate(opts)\n\nexport const authz = currentUser().authorization\n\nimport * as types from \"@onflow/types\"\n/**\n * @type {Types}\n */\nexport const t = types\n\nimport * as WalletUtils from \"./wallet-utils\"\nexport {WalletUtils}\n\nimport * as AppUtils from \"./app-utils\"\nexport {AppUtils}\n\nimport * as InteractionTemplateUtils from \"./interaction-template-utils\"\nexport {InteractionTemplateUtils}\n\nexport {getChainId} from \"./utils\"\n\nexport {TestUtils} from \"@onflow/sdk\"\nexport {config} from \"@onflow/config\"\nexport {send} from \"@onflow/sdk\"\nexport {decode} from \"@onflow/sdk\"\nexport {account} from \"@onflow/sdk\"\nexport {block} from \"@onflow/sdk\"\nexport {isOk, isBad, why, pipe, build} from \"@onflow/sdk\"\nexport {withPrefix, sansPrefix, display} from \"@onflow/util-address\"\nexport {template as cadence} from \"@onflow/util-template\"\nexport {template as cdc} from \"@onflow/util-template\"\nexport {createSignableVoucher} from \"@onflow/sdk\"\nexport {voucherIntercept} from \"@onflow/sdk\"\nexport {voucherToTxId} from \"@onflow/sdk\"\n\n// builders\nexport {transaction} from \"@onflow/sdk\"\nexport {script} from \"@onflow/sdk\"\nexport {ping} from \"@onflow/sdk\"\nexport {atBlockHeight} from \"@onflow/sdk\"\nexport {atBlockId} from \"@onflow/sdk\"\nexport {getAccount} from \"@onflow/sdk\"\nexport {getEvents} from \"@onflow/sdk\"\nexport {getEventsAtBlockHeightRange} from \"@onflow/sdk\"\nexport {getEventsAtBlockIds} from \"@onflow/sdk\"\nexport {getBlock} from \"@onflow/sdk\"\nexport {getBlockHeader} from \"@onflow/sdk\"\nexport {getCollection} from \"@onflow/sdk\"\nexport {getTransactionStatus} from \"@onflow/sdk\"\nexport {getTransaction} from \"@onflow/sdk\"\nexport {getNetworkParameters} from \"@onflow/sdk\"\nexport {authorizations, authorization} from \"@onflow/sdk\"\nexport {args, arg} from \"@onflow/sdk\"\nexport {proposer} from \"@onflow/sdk\"\nexport {payer} from \"@onflow/sdk\"\nexport {limit} from \"@onflow/sdk\"\nexport {ref} from \"@onflow/sdk\"\nexport {params, param} from \"@onflow/sdk\"\nexport {validator} from \"@onflow/sdk\"\nexport {invariant} from \"@onflow/sdk\"\n\n/**\n * @typedef {object} Types\n * @property {any} Identity - Represents the Identity type.\n * @property {any} UInt - Represents the UInt type.\n * @property {any} Int - Represents the Int type.\n * @property {any} UInt8 - Represents the UInt8 type.\n * @property {any} Int8 - Represents the Int8 type.\n * @property {any} UInt16 - Represents the UInt16 type.\n * @property {any} Int16 - Represents the Int16 type.\n * @property {any} UInt32 - Represents the UInt32 type.\n * @property {any} Int32 - Represents the Int32 type.\n * @property {any} UInt64 - Represents the UInt64 type.\n * @property {any} Int64 - Represents the Int64 type.\n * @property {any} UInt128 - Represents the UInt128 type.\n * @property {any} Int128 - Represents the Int128 type.\n * @property {any} UInt256 - Represents the UInt256 type.\n * @property {any} Int256 - Represents the Int256 type.\n * @property {any} Word8 - Represents the Word8 type.\n * @property {any} Word16 - Represents the Word16 type.\n * @property {any} Word32 - Represents the Word32 type.\n * @property {any} Word64 - Represents the Word64 type.\n * @property {any} UFix64 - Represents the UFix64 type.\n * @property {any} Fix64 - Represents the Fix64 type.\n * @property {any} String - Represents the String type.\n * @property {any} Character - Represents the Character type.\n * @property {any} Bool - Represents the Bool type.\n * @property {any} Address - Represents the Address type.\n * @property {any} Void - Represents the Void type.\n * @property {any} Optional - Represents the Optional type.\n * @property {any} Reference - Represents the Reference type.\n * @property {any} Array - Represents the Array type.\n * @property {any} Dictionary - Represents the Dictionary type.\n * @property {any} Event - Represents the Event type.\n * @property {any} Resource - Represents the Resource type.\n * @property {any} Struct - Represents the Struct type.\n * @property {any} Enum - Represents the Enum type.\n * @property {any} Path - Represents the Path type.\n */\n\n/**\n * @callback ArgsFn\n * @param {ArgFn} arg - Argument function to define a single argument\n * @param {Types} t - Cadence Types object used to define the type\n * @returns {any[]}\n */\n\n/**\n * @callback ArgFn\n * @param {any} value - the value of the argument\n * @param {any} type - the cadence type of the value\n * @returns {any}\n */"],"names":["getChainIdFromAccessNode","response","sdk","send","getNetworkParameters","then","decode","chainId","setChainIdDefault","network","config","put","getChainId","get","log","deprecate","pkg","subject","message","transition","invariant","watchForChainIdChanges","subscribe","configSubscriber","nextAccessNode","prevAccessNode","bind","isAndroid","navigator","test","userAgent","isSmallIOS","isLargeIOS","isIOS","isMobile","isServerSide","window","SESSION_STORAGE","can","key","JSON","parse","sessionStorage","getItem","value","setItem","stringify","configLens","regex","Object","fromEntries","entries","where","map","_ref","replace","VERSION","is","type","d","isRequired","isObject","isString","isFunc","isNumber","normalizeArgs","ax","arg","t","httpDocumentResolver","url","res","fetchTransport","e","Error","document","ok","json","DOCUMENT_RESOLVERS","Map","retrieve","_ref2","documentResolversFromConfig","keys","resolverFromConfig","resolverProtocol","set","urlParts","exec","protocol","resolver","normalizeInteractionTemplate","template","deriveCadenceByNetwork","undefined","f_type","f_version","networkDependencies","data","dependencies","dependencyPlaceholder","dependencyNetworkContracts","values","length","dependencyContract","dependencyContractForNetwork","address","reduce","cadence","placeholder","RegExp","deriveDependencies","derivedDependencies","dependencyPlaceholderKeys","dependencyPlaceholderKey","dependencyPlaceholderContractsKeys","dependencyPlaceholderContract","dependency","withPrefix","prepTemplateOpts","opts","pre","preMutate","preQuery","query","arguments","overload","script","args","limit","fetchServices","servicesURL","code","URL","searchParams","append","resp","fetch","method","headers","Array","isArray","services","authorizations","service","push","keyId","provider","id","mergeServices","sx1","sx2","SERVICE_PRAGMA","f_vsn","IDENTITY_PRAGMA","USER_PRAGMA","POLLING_RESPONSE_PRAGMA","COMPOSITE_SIGNATURE_PRAGMA","normalizeAuthn","uid","endpoint","authn","pid","addr","name","icon","normalizeAuthz","identity","params","normalizePreAuthz","normalizeFrame","old","normalizeBackChannelRpc","normalizeOpenId","normalizeUserSignature","normalizeLocalView","normalizeAccountProof","normalizeAuthnRefresh","serviceNormalizers","authz","frame","normalizeService","normalized","error","console","deriveCompositeId","rlp","encode","toString","normalizeData","paddr","findService","find","buildUser","hks","cid","loggedIn","expiresAt","expires","serviceOfType","serviceEndpoint","location","origin","fetchService","body","normalizePollingResponse","status","reason","compositeSignature","updates","authorizationUpdates","local","OPTIONS","serviceMethod","poll","canContinue","visibilityState","Promise","r","setTimeout","FRAME","FRAME_STYLES","renderFrame","src","getElementById","$frame","createElement","allow","frameBorder","style","cssText","unmount","remove","contentWindow","POP","popup","previousUrl","popupWindow","windowName","win","w","h","y","top","outerHeight","screenY","x","outerWidth","screenX","open","renderPop","closed","focus","close","tab","renderTab","VIEWS","execLocal","execHttpPost","fclVersion","_","serviceResponse","catch","CLOSE_EVENT","READY_EVENT","RESPONSE_EVENT","toLowerCase","IGNORE","Set","was","want","warn","buildMessageHandler","onReady","onResponse","onMessage","has","noop","onClose","handler","addEventListener","removeEventListener","msg","postMessage","execIframeRPC","resolve","reject","includeOlderJsonRpcCall","deprecated","jsonrpc","_ref3","_ref4","result","pop","$pop","timer","setInterval","clearInterval","execPopRPC","redir","$tab","execTabRPC","extension","execExtRPC","CORE_STRATEGIES","supportedPlugins","supportedServicePlugins","validateDiscoveryPlugin","servicePlugin","serviceStrategy","ds","discoveryServices","ServiceRegistry","strategies","add","includes","setServices","title","level","LEVELS","getServices","getStrategy","getStrategies","freeze","validatePlugins","plugins","pluginsArray","p","PluginRegistry","pluginsMap","getPlugins","serviceRegistry","pluginRegistry","execStrategy","strategy","execService","execConfig","app","client","fclLibrary","hostname","normalizeCompositeSignature","sansPrefix","signature","sig","makeDiscoveryServices","extensionServices","fcl_extensions","getDiscoveryService","discoveryAuthnInclude","discoveryWalletMethod","first","types","Boolean","include","clientServices","supportedStrategies","SERVICE_ACTOR_KEYS","AUTHN","RESULTS","SNAPSHOT","UPDATED","UPDATE_RESULTS","fact","fetchServicesFromDiscovery","results","HANDLERS","INIT","ctx","readyState","onload","_letter","merge","broadcast","all","SUBSCRIBE","letter","from","UNSUBSCRIBE","unsubscribe","reply","spawnProviders","spawn","cb","subscriber","snapshot","snapshoter","update","discovery","isFn","NAME","SET_CURRENT_USER","DEL_CURRENT_USER","DATA","getStoredUser","storage","fallback","stored","removeItem","user","notExpired","spawnCurrentUser","Date","now","getAccountProofData","accountProofDataResolver","accountProofData","appIdentifier","nonce","makeConfig","authenticate","is_installed","requires_install","href","install_link","discoveryService","refreshService","unauthenticate","normalizePreAuthzResponse","proposer","payer","authorization","resolvePreAuthz","axs","az","role","tempId","join","signingFunction","signable","authorizer","account","preSignable","preAuthz","windowRef","sequenceNum","callback","EXIT","self","receive","tag","expectReply","timeout","resolveArgument","Address","makeSignable","signUserMessage","signingService","compSigs","currentUser","mutate","txid","transaction","onMessageFromFCL","messageType","buildData","interaction","internal","sendMsgToFCL","parent","opener","ready","approve","decline","redirect","CompositeSignature","Number","rightPaddedHexBuffer","pad","Buffer","padEnd","leftPaddedHexBuffer","padStart","addressBuffer","nonceBuffer","encodeAccountProof","includeDomainTag","ACCOUNT_PROOF_DOMAIN_TAG","concat","rlpEncode","injectExtService","ACCOUNT_PROOF","USER_SIGNATURE","validateArgs","signatures","every","i","arr","cs","getVerifySignaturesScript","verifyFunction","fclCryptoContract","verifyAccountProof","signaturesArr","keyIndices","el","String","Int","verifyUserSignatures","verify","serialize","resolveFunction","defaultResolve","pipe","createSignableVoucher","RATE","POLL","fetchTxStatus","transactionId","fclSend","getTransactionStatus","isExpired","tx","isSealed","isExecuted","isFinalized","isPending","isUnknown","isDiff","cur","next","sendSelf","fatalError","scoped","spawnTransaction","once","predicate","innerOnce","suppress","unsub","txStatus","statusCode","errorMessage","onceFinalized","onceExecuted","onceSealed","TICK","HIGH_WATER_MARK","scheduleTick","hasSubs","hwm","block","height","getEventsAtBlockHeightRange","clearTimeout","delete","spawnEvents","events","copy","I","O","o","oi","ii","copy_1","defineProperty","exports","_copy","_interopRequireDefault","require$$0","obj","__esModule","chi","A","C","_x","xy","x1","x2","_default","ROUND_CONSTANTS","Uint32Array","_roundConstants","iota","roundIndex","PI_SHUFFLES","RHO_OFFSETS","_piShuffles","_rhoOffsets","require$$1","require$$2","rhoPi","W","H","L","Wi","ri","j","theta","D","x20","x21","x22","x23","x24","_chi","_iota","_rhoPi","_theta","require$$3","permute","fill","_buffer","_permute","xorWords","readWords","Sponge","_this","capacity","padding","keccak","stateSize","blockSize","queueSize","queueOffset","state","queue","allocUnsafe","absorb","buffer","squeeze","options","output","offset","slice","reset","SHAKE","SHA3Hash","SHA3","Keccak","_sponge","createHash","allowedSizes","defaultSize","Hash","size","constructor","sponge","input","encoding","isBuffer","TypeError","digest","formatOrOptions","format","genHash","utf8String","sha","generateTemplateId","templateData","messages","messageKey","i18n","i18nkeylanguage","dependencyAddressPlaceholder","dependencyContractNetwork","contract","fq_address","pin","pin_block_height","_arguments","argumentLabel","index","balance","argumentMessageKey","encodedHex","interface","getInteractionTemplateAudits","auditors","recomputedTemplateID","debug","_auditors","FlowInteractionAuditContract","flowInteractionAuditContract","fclNetwork","audits","generateImport","contractName","findImports","imports","importsReg","fileImports","match","fileImport","importLineReg","importLine","contractsReg","contracts","generateDependencyPin","blockHeight","horizon","horizonImport","getAccount","atBlockHeight","contractImports","contractHashes","iport","contractHashesJoined","generateDependencyPinAtLatestSealedBlock","latestSealedBlock","sealed","latestSealedBlockHeight","normalizeInteractionTemplateInterface","templateInterface","generateTemplateInterfaceId","interfaceData","flip","verifyDependencyPinsSame","templateDependenciesPlaceholderKeys","templateDependencyPlaceholderKey","templateDependencyPlaceholder","templateDependencyPlaceholderContractNames","templateDependencyPlaceholderContractName","templateDependencyPlaceholderContractNetworks","templateDependency","verifyDependencyPinsSameAtLatestSealedBlock","getTemplateMessage","localization","getTemplateArgumentMessage","reauthenticate","signUp","logIn"],"mappings":"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"}